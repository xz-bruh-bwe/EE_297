// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lane_seg_top_lane_seg_top,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=15.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.950000,HLS_SYN_LAT=551974,HLS_SYN_TPT=none,HLS_SYN_MEM=148,HLS_SYN_DSP=0,HLS_SYN_FF=15492,HLS_SYN_LUT=38763,HLS_VERSION=2023_1}" *)

module lane_seg_top (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_in_AWVALID,
        m_axi_gmem_in_AWREADY,
        m_axi_gmem_in_AWADDR,
        m_axi_gmem_in_AWID,
        m_axi_gmem_in_AWLEN,
        m_axi_gmem_in_AWSIZE,
        m_axi_gmem_in_AWBURST,
        m_axi_gmem_in_AWLOCK,
        m_axi_gmem_in_AWCACHE,
        m_axi_gmem_in_AWPROT,
        m_axi_gmem_in_AWQOS,
        m_axi_gmem_in_AWREGION,
        m_axi_gmem_in_AWUSER,
        m_axi_gmem_in_WVALID,
        m_axi_gmem_in_WREADY,
        m_axi_gmem_in_WDATA,
        m_axi_gmem_in_WSTRB,
        m_axi_gmem_in_WLAST,
        m_axi_gmem_in_WID,
        m_axi_gmem_in_WUSER,
        m_axi_gmem_in_ARVALID,
        m_axi_gmem_in_ARREADY,
        m_axi_gmem_in_ARADDR,
        m_axi_gmem_in_ARID,
        m_axi_gmem_in_ARLEN,
        m_axi_gmem_in_ARSIZE,
        m_axi_gmem_in_ARBURST,
        m_axi_gmem_in_ARLOCK,
        m_axi_gmem_in_ARCACHE,
        m_axi_gmem_in_ARPROT,
        m_axi_gmem_in_ARQOS,
        m_axi_gmem_in_ARREGION,
        m_axi_gmem_in_ARUSER,
        m_axi_gmem_in_RVALID,
        m_axi_gmem_in_RREADY,
        m_axi_gmem_in_RDATA,
        m_axi_gmem_in_RLAST,
        m_axi_gmem_in_RID,
        m_axi_gmem_in_RUSER,
        m_axi_gmem_in_RRESP,
        m_axi_gmem_in_BVALID,
        m_axi_gmem_in_BREADY,
        m_axi_gmem_in_BRESP,
        m_axi_gmem_in_BID,
        m_axi_gmem_in_BUSER,
        m_axi_gmem_out_AWVALID,
        m_axi_gmem_out_AWREADY,
        m_axi_gmem_out_AWADDR,
        m_axi_gmem_out_AWID,
        m_axi_gmem_out_AWLEN,
        m_axi_gmem_out_AWSIZE,
        m_axi_gmem_out_AWBURST,
        m_axi_gmem_out_AWLOCK,
        m_axi_gmem_out_AWCACHE,
        m_axi_gmem_out_AWPROT,
        m_axi_gmem_out_AWQOS,
        m_axi_gmem_out_AWREGION,
        m_axi_gmem_out_AWUSER,
        m_axi_gmem_out_WVALID,
        m_axi_gmem_out_WREADY,
        m_axi_gmem_out_WDATA,
        m_axi_gmem_out_WSTRB,
        m_axi_gmem_out_WLAST,
        m_axi_gmem_out_WID,
        m_axi_gmem_out_WUSER,
        m_axi_gmem_out_ARVALID,
        m_axi_gmem_out_ARREADY,
        m_axi_gmem_out_ARADDR,
        m_axi_gmem_out_ARID,
        m_axi_gmem_out_ARLEN,
        m_axi_gmem_out_ARSIZE,
        m_axi_gmem_out_ARBURST,
        m_axi_gmem_out_ARLOCK,
        m_axi_gmem_out_ARCACHE,
        m_axi_gmem_out_ARPROT,
        m_axi_gmem_out_ARQOS,
        m_axi_gmem_out_ARREGION,
        m_axi_gmem_out_ARUSER,
        m_axi_gmem_out_RVALID,
        m_axi_gmem_out_RREADY,
        m_axi_gmem_out_RDATA,
        m_axi_gmem_out_RLAST,
        m_axi_gmem_out_RID,
        m_axi_gmem_out_RUSER,
        m_axi_gmem_out_RRESP,
        m_axi_gmem_out_BVALID,
        m_axi_gmem_out_BREADY,
        m_axi_gmem_out_BRESP,
        m_axi_gmem_out_BID,
        m_axi_gmem_out_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_IN_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_IN_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_IN_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_IN_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_IN_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_IN_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_IN_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_IN_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_IN_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_IN_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_IN_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_OUT_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUT_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_OUT_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_OUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUT_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_OUT_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_OUT_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_IN_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_OUT_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_in_AWVALID;
input   m_axi_gmem_in_AWREADY;
output  [C_M_AXI_GMEM_IN_ADDR_WIDTH - 1:0] m_axi_gmem_in_AWADDR;
output  [C_M_AXI_GMEM_IN_ID_WIDTH - 1:0] m_axi_gmem_in_AWID;
output  [7:0] m_axi_gmem_in_AWLEN;
output  [2:0] m_axi_gmem_in_AWSIZE;
output  [1:0] m_axi_gmem_in_AWBURST;
output  [1:0] m_axi_gmem_in_AWLOCK;
output  [3:0] m_axi_gmem_in_AWCACHE;
output  [2:0] m_axi_gmem_in_AWPROT;
output  [3:0] m_axi_gmem_in_AWQOS;
output  [3:0] m_axi_gmem_in_AWREGION;
output  [C_M_AXI_GMEM_IN_AWUSER_WIDTH - 1:0] m_axi_gmem_in_AWUSER;
output   m_axi_gmem_in_WVALID;
input   m_axi_gmem_in_WREADY;
output  [C_M_AXI_GMEM_IN_DATA_WIDTH - 1:0] m_axi_gmem_in_WDATA;
output  [C_M_AXI_GMEM_IN_WSTRB_WIDTH - 1:0] m_axi_gmem_in_WSTRB;
output   m_axi_gmem_in_WLAST;
output  [C_M_AXI_GMEM_IN_ID_WIDTH - 1:0] m_axi_gmem_in_WID;
output  [C_M_AXI_GMEM_IN_WUSER_WIDTH - 1:0] m_axi_gmem_in_WUSER;
output   m_axi_gmem_in_ARVALID;
input   m_axi_gmem_in_ARREADY;
output  [C_M_AXI_GMEM_IN_ADDR_WIDTH - 1:0] m_axi_gmem_in_ARADDR;
output  [C_M_AXI_GMEM_IN_ID_WIDTH - 1:0] m_axi_gmem_in_ARID;
output  [7:0] m_axi_gmem_in_ARLEN;
output  [2:0] m_axi_gmem_in_ARSIZE;
output  [1:0] m_axi_gmem_in_ARBURST;
output  [1:0] m_axi_gmem_in_ARLOCK;
output  [3:0] m_axi_gmem_in_ARCACHE;
output  [2:0] m_axi_gmem_in_ARPROT;
output  [3:0] m_axi_gmem_in_ARQOS;
output  [3:0] m_axi_gmem_in_ARREGION;
output  [C_M_AXI_GMEM_IN_ARUSER_WIDTH - 1:0] m_axi_gmem_in_ARUSER;
input   m_axi_gmem_in_RVALID;
output   m_axi_gmem_in_RREADY;
input  [C_M_AXI_GMEM_IN_DATA_WIDTH - 1:0] m_axi_gmem_in_RDATA;
input   m_axi_gmem_in_RLAST;
input  [C_M_AXI_GMEM_IN_ID_WIDTH - 1:0] m_axi_gmem_in_RID;
input  [C_M_AXI_GMEM_IN_RUSER_WIDTH - 1:0] m_axi_gmem_in_RUSER;
input  [1:0] m_axi_gmem_in_RRESP;
input   m_axi_gmem_in_BVALID;
output   m_axi_gmem_in_BREADY;
input  [1:0] m_axi_gmem_in_BRESP;
input  [C_M_AXI_GMEM_IN_ID_WIDTH - 1:0] m_axi_gmem_in_BID;
input  [C_M_AXI_GMEM_IN_BUSER_WIDTH - 1:0] m_axi_gmem_in_BUSER;
output   m_axi_gmem_out_AWVALID;
input   m_axi_gmem_out_AWREADY;
output  [C_M_AXI_GMEM_OUT_ADDR_WIDTH - 1:0] m_axi_gmem_out_AWADDR;
output  [C_M_AXI_GMEM_OUT_ID_WIDTH - 1:0] m_axi_gmem_out_AWID;
output  [7:0] m_axi_gmem_out_AWLEN;
output  [2:0] m_axi_gmem_out_AWSIZE;
output  [1:0] m_axi_gmem_out_AWBURST;
output  [1:0] m_axi_gmem_out_AWLOCK;
output  [3:0] m_axi_gmem_out_AWCACHE;
output  [2:0] m_axi_gmem_out_AWPROT;
output  [3:0] m_axi_gmem_out_AWQOS;
output  [3:0] m_axi_gmem_out_AWREGION;
output  [C_M_AXI_GMEM_OUT_AWUSER_WIDTH - 1:0] m_axi_gmem_out_AWUSER;
output   m_axi_gmem_out_WVALID;
input   m_axi_gmem_out_WREADY;
output  [C_M_AXI_GMEM_OUT_DATA_WIDTH - 1:0] m_axi_gmem_out_WDATA;
output  [C_M_AXI_GMEM_OUT_WSTRB_WIDTH - 1:0] m_axi_gmem_out_WSTRB;
output   m_axi_gmem_out_WLAST;
output  [C_M_AXI_GMEM_OUT_ID_WIDTH - 1:0] m_axi_gmem_out_WID;
output  [C_M_AXI_GMEM_OUT_WUSER_WIDTH - 1:0] m_axi_gmem_out_WUSER;
output   m_axi_gmem_out_ARVALID;
input   m_axi_gmem_out_ARREADY;
output  [C_M_AXI_GMEM_OUT_ADDR_WIDTH - 1:0] m_axi_gmem_out_ARADDR;
output  [C_M_AXI_GMEM_OUT_ID_WIDTH - 1:0] m_axi_gmem_out_ARID;
output  [7:0] m_axi_gmem_out_ARLEN;
output  [2:0] m_axi_gmem_out_ARSIZE;
output  [1:0] m_axi_gmem_out_ARBURST;
output  [1:0] m_axi_gmem_out_ARLOCK;
output  [3:0] m_axi_gmem_out_ARCACHE;
output  [2:0] m_axi_gmem_out_ARPROT;
output  [3:0] m_axi_gmem_out_ARQOS;
output  [3:0] m_axi_gmem_out_ARREGION;
output  [C_M_AXI_GMEM_OUT_ARUSER_WIDTH - 1:0] m_axi_gmem_out_ARUSER;
input   m_axi_gmem_out_RVALID;
output   m_axi_gmem_out_RREADY;
input  [C_M_AXI_GMEM_OUT_DATA_WIDTH - 1:0] m_axi_gmem_out_RDATA;
input   m_axi_gmem_out_RLAST;
input  [C_M_AXI_GMEM_OUT_ID_WIDTH - 1:0] m_axi_gmem_out_RID;
input  [C_M_AXI_GMEM_OUT_RUSER_WIDTH - 1:0] m_axi_gmem_out_RUSER;
input  [1:0] m_axi_gmem_out_RRESP;
input   m_axi_gmem_out_BVALID;
output   m_axi_gmem_out_BREADY;
input  [1:0] m_axi_gmem_out_BRESP;
input  [C_M_AXI_GMEM_OUT_ID_WIDTH - 1:0] m_axi_gmem_out_BID;
input  [C_M_AXI_GMEM_OUT_BUSER_WIDTH - 1:0] m_axi_gmem_out_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] image_r;
wire   [63:0] out0;
wire   [31:0] ctrl;
wire   [31:0] status_i;
reg   [31:0] status_o;
reg    status_o_ap_vld;
reg    magic_ap_vld;
reg   [63:0] out0_read_reg_141;
reg   [63:0] image_r_read_reg_146;
wire    grp_encoder0_c1_fu_116_ap_start;
wire    grp_encoder0_c1_fu_116_ap_done;
wire    grp_encoder0_c1_fu_116_ap_idle;
wire    grp_encoder0_c1_fu_116_ap_ready;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_in_AWVALID;
wire   [63:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWADDR;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWID;
wire   [31:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWLEN;
wire   [2:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWSIZE;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWBURST;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWLOCK;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWCACHE;
wire   [2:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWPROT;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWQOS;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWREGION;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_AWUSER;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_in_WVALID;
wire   [15:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_WDATA;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_WSTRB;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_in_WLAST;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_WID;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_WUSER;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_in_ARVALID;
wire   [63:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARADDR;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARID;
wire   [31:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARLEN;
wire   [2:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARSIZE;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARBURST;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARLOCK;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARCACHE;
wire   [2:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARPROT;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARQOS;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARREGION;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_in_ARUSER;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_in_RREADY;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_in_BREADY;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_out_AWVALID;
wire   [63:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWADDR;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWID;
wire   [31:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWLEN;
wire   [2:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWSIZE;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWBURST;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWLOCK;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWCACHE;
wire   [2:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWPROT;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWQOS;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWREGION;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_AWUSER;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_out_WVALID;
wire   [15:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_WDATA;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_WSTRB;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_out_WLAST;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_WID;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_WUSER;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_out_ARVALID;
wire   [63:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARADDR;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARID;
wire   [31:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARLEN;
wire   [2:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARSIZE;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARBURST;
wire   [1:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARLOCK;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARCACHE;
wire   [2:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARPROT;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARQOS;
wire   [3:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARREGION;
wire   [0:0] grp_encoder0_c1_fu_116_m_axi_gmem_out_ARUSER;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_out_RREADY;
wire    grp_encoder0_c1_fu_116_m_axi_gmem_out_BREADY;
wire    gmem_in_AWREADY;
wire    gmem_in_WREADY;
reg    gmem_in_ARVALID;
wire    gmem_in_ARREADY;
wire    gmem_in_RVALID;
reg    gmem_in_RREADY;
wire   [15:0] gmem_in_RDATA;
wire   [9:0] gmem_in_RFIFONUM;
wire    gmem_in_BVALID;
reg    gmem_out_AWVALID;
wire    gmem_out_AWREADY;
reg    gmem_out_WVALID;
wire    gmem_out_WREADY;
wire    gmem_out_ARREADY;
wire    gmem_out_RVALID;
wire   [15:0] gmem_out_RDATA;
wire   [9:0] gmem_out_RFIFONUM;
wire    gmem_out_BVALID;
reg    gmem_out_BREADY;
reg    grp_encoder0_c1_fu_116_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_fu_126_p3;
wire   [31:0] or_ln55_fu_134_p2;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_encoder0_c1_fu_116_ap_start_reg = 1'b0;
end

lane_seg_top_encoder0_c1 grp_encoder0_c1_fu_116(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_encoder0_c1_fu_116_ap_start),
    .ap_done(grp_encoder0_c1_fu_116_ap_done),
    .ap_idle(grp_encoder0_c1_fu_116_ap_idle),
    .ap_ready(grp_encoder0_c1_fu_116_ap_ready),
    .m_axi_gmem_in_AWVALID(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWVALID),
    .m_axi_gmem_in_AWREADY(1'b0),
    .m_axi_gmem_in_AWADDR(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWADDR),
    .m_axi_gmem_in_AWID(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWID),
    .m_axi_gmem_in_AWLEN(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWLEN),
    .m_axi_gmem_in_AWSIZE(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWSIZE),
    .m_axi_gmem_in_AWBURST(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWBURST),
    .m_axi_gmem_in_AWLOCK(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWLOCK),
    .m_axi_gmem_in_AWCACHE(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWCACHE),
    .m_axi_gmem_in_AWPROT(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWPROT),
    .m_axi_gmem_in_AWQOS(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWQOS),
    .m_axi_gmem_in_AWREGION(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWREGION),
    .m_axi_gmem_in_AWUSER(grp_encoder0_c1_fu_116_m_axi_gmem_in_AWUSER),
    .m_axi_gmem_in_WVALID(grp_encoder0_c1_fu_116_m_axi_gmem_in_WVALID),
    .m_axi_gmem_in_WREADY(1'b0),
    .m_axi_gmem_in_WDATA(grp_encoder0_c1_fu_116_m_axi_gmem_in_WDATA),
    .m_axi_gmem_in_WSTRB(grp_encoder0_c1_fu_116_m_axi_gmem_in_WSTRB),
    .m_axi_gmem_in_WLAST(grp_encoder0_c1_fu_116_m_axi_gmem_in_WLAST),
    .m_axi_gmem_in_WID(grp_encoder0_c1_fu_116_m_axi_gmem_in_WID),
    .m_axi_gmem_in_WUSER(grp_encoder0_c1_fu_116_m_axi_gmem_in_WUSER),
    .m_axi_gmem_in_ARVALID(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARVALID),
    .m_axi_gmem_in_ARREADY(gmem_in_ARREADY),
    .m_axi_gmem_in_ARADDR(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARADDR),
    .m_axi_gmem_in_ARID(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARID),
    .m_axi_gmem_in_ARLEN(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARLEN),
    .m_axi_gmem_in_ARSIZE(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARSIZE),
    .m_axi_gmem_in_ARBURST(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARBURST),
    .m_axi_gmem_in_ARLOCK(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARLOCK),
    .m_axi_gmem_in_ARCACHE(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARCACHE),
    .m_axi_gmem_in_ARPROT(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARPROT),
    .m_axi_gmem_in_ARQOS(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARQOS),
    .m_axi_gmem_in_ARREGION(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARREGION),
    .m_axi_gmem_in_ARUSER(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARUSER),
    .m_axi_gmem_in_RVALID(gmem_in_RVALID),
    .m_axi_gmem_in_RREADY(grp_encoder0_c1_fu_116_m_axi_gmem_in_RREADY),
    .m_axi_gmem_in_RDATA(gmem_in_RDATA),
    .m_axi_gmem_in_RLAST(1'b0),
    .m_axi_gmem_in_RID(1'd0),
    .m_axi_gmem_in_RFIFONUM(gmem_in_RFIFONUM),
    .m_axi_gmem_in_RUSER(1'd0),
    .m_axi_gmem_in_RRESP(2'd0),
    .m_axi_gmem_in_BVALID(1'b0),
    .m_axi_gmem_in_BREADY(grp_encoder0_c1_fu_116_m_axi_gmem_in_BREADY),
    .m_axi_gmem_in_BRESP(2'd0),
    .m_axi_gmem_in_BID(1'd0),
    .m_axi_gmem_in_BUSER(1'd0),
    .input_r(image_r_read_reg_146),
    .m_axi_gmem_out_AWVALID(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWVALID),
    .m_axi_gmem_out_AWREADY(gmem_out_AWREADY),
    .m_axi_gmem_out_AWADDR(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWADDR),
    .m_axi_gmem_out_AWID(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWID),
    .m_axi_gmem_out_AWLEN(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWLEN),
    .m_axi_gmem_out_AWSIZE(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWSIZE),
    .m_axi_gmem_out_AWBURST(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWBURST),
    .m_axi_gmem_out_AWLOCK(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWLOCK),
    .m_axi_gmem_out_AWCACHE(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWCACHE),
    .m_axi_gmem_out_AWPROT(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWPROT),
    .m_axi_gmem_out_AWQOS(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWQOS),
    .m_axi_gmem_out_AWREGION(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWREGION),
    .m_axi_gmem_out_AWUSER(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWUSER),
    .m_axi_gmem_out_WVALID(grp_encoder0_c1_fu_116_m_axi_gmem_out_WVALID),
    .m_axi_gmem_out_WREADY(gmem_out_WREADY),
    .m_axi_gmem_out_WDATA(grp_encoder0_c1_fu_116_m_axi_gmem_out_WDATA),
    .m_axi_gmem_out_WSTRB(grp_encoder0_c1_fu_116_m_axi_gmem_out_WSTRB),
    .m_axi_gmem_out_WLAST(grp_encoder0_c1_fu_116_m_axi_gmem_out_WLAST),
    .m_axi_gmem_out_WID(grp_encoder0_c1_fu_116_m_axi_gmem_out_WID),
    .m_axi_gmem_out_WUSER(grp_encoder0_c1_fu_116_m_axi_gmem_out_WUSER),
    .m_axi_gmem_out_ARVALID(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARVALID),
    .m_axi_gmem_out_ARREADY(1'b0),
    .m_axi_gmem_out_ARADDR(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARADDR),
    .m_axi_gmem_out_ARID(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARID),
    .m_axi_gmem_out_ARLEN(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARLEN),
    .m_axi_gmem_out_ARSIZE(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARSIZE),
    .m_axi_gmem_out_ARBURST(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARBURST),
    .m_axi_gmem_out_ARLOCK(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARLOCK),
    .m_axi_gmem_out_ARCACHE(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARCACHE),
    .m_axi_gmem_out_ARPROT(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARPROT),
    .m_axi_gmem_out_ARQOS(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARQOS),
    .m_axi_gmem_out_ARREGION(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARREGION),
    .m_axi_gmem_out_ARUSER(grp_encoder0_c1_fu_116_m_axi_gmem_out_ARUSER),
    .m_axi_gmem_out_RVALID(1'b0),
    .m_axi_gmem_out_RREADY(grp_encoder0_c1_fu_116_m_axi_gmem_out_RREADY),
    .m_axi_gmem_out_RDATA(16'd0),
    .m_axi_gmem_out_RLAST(1'b0),
    .m_axi_gmem_out_RID(1'd0),
    .m_axi_gmem_out_RFIFONUM(10'd0),
    .m_axi_gmem_out_RUSER(1'd0),
    .m_axi_gmem_out_RRESP(2'd0),
    .m_axi_gmem_out_BVALID(gmem_out_BVALID),
    .m_axi_gmem_out_BREADY(grp_encoder0_c1_fu_116_m_axi_gmem_out_BREADY),
    .m_axi_gmem_out_BRESP(2'd0),
    .m_axi_gmem_out_BID(1'd0),
    .m_axi_gmem_out_BUSER(1'd0),
    .output_r(out0_read_reg_141)
);

lane_seg_top_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .image_r(image_r),
    .out0(out0),
    .ctrl(ctrl),
    .status_o(status_o),
    .status_o_ap_vld(status_o_ap_vld),
    .status_i(status_i),
    .magic(32'd514785282),
    .magic_ap_vld(magic_ap_vld),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

lane_seg_top_gmem_in_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_IN_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_IN_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_IN_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_IN_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_IN_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_IN_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_IN_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_IN_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_IN_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_IN_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_IN_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 10 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_in_m_axi_U(
    .AWVALID(m_axi_gmem_in_AWVALID),
    .AWREADY(m_axi_gmem_in_AWREADY),
    .AWADDR(m_axi_gmem_in_AWADDR),
    .AWID(m_axi_gmem_in_AWID),
    .AWLEN(m_axi_gmem_in_AWLEN),
    .AWSIZE(m_axi_gmem_in_AWSIZE),
    .AWBURST(m_axi_gmem_in_AWBURST),
    .AWLOCK(m_axi_gmem_in_AWLOCK),
    .AWCACHE(m_axi_gmem_in_AWCACHE),
    .AWPROT(m_axi_gmem_in_AWPROT),
    .AWQOS(m_axi_gmem_in_AWQOS),
    .AWREGION(m_axi_gmem_in_AWREGION),
    .AWUSER(m_axi_gmem_in_AWUSER),
    .WVALID(m_axi_gmem_in_WVALID),
    .WREADY(m_axi_gmem_in_WREADY),
    .WDATA(m_axi_gmem_in_WDATA),
    .WSTRB(m_axi_gmem_in_WSTRB),
    .WLAST(m_axi_gmem_in_WLAST),
    .WID(m_axi_gmem_in_WID),
    .WUSER(m_axi_gmem_in_WUSER),
    .ARVALID(m_axi_gmem_in_ARVALID),
    .ARREADY(m_axi_gmem_in_ARREADY),
    .ARADDR(m_axi_gmem_in_ARADDR),
    .ARID(m_axi_gmem_in_ARID),
    .ARLEN(m_axi_gmem_in_ARLEN),
    .ARSIZE(m_axi_gmem_in_ARSIZE),
    .ARBURST(m_axi_gmem_in_ARBURST),
    .ARLOCK(m_axi_gmem_in_ARLOCK),
    .ARCACHE(m_axi_gmem_in_ARCACHE),
    .ARPROT(m_axi_gmem_in_ARPROT),
    .ARQOS(m_axi_gmem_in_ARQOS),
    .ARREGION(m_axi_gmem_in_ARREGION),
    .ARUSER(m_axi_gmem_in_ARUSER),
    .RVALID(m_axi_gmem_in_RVALID),
    .RREADY(m_axi_gmem_in_RREADY),
    .RDATA(m_axi_gmem_in_RDATA),
    .RLAST(m_axi_gmem_in_RLAST),
    .RID(m_axi_gmem_in_RID),
    .RUSER(m_axi_gmem_in_RUSER),
    .RRESP(m_axi_gmem_in_RRESP),
    .BVALID(m_axi_gmem_in_BVALID),
    .BREADY(m_axi_gmem_in_BREADY),
    .BRESP(m_axi_gmem_in_BRESP),
    .BID(m_axi_gmem_in_BID),
    .BUSER(m_axi_gmem_in_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_in_ARVALID),
    .I_ARREADY(gmem_in_ARREADY),
    .I_ARADDR(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARADDR),
    .I_ARLEN(grp_encoder0_c1_fu_116_m_axi_gmem_in_ARLEN),
    .I_RVALID(gmem_in_RVALID),
    .I_RREADY(gmem_in_RREADY),
    .I_RDATA(gmem_in_RDATA),
    .I_RFIFONUM(gmem_in_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_in_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_in_WREADY),
    .I_WDATA(16'd0),
    .I_WSTRB(2'd0),
    .I_BVALID(gmem_in_BVALID),
    .I_BREADY(1'b0)
);

lane_seg_top_gmem_out_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_OUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_OUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_OUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_OUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_OUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_OUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_OUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_OUT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_OUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_OUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_OUT_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 10 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_out_m_axi_U(
    .AWVALID(m_axi_gmem_out_AWVALID),
    .AWREADY(m_axi_gmem_out_AWREADY),
    .AWADDR(m_axi_gmem_out_AWADDR),
    .AWID(m_axi_gmem_out_AWID),
    .AWLEN(m_axi_gmem_out_AWLEN),
    .AWSIZE(m_axi_gmem_out_AWSIZE),
    .AWBURST(m_axi_gmem_out_AWBURST),
    .AWLOCK(m_axi_gmem_out_AWLOCK),
    .AWCACHE(m_axi_gmem_out_AWCACHE),
    .AWPROT(m_axi_gmem_out_AWPROT),
    .AWQOS(m_axi_gmem_out_AWQOS),
    .AWREGION(m_axi_gmem_out_AWREGION),
    .AWUSER(m_axi_gmem_out_AWUSER),
    .WVALID(m_axi_gmem_out_WVALID),
    .WREADY(m_axi_gmem_out_WREADY),
    .WDATA(m_axi_gmem_out_WDATA),
    .WSTRB(m_axi_gmem_out_WSTRB),
    .WLAST(m_axi_gmem_out_WLAST),
    .WID(m_axi_gmem_out_WID),
    .WUSER(m_axi_gmem_out_WUSER),
    .ARVALID(m_axi_gmem_out_ARVALID),
    .ARREADY(m_axi_gmem_out_ARREADY),
    .ARADDR(m_axi_gmem_out_ARADDR),
    .ARID(m_axi_gmem_out_ARID),
    .ARLEN(m_axi_gmem_out_ARLEN),
    .ARSIZE(m_axi_gmem_out_ARSIZE),
    .ARBURST(m_axi_gmem_out_ARBURST),
    .ARLOCK(m_axi_gmem_out_ARLOCK),
    .ARCACHE(m_axi_gmem_out_ARCACHE),
    .ARPROT(m_axi_gmem_out_ARPROT),
    .ARQOS(m_axi_gmem_out_ARQOS),
    .ARREGION(m_axi_gmem_out_ARREGION),
    .ARUSER(m_axi_gmem_out_ARUSER),
    .RVALID(m_axi_gmem_out_RVALID),
    .RREADY(m_axi_gmem_out_RREADY),
    .RDATA(m_axi_gmem_out_RDATA),
    .RLAST(m_axi_gmem_out_RLAST),
    .RID(m_axi_gmem_out_RID),
    .RUSER(m_axi_gmem_out_RUSER),
    .RRESP(m_axi_gmem_out_RRESP),
    .BVALID(m_axi_gmem_out_BVALID),
    .BREADY(m_axi_gmem_out_BREADY),
    .BRESP(m_axi_gmem_out_BRESP),
    .BID(m_axi_gmem_out_BID),
    .BUSER(m_axi_gmem_out_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem_out_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(gmem_out_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem_out_RDATA),
    .I_RFIFONUM(gmem_out_RFIFONUM),
    .I_AWVALID(gmem_out_AWVALID),
    .I_AWREADY(gmem_out_AWREADY),
    .I_AWADDR(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWADDR),
    .I_AWLEN(grp_encoder0_c1_fu_116_m_axi_gmem_out_AWLEN),
    .I_WVALID(gmem_out_WVALID),
    .I_WREADY(gmem_out_WREADY),
    .I_WDATA(grp_encoder0_c1_fu_116_m_axi_gmem_out_WDATA),
    .I_WSTRB(grp_encoder0_c1_fu_116_m_axi_gmem_out_WSTRB),
    .I_BVALID(gmem_out_BVALID),
    .I_BREADY(gmem_out_BREADY)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_encoder0_c1_fu_116_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_encoder0_c1_fu_116_ap_start_reg <= 1'b1;
        end else if ((grp_encoder0_c1_fu_116_ap_ready == 1'b1)) begin
            grp_encoder0_c1_fu_116_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        image_r_read_reg_146 <= image_r;
        out0_read_reg_141 <= out0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_encoder0_c1_fu_116_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_encoder0_c1_fu_116_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_encoder0_c1_fu_116_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_in_ARVALID = grp_encoder0_c1_fu_116_m_axi_gmem_in_ARVALID;
    end else begin
        gmem_in_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_in_RREADY = grp_encoder0_c1_fu_116_m_axi_gmem_in_RREADY;
    end else begin
        gmem_in_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_out_AWVALID = grp_encoder0_c1_fu_116_m_axi_gmem_out_AWVALID;
    end else begin
        gmem_out_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_out_BREADY = grp_encoder0_c1_fu_116_m_axi_gmem_out_BREADY;
    end else begin
        gmem_out_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_out_WVALID = grp_encoder0_c1_fu_116_m_axi_gmem_out_WVALID;
    end else begin
        gmem_out_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        magic_ap_vld = 1'b1;
    end else begin
        magic_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        status_o = or_ln55_fu_134_p2;
    end else if (((tmp_fu_126_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        status_o = 32'd0;
    end else begin
        status_o = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((tmp_fu_126_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        status_o_ap_vld = 1'b1;
    end else begin
        status_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_encoder0_c1_fu_116_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_encoder0_c1_fu_116_ap_start = grp_encoder0_c1_fu_116_ap_start_reg;

assign or_ln55_fu_134_p2 = (status_i | 32'd1);

assign tmp_fu_126_p3 = ctrl[32'd1];

endmodule //lane_seg_top
