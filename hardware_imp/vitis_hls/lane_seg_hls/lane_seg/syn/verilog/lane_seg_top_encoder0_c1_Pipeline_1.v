// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module lane_seg_top_encoder0_c1_Pipeline_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        padded_address0,
        padded_ce0,
        padded_we0,
        padded_d0,
        padded_1_address0,
        padded_1_ce0,
        padded_1_we0,
        padded_1_d0,
        padded_2_address0,
        padded_2_ce0,
        padded_2_we0,
        padded_2_d0,
        padded_3_address0,
        padded_3_ce0,
        padded_3_we0,
        padded_3_d0,
        padded_4_address0,
        padded_4_ce0,
        padded_4_we0,
        padded_4_d0,
        padded_5_address0,
        padded_5_ce0,
        padded_5_we0,
        padded_5_d0,
        padded_6_address0,
        padded_6_ce0,
        padded_6_we0,
        padded_6_d0,
        padded_7_address0,
        padded_7_ce0,
        padded_7_we0,
        padded_7_d0,
        padded_8_address0,
        padded_8_ce0,
        padded_8_we0,
        padded_8_d0,
        padded_9_address0,
        padded_9_ce0,
        padded_9_we0,
        padded_9_d0,
        padded_10_address0,
        padded_10_ce0,
        padded_10_we0,
        padded_10_d0,
        padded_11_address0,
        padded_11_ce0,
        padded_11_we0,
        padded_11_d0,
        padded_12_address0,
        padded_12_ce0,
        padded_12_we0,
        padded_12_d0,
        padded_13_address0,
        padded_13_ce0,
        padded_13_we0,
        padded_13_d0,
        padded_14_address0,
        padded_14_ce0,
        padded_14_we0,
        padded_14_d0,
        padded_15_address0,
        padded_15_ce0,
        padded_15_we0,
        padded_15_d0,
        padded_16_address0,
        padded_16_ce0,
        padded_16_we0,
        padded_16_d0,
        padded_17_address0,
        padded_17_ce0,
        padded_17_we0,
        padded_17_d0,
        padded_18_address0,
        padded_18_ce0,
        padded_18_we0,
        padded_18_d0,
        padded_19_address0,
        padded_19_ce0,
        padded_19_we0,
        padded_19_d0,
        padded_20_address0,
        padded_20_ce0,
        padded_20_we0,
        padded_20_d0,
        padded_21_address0,
        padded_21_ce0,
        padded_21_we0,
        padded_21_d0,
        padded_22_address0,
        padded_22_ce0,
        padded_22_we0,
        padded_22_d0,
        padded_23_address0,
        padded_23_ce0,
        padded_23_we0,
        padded_23_d0,
        padded_24_address0,
        padded_24_ce0,
        padded_24_we0,
        padded_24_d0,
        padded_25_address0,
        padded_25_ce0,
        padded_25_we0,
        padded_25_d0,
        padded_26_address0,
        padded_26_ce0,
        padded_26_we0,
        padded_26_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] padded_address0;
output   padded_ce0;
output   padded_we0;
output  [31:0] padded_d0;
output  [12:0] padded_1_address0;
output   padded_1_ce0;
output   padded_1_we0;
output  [31:0] padded_1_d0;
output  [12:0] padded_2_address0;
output   padded_2_ce0;
output   padded_2_we0;
output  [31:0] padded_2_d0;
output  [12:0] padded_3_address0;
output   padded_3_ce0;
output   padded_3_we0;
output  [31:0] padded_3_d0;
output  [12:0] padded_4_address0;
output   padded_4_ce0;
output   padded_4_we0;
output  [31:0] padded_4_d0;
output  [12:0] padded_5_address0;
output   padded_5_ce0;
output   padded_5_we0;
output  [31:0] padded_5_d0;
output  [12:0] padded_6_address0;
output   padded_6_ce0;
output   padded_6_we0;
output  [31:0] padded_6_d0;
output  [12:0] padded_7_address0;
output   padded_7_ce0;
output   padded_7_we0;
output  [31:0] padded_7_d0;
output  [12:0] padded_8_address0;
output   padded_8_ce0;
output   padded_8_we0;
output  [31:0] padded_8_d0;
output  [12:0] padded_9_address0;
output   padded_9_ce0;
output   padded_9_we0;
output  [31:0] padded_9_d0;
output  [12:0] padded_10_address0;
output   padded_10_ce0;
output   padded_10_we0;
output  [31:0] padded_10_d0;
output  [12:0] padded_11_address0;
output   padded_11_ce0;
output   padded_11_we0;
output  [31:0] padded_11_d0;
output  [12:0] padded_12_address0;
output   padded_12_ce0;
output   padded_12_we0;
output  [31:0] padded_12_d0;
output  [12:0] padded_13_address0;
output   padded_13_ce0;
output   padded_13_we0;
output  [31:0] padded_13_d0;
output  [12:0] padded_14_address0;
output   padded_14_ce0;
output   padded_14_we0;
output  [31:0] padded_14_d0;
output  [12:0] padded_15_address0;
output   padded_15_ce0;
output   padded_15_we0;
output  [31:0] padded_15_d0;
output  [12:0] padded_16_address0;
output   padded_16_ce0;
output   padded_16_we0;
output  [31:0] padded_16_d0;
output  [12:0] padded_17_address0;
output   padded_17_ce0;
output   padded_17_we0;
output  [31:0] padded_17_d0;
output  [12:0] padded_18_address0;
output   padded_18_ce0;
output   padded_18_we0;
output  [31:0] padded_18_d0;
output  [12:0] padded_19_address0;
output   padded_19_ce0;
output   padded_19_we0;
output  [31:0] padded_19_d0;
output  [12:0] padded_20_address0;
output   padded_20_ce0;
output   padded_20_we0;
output  [31:0] padded_20_d0;
output  [12:0] padded_21_address0;
output   padded_21_ce0;
output   padded_21_we0;
output  [31:0] padded_21_d0;
output  [12:0] padded_22_address0;
output   padded_22_ce0;
output   padded_22_we0;
output  [31:0] padded_22_d0;
output  [12:0] padded_23_address0;
output   padded_23_ce0;
output   padded_23_we0;
output  [31:0] padded_23_d0;
output  [12:0] padded_24_address0;
output   padded_24_ce0;
output   padded_24_we0;
output  [31:0] padded_24_d0;
output  [12:0] padded_25_address0;
output   padded_25_ce0;
output   padded_25_we0;
output  [31:0] padded_25_d0;
output  [12:0] padded_26_address0;
output   padded_26_ce0;
output   padded_26_we0;
output  [31:0] padded_26_d0;

reg ap_idle;
reg padded_ce0;
reg padded_we0;
reg padded_1_ce0;
reg padded_1_we0;
reg padded_2_ce0;
reg padded_2_we0;
reg padded_3_ce0;
reg padded_3_we0;
reg padded_4_ce0;
reg padded_4_we0;
reg padded_5_ce0;
reg padded_5_we0;
reg padded_6_ce0;
reg padded_6_we0;
reg padded_7_ce0;
reg padded_7_we0;
reg padded_8_ce0;
reg padded_8_we0;
reg padded_9_ce0;
reg padded_9_we0;
reg padded_10_ce0;
reg padded_10_we0;
reg padded_11_ce0;
reg padded_11_we0;
reg padded_12_ce0;
reg padded_12_we0;
reg padded_13_ce0;
reg padded_13_we0;
reg padded_14_ce0;
reg padded_14_we0;
reg padded_15_ce0;
reg padded_15_we0;
reg padded_16_ce0;
reg padded_16_we0;
reg padded_17_ce0;
reg padded_17_we0;
reg padded_18_ce0;
reg padded_18_we0;
reg padded_19_ce0;
reg padded_19_we0;
reg padded_20_ce0;
reg padded_20_we0;
reg padded_21_ce0;
reg padded_21_we0;
reg padded_22_ce0;
reg padded_22_we0;
reg padded_23_ce0;
reg padded_23_we0;
reg padded_24_ce0;
reg padded_24_we0;
reg padded_25_ce0;
reg padded_25_we0;
reg padded_26_ce0;
reg padded_26_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] exitcond14787_fu_551_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond14787_reg_814;
reg   [0:0] exitcond14787_reg_814_pp0_iter2_reg;
reg   [0:0] exitcond14787_reg_814_pp0_iter3_reg;
reg   [0:0] exitcond14787_reg_814_pp0_iter4_reg;
reg   [0:0] exitcond14787_reg_814_pp0_iter5_reg;
reg   [0:0] exitcond14787_reg_814_pp0_iter6_reg;
reg   [0:0] exitcond14787_reg_814_pp0_iter7_reg;
reg   [0:0] exitcond14787_reg_814_pp0_iter8_reg;
reg   [0:0] exitcond14787_reg_814_pp0_iter9_reg;
reg   [0:0] exitcond14787_reg_814_pp0_iter10_reg;
reg   [6:0] tmp_reg_828;
reg   [6:0] tmp_reg_828_pp0_iter2_reg;
reg   [6:0] tmp_reg_828_pp0_iter3_reg;
reg   [6:0] tmp_reg_828_pp0_iter4_reg;
reg   [6:0] tmp_reg_828_pp0_iter5_reg;
reg   [6:0] tmp_reg_828_pp0_iter6_reg;
reg   [6:0] tmp_reg_828_pp0_iter7_reg;
reg   [6:0] tmp_reg_828_pp0_iter8_reg;
reg   [6:0] tmp_reg_828_pp0_iter9_reg;
reg   [6:0] tmp_reg_828_pp0_iter10_reg;
wire   [1:0] empty_44_fu_703_p1;
reg   [1:0] empty_44_reg_843;
reg    ap_condition_exit_pp0_iter11_stage0;
wire   [63:0] p_cast9_fu_736_p1;
wire    ap_block_pp0_stage0;
reg   [17:0] phi_urem3616_fu_122;
wire   [17:0] idx_urem3618_fu_719_p3;
wire    ap_loop_init;
reg   [17:0] phi_urem_fu_126;
wire   [17:0] idx_urem_fu_646_p3;
reg   [35:0] phi_mul3614_fu_130;
wire   [35:0] next_mul3615_fu_672_p2;
reg   [35:0] phi_mul_fu_134;
wire   [35:0] next_mul_fu_566_p2;
reg   [17:0] empty_fu_138;
wire   [17:0] empty_34_fu_557_p2;
wire   [1:0] empty_39_fu_732_p1;
wire   [1:0] empty_43_fu_766_p1;
wire   [7:0] grp_fu_582_p0;
wire   [2:0] grp_fu_582_p1;
wire   [9:0] empty_40_fu_588_p1;
wire   [9:0] mul67_fu_596_p0;
wire   [20:0] p_cast1_cast_fu_592_p1;
wire   [11:0] mul67_fu_596_p1;
wire   [20:0] mul67_fu_596_p2;
wire   [9:0] mul_fu_612_p0;
wire   [11:0] mul_fu_612_p1;
wire   [20:0] mul_fu_612_p2;
wire   [7:0] grp_fu_628_p0;
wire   [2:0] grp_fu_628_p1;
wire   [17:0] next_urem_fu_634_p2;
wire   [0:0] empty_36_fu_640_p2;
wire   [6:0] tmp_107_cast_fu_678_p4;
wire   [17:0] next_urem3617_fu_707_p2;
wire   [0:0] empty_35_fu_713_p2;
wire   [1:0] grp_fu_582_p2;
wire   [12:0] grp_fu_770_p3;
wire   [1:0] grp_fu_628_p2;
wire   [6:0] grp_fu_770_p0;
wire   [6:0] grp_fu_770_p1;
wire   [6:0] grp_fu_770_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [12:0] grp_fu_770_p00;
wire   [12:0] grp_fu_770_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_done_reg = 1'b0;
end

lane_seg_top_urem_8ns_3ns_2_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_8ns_3ns_2_12_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_582_p0),
    .din1(grp_fu_582_p1),
    .ce(1'b1),
    .dout(grp_fu_582_p2)
);

lane_seg_top_mul_10ns_12ns_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 21 ))
mul_10ns_12ns_21_1_1_U2(
    .din0(mul67_fu_596_p0),
    .din1(mul67_fu_596_p1),
    .dout(mul67_fu_596_p2)
);

lane_seg_top_mul_10ns_12ns_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 21 ))
mul_10ns_12ns_21_1_1_U3(
    .din0(mul_fu_612_p0),
    .din1(mul_fu_612_p1),
    .dout(mul_fu_612_p2)
);

lane_seg_top_urem_8ns_3ns_2_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_8ns_3ns_2_12_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_628_p0),
    .din1(grp_fu_628_p1),
    .ce(1'b1),
    .dout(grp_fu_628_p2)
);

lane_seg_top_mac_muladd_7ns_7ns_7ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
mac_muladd_7ns_7ns_7ns_13_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_770_p0),
    .din1(grp_fu_770_p1),
    .din2(grp_fu_770_p2),
    .ce(1'b1),
    .dout(grp_fu_770_p3)
);

lane_seg_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter11_stage0)) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_fu_138 <= 18'd0;
        end else if (((exitcond14787_fu_551_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            empty_fu_138 <= empty_34_fu_557_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_mul3614_fu_130 <= 36'd0;
        end else if (((exitcond14787_reg_814_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
            phi_mul3614_fu_130 <= next_mul3615_fu_672_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_134 <= 36'd0;
        end else if (((exitcond14787_fu_551_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            phi_mul_fu_134 <= next_mul_fu_566_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem3616_fu_122 <= 18'd0;
        end else if (((exitcond14787_reg_814_pp0_iter10_reg == 1'd0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
            phi_urem3616_fu_122 <= idx_urem3618_fu_719_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem_fu_126 <= 18'd0;
        end else if (((exitcond14787_fu_551_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            phi_urem_fu_126 <= idx_urem_fu_646_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        exitcond14787_reg_814_pp0_iter10_reg <= exitcond14787_reg_814_pp0_iter9_reg;
        exitcond14787_reg_814_pp0_iter2_reg <= exitcond14787_reg_814;
        exitcond14787_reg_814_pp0_iter3_reg <= exitcond14787_reg_814_pp0_iter2_reg;
        exitcond14787_reg_814_pp0_iter4_reg <= exitcond14787_reg_814_pp0_iter3_reg;
        exitcond14787_reg_814_pp0_iter5_reg <= exitcond14787_reg_814_pp0_iter4_reg;
        exitcond14787_reg_814_pp0_iter6_reg <= exitcond14787_reg_814_pp0_iter5_reg;
        exitcond14787_reg_814_pp0_iter7_reg <= exitcond14787_reg_814_pp0_iter6_reg;
        exitcond14787_reg_814_pp0_iter8_reg <= exitcond14787_reg_814_pp0_iter7_reg;
        exitcond14787_reg_814_pp0_iter9_reg <= exitcond14787_reg_814_pp0_iter8_reg;
        tmp_reg_828_pp0_iter10_reg <= tmp_reg_828_pp0_iter9_reg;
        tmp_reg_828_pp0_iter2_reg <= tmp_reg_828;
        tmp_reg_828_pp0_iter3_reg <= tmp_reg_828_pp0_iter2_reg;
        tmp_reg_828_pp0_iter4_reg <= tmp_reg_828_pp0_iter3_reg;
        tmp_reg_828_pp0_iter5_reg <= tmp_reg_828_pp0_iter4_reg;
        tmp_reg_828_pp0_iter6_reg <= tmp_reg_828_pp0_iter5_reg;
        tmp_reg_828_pp0_iter7_reg <= tmp_reg_828_pp0_iter6_reg;
        tmp_reg_828_pp0_iter8_reg <= tmp_reg_828_pp0_iter7_reg;
        tmp_reg_828_pp0_iter9_reg <= tmp_reg_828_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        exitcond14787_reg_814 <= exitcond14787_fu_551_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond14787_reg_814_pp0_iter10_reg == 1'd0))) begin
        empty_44_reg_843 <= empty_44_fu_703_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14787_fu_551_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_828 <= {{mul_fu_612_p2[20:14]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond14787_reg_814_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_condition_exit_pp0_iter11_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter11_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond14787_fu_551_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_10_ce0 = 1'b1;
    end else begin
        padded_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_43_fu_766_p1 == 2'd0) & (empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_10_we0 = 1'b1;
    end else begin
        padded_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_11_ce0 = 1'b1;
    end else begin
        padded_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_44_reg_843 == 2'd0) & ~(empty_44_reg_843 == 2'd1) & (empty_43_fu_766_p1 == 2'd0) & (empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_11_we0 = 1'b1;
    end else begin
        padded_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_12_ce0 = 1'b1;
    end else begin
        padded_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_12_we0 = 1'b1;
    end else begin
        padded_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_13_ce0 = 1'b1;
    end else begin
        padded_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_13_we0 = 1'b1;
    end else begin
        padded_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_14_ce0 = 1'b1;
    end else begin
        padded_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_44_reg_843 == 2'd0) & ~(empty_44_reg_843 == 2'd1) & (empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_14_we0 = 1'b1;
    end else begin
        padded_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_15_ce0 = 1'b1;
    end else begin
        padded_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_43_fu_766_p1 == 2'd0) & ~(empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_15_we0 = 1'b1;
    end else begin
        padded_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_16_ce0 = 1'b1;
    end else begin
        padded_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_43_fu_766_p1 == 2'd0) & ~(empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_16_we0 = 1'b1;
    end else begin
        padded_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_17_ce0 = 1'b1;
    end else begin
        padded_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_43_fu_766_p1 == 2'd0) & ~(empty_44_reg_843 == 2'd0) & ~(empty_44_reg_843 == 2'd1) & ~(empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_17_we0 = 1'b1;
    end else begin
        padded_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_18_ce0 = 1'b1;
    end else begin
        padded_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_39_fu_732_p1 == 2'd0) & ~(empty_39_fu_732_p1 == 2'd1) & (empty_43_fu_766_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_18_we0 = 1'b1;
    end else begin
        padded_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_19_ce0 = 1'b1;
    end else begin
        padded_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_39_fu_732_p1 == 2'd0) & ~(empty_39_fu_732_p1 == 2'd1) & (empty_43_fu_766_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_19_we0 = 1'b1;
    end else begin
        padded_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_1_ce0 = 1'b1;
    end else begin
        padded_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_43_fu_766_p1 == 2'd0) & (empty_39_fu_732_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_1_we0 = 1'b1;
    end else begin
        padded_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_20_ce0 = 1'b1;
    end else begin
        padded_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_39_fu_732_p1 == 2'd0) & ~(empty_44_reg_843 == 2'd0) & ~(empty_44_reg_843 == 2'd1) & ~(empty_39_fu_732_p1 == 2'd1) & (empty_43_fu_766_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_20_we0 = 1'b1;
    end else begin
        padded_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_21_ce0 = 1'b1;
    end else begin
        padded_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_39_fu_732_p1 == 2'd0) & ~(empty_39_fu_732_p1 == 2'd1) & (empty_43_fu_766_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_21_we0 = 1'b1;
    end else begin
        padded_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_22_ce0 = 1'b1;
    end else begin
        padded_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_39_fu_732_p1 == 2'd0) & ~(empty_39_fu_732_p1 == 2'd1) & (empty_43_fu_766_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_22_we0 = 1'b1;
    end else begin
        padded_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_23_ce0 = 1'b1;
    end else begin
        padded_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_39_fu_732_p1 == 2'd0) & ~(empty_44_reg_843 == 2'd0) & ~(empty_44_reg_843 == 2'd1) & ~(empty_39_fu_732_p1 == 2'd1) & (empty_43_fu_766_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_23_we0 = 1'b1;
    end else begin
        padded_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_24_ce0 = 1'b1;
    end else begin
        padded_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_39_fu_732_p1 == 2'd0) & ~(empty_43_fu_766_p1 == 2'd0) & ~(empty_43_fu_766_p1 == 2'd1) & ~(empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_24_we0 = 1'b1;
    end else begin
        padded_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_25_ce0 = 1'b1;
    end else begin
        padded_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_39_fu_732_p1 == 2'd0) & ~(empty_43_fu_766_p1 == 2'd0) & ~(empty_43_fu_766_p1 == 2'd1) & ~(empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_25_we0 = 1'b1;
    end else begin
        padded_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_26_ce0 = 1'b1;
    end else begin
        padded_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_39_fu_732_p1 == 2'd0) & ~(empty_43_fu_766_p1 == 2'd0) & ~(empty_44_reg_843 == 2'd0) & ~(empty_44_reg_843 == 2'd1) & ~(empty_43_fu_766_p1 == 2'd1) & ~(empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_26_we0 = 1'b1;
    end else begin
        padded_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_2_ce0 = 1'b1;
    end else begin
        padded_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_44_reg_843 == 2'd0) & ~(empty_44_reg_843 == 2'd1) & (empty_43_fu_766_p1 == 2'd0) & (empty_39_fu_732_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_2_we0 = 1'b1;
    end else begin
        padded_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_3_ce0 = 1'b1;
    end else begin
        padded_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_3_we0 = 1'b1;
    end else begin
        padded_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_4_ce0 = 1'b1;
    end else begin
        padded_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_4_we0 = 1'b1;
    end else begin
        padded_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_5_ce0 = 1'b1;
    end else begin
        padded_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_44_reg_843 == 2'd0) & ~(empty_44_reg_843 == 2'd1) & (empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_5_we0 = 1'b1;
    end else begin
        padded_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_6_ce0 = 1'b1;
    end else begin
        padded_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_43_fu_766_p1 == 2'd0) & ~(empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_6_we0 = 1'b1;
    end else begin
        padded_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_7_ce0 = 1'b1;
    end else begin
        padded_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_43_fu_766_p1 == 2'd0) & ~(empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_7_we0 = 1'b1;
    end else begin
        padded_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_8_ce0 = 1'b1;
    end else begin
        padded_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_43_fu_766_p1 == 2'd0) & ~(empty_44_reg_843 == 2'd0) & ~(empty_44_reg_843 == 2'd1) & ~(empty_43_fu_766_p1 == 2'd1) & (empty_39_fu_732_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_8_we0 = 1'b1;
    end else begin
        padded_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_9_ce0 = 1'b1;
    end else begin
        padded_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_43_fu_766_p1 == 2'd0) & (empty_39_fu_732_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_9_we0 = 1'b1;
    end else begin
        padded_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_ce0 = 1'b1;
    end else begin
        padded_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_43_fu_766_p1 == 2'd0) & (empty_39_fu_732_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_843 == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        padded_we0 = 1'b1;
    end else begin
        padded_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign empty_34_fu_557_p2 = (empty_fu_138 + 18'd1);

assign empty_35_fu_713_p2 = ((next_urem3617_fu_707_p2 < 18'd3) ? 1'b1 : 1'b0);

assign empty_36_fu_640_p2 = ((next_urem_fu_634_p2 < 18'd678) ? 1'b1 : 1'b0);

assign empty_39_fu_732_p1 = grp_fu_582_p2[1:0];

assign empty_40_fu_588_p1 = phi_urem_fu_126[9:0];

assign empty_43_fu_766_p1 = grp_fu_628_p2[1:0];

assign empty_44_fu_703_p1 = phi_urem3616_fu_122[1:0];

assign exitcond14787_fu_551_p2 = ((empty_fu_138 == 18'd153228) ? 1'b1 : 1'b0);

assign grp_fu_582_p0 = {{phi_mul_fu_134[35:28]}};

assign grp_fu_582_p1 = 8'd3;

assign grp_fu_628_p0 = {{mul67_fu_596_p2[19:12]}};

assign grp_fu_628_p1 = 8'd3;

assign grp_fu_770_p0 = grp_fu_770_p00;

assign grp_fu_770_p00 = tmp_107_cast_fu_678_p4;

assign grp_fu_770_p1 = 13'd76;

assign grp_fu_770_p2 = grp_fu_770_p20;

assign grp_fu_770_p20 = tmp_reg_828_pp0_iter10_reg;

assign idx_urem3618_fu_719_p3 = ((empty_35_fu_713_p2[0:0] == 1'b1) ? next_urem3617_fu_707_p2 : 18'd0);

assign idx_urem_fu_646_p3 = ((empty_36_fu_640_p2[0:0] == 1'b1) ? next_urem_fu_634_p2 : 18'd0);

assign mul67_fu_596_p0 = p_cast1_cast_fu_592_p1;

assign mul67_fu_596_p1 = 21'd1366;

assign mul_fu_612_p0 = p_cast1_cast_fu_592_p1;

assign mul_fu_612_p1 = 21'd1821;

assign next_mul3615_fu_672_p2 = (phi_mul3614_fu_130 + 36'd263949);

assign next_mul_fu_566_p2 = (phi_mul_fu_134 + 36'd395923);

assign next_urem3617_fu_707_p2 = (phi_urem3616_fu_122 + 18'd1);

assign next_urem_fu_634_p2 = (phi_urem_fu_126 + 18'd1);

assign p_cast1_cast_fu_592_p1 = empty_40_fu_588_p1;

assign p_cast9_fu_736_p1 = grp_fu_770_p3;

assign padded_10_address0 = p_cast9_fu_736_p1;

assign padded_10_d0 = 32'd0;

assign padded_11_address0 = p_cast9_fu_736_p1;

assign padded_11_d0 = 32'd0;

assign padded_12_address0 = p_cast9_fu_736_p1;

assign padded_12_d0 = 32'd0;

assign padded_13_address0 = p_cast9_fu_736_p1;

assign padded_13_d0 = 32'd0;

assign padded_14_address0 = p_cast9_fu_736_p1;

assign padded_14_d0 = 32'd0;

assign padded_15_address0 = p_cast9_fu_736_p1;

assign padded_15_d0 = 32'd0;

assign padded_16_address0 = p_cast9_fu_736_p1;

assign padded_16_d0 = 32'd0;

assign padded_17_address0 = p_cast9_fu_736_p1;

assign padded_17_d0 = 32'd0;

assign padded_18_address0 = p_cast9_fu_736_p1;

assign padded_18_d0 = 32'd0;

assign padded_19_address0 = p_cast9_fu_736_p1;

assign padded_19_d0 = 32'd0;

assign padded_1_address0 = p_cast9_fu_736_p1;

assign padded_1_d0 = 32'd0;

assign padded_20_address0 = p_cast9_fu_736_p1;

assign padded_20_d0 = 32'd0;

assign padded_21_address0 = p_cast9_fu_736_p1;

assign padded_21_d0 = 32'd0;

assign padded_22_address0 = p_cast9_fu_736_p1;

assign padded_22_d0 = 32'd0;

assign padded_23_address0 = p_cast9_fu_736_p1;

assign padded_23_d0 = 32'd0;

assign padded_24_address0 = p_cast9_fu_736_p1;

assign padded_24_d0 = 32'd0;

assign padded_25_address0 = p_cast9_fu_736_p1;

assign padded_25_d0 = 32'd0;

assign padded_26_address0 = p_cast9_fu_736_p1;

assign padded_26_d0 = 32'd0;

assign padded_2_address0 = p_cast9_fu_736_p1;

assign padded_2_d0 = 32'd0;

assign padded_3_address0 = p_cast9_fu_736_p1;

assign padded_3_d0 = 32'd0;

assign padded_4_address0 = p_cast9_fu_736_p1;

assign padded_4_d0 = 32'd0;

assign padded_5_address0 = p_cast9_fu_736_p1;

assign padded_5_d0 = 32'd0;

assign padded_6_address0 = p_cast9_fu_736_p1;

assign padded_6_d0 = 32'd0;

assign padded_7_address0 = p_cast9_fu_736_p1;

assign padded_7_d0 = 32'd0;

assign padded_8_address0 = p_cast9_fu_736_p1;

assign padded_8_d0 = 32'd0;

assign padded_9_address0 = p_cast9_fu_736_p1;

assign padded_9_d0 = 32'd0;

assign padded_address0 = p_cast9_fu_736_p1;

assign padded_d0 = 32'd0;

assign tmp_107_cast_fu_678_p4 = {{phi_mul3614_fu_130[35:29]}};

endmodule //lane_seg_top_encoder0_c1_Pipeline_1
