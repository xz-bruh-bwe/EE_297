-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lane_seg_top_encoder0_c1_Pipeline_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    padded_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_ce0 : OUT STD_LOGIC;
    padded_we0 : OUT STD_LOGIC;
    padded_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_1_ce0 : OUT STD_LOGIC;
    padded_1_we0 : OUT STD_LOGIC;
    padded_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_2_ce0 : OUT STD_LOGIC;
    padded_2_we0 : OUT STD_LOGIC;
    padded_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_3_ce0 : OUT STD_LOGIC;
    padded_3_we0 : OUT STD_LOGIC;
    padded_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_4_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_4_ce0 : OUT STD_LOGIC;
    padded_4_we0 : OUT STD_LOGIC;
    padded_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_5_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_5_ce0 : OUT STD_LOGIC;
    padded_5_we0 : OUT STD_LOGIC;
    padded_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_6_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_6_ce0 : OUT STD_LOGIC;
    padded_6_we0 : OUT STD_LOGIC;
    padded_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_7_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_7_ce0 : OUT STD_LOGIC;
    padded_7_we0 : OUT STD_LOGIC;
    padded_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_8_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_8_ce0 : OUT STD_LOGIC;
    padded_8_we0 : OUT STD_LOGIC;
    padded_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_9_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_9_ce0 : OUT STD_LOGIC;
    padded_9_we0 : OUT STD_LOGIC;
    padded_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_10_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_10_ce0 : OUT STD_LOGIC;
    padded_10_we0 : OUT STD_LOGIC;
    padded_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_11_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_11_ce0 : OUT STD_LOGIC;
    padded_11_we0 : OUT STD_LOGIC;
    padded_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_12_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_12_ce0 : OUT STD_LOGIC;
    padded_12_we0 : OUT STD_LOGIC;
    padded_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_13_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_13_ce0 : OUT STD_LOGIC;
    padded_13_we0 : OUT STD_LOGIC;
    padded_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_14_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_14_ce0 : OUT STD_LOGIC;
    padded_14_we0 : OUT STD_LOGIC;
    padded_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_15_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_15_ce0 : OUT STD_LOGIC;
    padded_15_we0 : OUT STD_LOGIC;
    padded_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_16_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_16_ce0 : OUT STD_LOGIC;
    padded_16_we0 : OUT STD_LOGIC;
    padded_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_17_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_17_ce0 : OUT STD_LOGIC;
    padded_17_we0 : OUT STD_LOGIC;
    padded_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_18_ce0 : OUT STD_LOGIC;
    padded_18_we0 : OUT STD_LOGIC;
    padded_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_19_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_19_ce0 : OUT STD_LOGIC;
    padded_19_we0 : OUT STD_LOGIC;
    padded_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_20_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_20_ce0 : OUT STD_LOGIC;
    padded_20_we0 : OUT STD_LOGIC;
    padded_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_21_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_21_ce0 : OUT STD_LOGIC;
    padded_21_we0 : OUT STD_LOGIC;
    padded_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_22_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_22_ce0 : OUT STD_LOGIC;
    padded_22_we0 : OUT STD_LOGIC;
    padded_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_23_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_23_ce0 : OUT STD_LOGIC;
    padded_23_we0 : OUT STD_LOGIC;
    padded_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_24_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_24_ce0 : OUT STD_LOGIC;
    padded_24_we0 : OUT STD_LOGIC;
    padded_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_25_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_25_ce0 : OUT STD_LOGIC;
    padded_25_we0 : OUT STD_LOGIC;
    padded_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    padded_26_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    padded_26_ce0 : OUT STD_LOGIC;
    padded_26_we0 : OUT STD_LOGIC;
    padded_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of lane_seg_top_encoder0_c1_Pipeline_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv18_2568C : STD_LOGIC_VECTOR (17 downto 0) := "100101011010001100";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv36_60A93 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000001100000101010010011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv21_556 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010101010110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv21_71D : STD_LOGIC_VECTOR (20 downto 0) := "000000000011100011101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv18_2A6 : STD_LOGIC_VECTOR (17 downto 0) := "000000001010100110";
    constant ap_const_lv36_4070D : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000001000000011100001101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv18_3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000011";
    constant ap_const_lv13_4C : STD_LOGIC_VECTOR (12 downto 0) := "0000001001100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal exitcond14787_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond14787_reg_814 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14787_reg_814_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14787_reg_814_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14787_reg_814_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14787_reg_814_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14787_reg_814_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14787_reg_814_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14787_reg_814_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14787_reg_814_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond14787_reg_814_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_828 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_828_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_828_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_828_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_828_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_828_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_828_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_828_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_828_pp0_iter9_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_828_pp0_iter10_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_44_fu_703_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_44_reg_843 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_condition_exit_pp0_iter11_stage0 : STD_LOGIC;
    signal p_cast9_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal phi_urem3616_fu_122 : STD_LOGIC_VECTOR (17 downto 0);
    signal idx_urem3618_fu_719_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal phi_urem_fu_126 : STD_LOGIC_VECTOR (17 downto 0);
    signal idx_urem_fu_646_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal phi_mul3614_fu_130 : STD_LOGIC_VECTOR (35 downto 0);
    signal next_mul3615_fu_672_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal phi_mul_fu_134 : STD_LOGIC_VECTOR (35 downto 0);
    signal next_mul_fu_566_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal empty_fu_138 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_34_fu_557_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_39_fu_732_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_43_fu_766_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_582_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_582_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_40_fu_588_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul67_fu_596_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast1_cast_fu_592_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul67_fu_596_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul67_fu_596_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_fu_612_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_fu_612_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_fu_612_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_628_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_628_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal next_urem_fu_634_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_36_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_cast_fu_678_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal next_urem3617_fu_707_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_35_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_582_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_770_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_628_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_770_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_770_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_770_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_770_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_770_p20 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component lane_seg_top_urem_8ns_3ns_2_12_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component lane_seg_top_mul_10ns_12ns_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component lane_seg_top_mac_muladd_7ns_7ns_7ns_13_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component lane_seg_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    urem_8ns_3ns_2_12_1_U1 : component lane_seg_top_urem_8ns_3ns_2_12_1
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 8,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_582_p0,
        din1 => grp_fu_582_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_582_p2);

    mul_10ns_12ns_21_1_1_U2 : component lane_seg_top_mul_10ns_12ns_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 21)
    port map (
        din0 => mul67_fu_596_p0,
        din1 => mul67_fu_596_p1,
        dout => mul67_fu_596_p2);

    mul_10ns_12ns_21_1_1_U3 : component lane_seg_top_mul_10ns_12ns_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 21)
    port map (
        din0 => mul_fu_612_p0,
        din1 => mul_fu_612_p1,
        dout => mul_fu_612_p2);

    urem_8ns_3ns_2_12_1_U4 : component lane_seg_top_urem_8ns_3ns_2_12_1
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 8,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_628_p0,
        din1 => grp_fu_628_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_628_p2);

    mac_muladd_7ns_7ns_7ns_13_4_1_U5 : component lane_seg_top_mac_muladd_7ns_7ns_7ns_13_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_770_p0,
        din1 => grp_fu_770_p1,
        din2 => grp_fu_770_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_770_p3);

    flow_control_loop_pipe_sequential_init_U : component lane_seg_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter11_stage0)) then 
                    ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    empty_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    empty_fu_138 <= ap_const_lv18_0;
                elsif (((exitcond14787_fu_551_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    empty_fu_138 <= empty_34_fu_557_p2;
                end if;
            end if; 
        end if;
    end process;

    phi_mul3614_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    phi_mul3614_fu_130 <= ap_const_lv36_0;
                elsif (((exitcond14787_reg_814_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
                    phi_mul3614_fu_130 <= next_mul3615_fu_672_p2;
                end if;
            end if; 
        end if;
    end process;

    phi_mul_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    phi_mul_fu_134 <= ap_const_lv36_0;
                elsif (((exitcond14787_fu_551_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    phi_mul_fu_134 <= next_mul_fu_566_p2;
                end if;
            end if; 
        end if;
    end process;

    phi_urem3616_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    phi_urem3616_fu_122 <= ap_const_lv18_0;
                elsif (((exitcond14787_reg_814_pp0_iter10_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
                    phi_urem3616_fu_122 <= idx_urem3618_fu_719_p3;
                end if;
            end if; 
        end if;
    end process;

    phi_urem_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    phi_urem_fu_126 <= ap_const_lv18_0;
                elsif (((exitcond14787_fu_551_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    phi_urem_fu_126 <= idx_urem_fu_646_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                exitcond14787_reg_814_pp0_iter10_reg <= exitcond14787_reg_814_pp0_iter9_reg;
                exitcond14787_reg_814_pp0_iter2_reg <= exitcond14787_reg_814;
                exitcond14787_reg_814_pp0_iter3_reg <= exitcond14787_reg_814_pp0_iter2_reg;
                exitcond14787_reg_814_pp0_iter4_reg <= exitcond14787_reg_814_pp0_iter3_reg;
                exitcond14787_reg_814_pp0_iter5_reg <= exitcond14787_reg_814_pp0_iter4_reg;
                exitcond14787_reg_814_pp0_iter6_reg <= exitcond14787_reg_814_pp0_iter5_reg;
                exitcond14787_reg_814_pp0_iter7_reg <= exitcond14787_reg_814_pp0_iter6_reg;
                exitcond14787_reg_814_pp0_iter8_reg <= exitcond14787_reg_814_pp0_iter7_reg;
                exitcond14787_reg_814_pp0_iter9_reg <= exitcond14787_reg_814_pp0_iter8_reg;
                tmp_reg_828_pp0_iter10_reg <= tmp_reg_828_pp0_iter9_reg;
                tmp_reg_828_pp0_iter2_reg <= tmp_reg_828;
                tmp_reg_828_pp0_iter3_reg <= tmp_reg_828_pp0_iter2_reg;
                tmp_reg_828_pp0_iter4_reg <= tmp_reg_828_pp0_iter3_reg;
                tmp_reg_828_pp0_iter5_reg <= tmp_reg_828_pp0_iter4_reg;
                tmp_reg_828_pp0_iter6_reg <= tmp_reg_828_pp0_iter5_reg;
                tmp_reg_828_pp0_iter7_reg <= tmp_reg_828_pp0_iter6_reg;
                tmp_reg_828_pp0_iter8_reg <= tmp_reg_828_pp0_iter7_reg;
                tmp_reg_828_pp0_iter9_reg <= tmp_reg_828_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                exitcond14787_reg_814 <= exitcond14787_fu_551_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond14787_reg_814_pp0_iter10_reg = ap_const_lv1_0))) then
                empty_44_reg_843 <= empty_44_fu_703_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond14787_fu_551_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_828 <= mul_fu_612_p2(20 downto 14);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter11_stage0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_subdone, exitcond14787_reg_814_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond14787_reg_814_pp0_iter10_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter11_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter11_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, exitcond14787_fu_551_p2)
    begin
        if (((exitcond14787_fu_551_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter11_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    empty_34_fu_557_p2 <= std_logic_vector(unsigned(empty_fu_138) + unsigned(ap_const_lv18_1));
    empty_35_fu_713_p2 <= "1" when (unsigned(next_urem3617_fu_707_p2) < unsigned(ap_const_lv18_3)) else "0";
    empty_36_fu_640_p2 <= "1" when (unsigned(next_urem_fu_634_p2) < unsigned(ap_const_lv18_2A6)) else "0";
    empty_39_fu_732_p1 <= grp_fu_582_p2(2 - 1 downto 0);
    empty_40_fu_588_p1 <= phi_urem_fu_126(10 - 1 downto 0);
    empty_43_fu_766_p1 <= grp_fu_628_p2(2 - 1 downto 0);
    empty_44_fu_703_p1 <= phi_urem3616_fu_122(2 - 1 downto 0);
    exitcond14787_fu_551_p2 <= "1" when (empty_fu_138 = ap_const_lv18_2568C) else "0";
    grp_fu_582_p0 <= phi_mul_fu_134(35 downto 28);
    grp_fu_582_p1 <= ap_const_lv8_3(3 - 1 downto 0);
    grp_fu_628_p0 <= mul67_fu_596_p2(19 downto 12);
    grp_fu_628_p1 <= ap_const_lv8_3(3 - 1 downto 0);
    grp_fu_770_p0 <= grp_fu_770_p00(7 - 1 downto 0);
    grp_fu_770_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_107_cast_fu_678_p4),13));
    grp_fu_770_p1 <= ap_const_lv13_4C(7 - 1 downto 0);
    grp_fu_770_p2 <= grp_fu_770_p20(7 - 1 downto 0);
    grp_fu_770_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_828_pp0_iter10_reg),13));
    idx_urem3618_fu_719_p3 <= 
        next_urem3617_fu_707_p2 when (empty_35_fu_713_p2(0) = '1') else 
        ap_const_lv18_0;
    idx_urem_fu_646_p3 <= 
        next_urem_fu_634_p2 when (empty_36_fu_640_p2(0) = '1') else 
        ap_const_lv18_0;
    mul67_fu_596_p0 <= p_cast1_cast_fu_592_p1(10 - 1 downto 0);
    mul67_fu_596_p1 <= ap_const_lv21_556(12 - 1 downto 0);
    mul_fu_612_p0 <= p_cast1_cast_fu_592_p1(10 - 1 downto 0);
    mul_fu_612_p1 <= ap_const_lv21_71D(12 - 1 downto 0);
    next_mul3615_fu_672_p2 <= std_logic_vector(unsigned(phi_mul3614_fu_130) + unsigned(ap_const_lv36_4070D));
    next_mul_fu_566_p2 <= std_logic_vector(unsigned(phi_mul_fu_134) + unsigned(ap_const_lv36_60A93));
    next_urem3617_fu_707_p2 <= std_logic_vector(unsigned(phi_urem3616_fu_122) + unsigned(ap_const_lv18_1));
    next_urem_fu_634_p2 <= std_logic_vector(unsigned(phi_urem_fu_126) + unsigned(ap_const_lv18_1));
    p_cast1_cast_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_40_fu_588_p1),21));
    p_cast9_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_770_p3),64));
    padded_10_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_10_ce0 <= ap_const_logic_1;
        else 
            padded_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_10_d0 <= ap_const_lv32_0;

    padded_10_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if (((empty_43_fu_766_p1 = ap_const_lv2_0) and (empty_39_fu_732_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_10_we0 <= ap_const_logic_1;
        else 
            padded_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_11_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_11_ce0 <= ap_const_logic_1;
        else 
            padded_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_11_d0 <= ap_const_lv32_0;

    padded_11_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_44_reg_843 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_0) and (empty_39_fu_732_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_11_we0 <= ap_const_logic_1;
        else 
            padded_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_12_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_12_ce0 <= ap_const_logic_1;
        else 
            padded_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_12_d0 <= ap_const_lv32_0;

    padded_12_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if (((empty_43_fu_766_p1 = ap_const_lv2_1) and (empty_39_fu_732_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_12_we0 <= ap_const_logic_1;
        else 
            padded_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_13_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_13_ce0 <= ap_const_logic_1;
        else 
            padded_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_13_d0 <= ap_const_lv32_0;

    padded_13_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if (((empty_43_fu_766_p1 = ap_const_lv2_1) and (empty_39_fu_732_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_13_we0 <= ap_const_logic_1;
        else 
            padded_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_14_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_14_ce0 <= ap_const_logic_1;
        else 
            padded_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_14_d0 <= ap_const_lv32_0;

    padded_14_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_44_reg_843 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_1) and (empty_39_fu_732_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_14_we0 <= ap_const_logic_1;
        else 
            padded_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_15_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_15_ce0 <= ap_const_logic_1;
        else 
            padded_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_15_d0 <= ap_const_lv32_0;

    padded_15_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_43_fu_766_p1 = ap_const_lv2_0)) and not((empty_43_fu_766_p1 = ap_const_lv2_1)) and (empty_39_fu_732_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_15_we0 <= ap_const_logic_1;
        else 
            padded_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_16_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_16_ce0 <= ap_const_logic_1;
        else 
            padded_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_16_d0 <= ap_const_lv32_0;

    padded_16_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_43_fu_766_p1 = ap_const_lv2_0)) and not((empty_43_fu_766_p1 = ap_const_lv2_1)) and (empty_39_fu_732_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_16_we0 <= ap_const_logic_1;
        else 
            padded_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_17_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_17_ce0 <= ap_const_logic_1;
        else 
            padded_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_17_d0 <= ap_const_lv32_0;

    padded_17_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_43_fu_766_p1 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_1)) and not((empty_43_fu_766_p1 = ap_const_lv2_1)) and (empty_39_fu_732_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_17_we0 <= ap_const_logic_1;
        else 
            padded_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_18_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_18_ce0 <= ap_const_logic_1;
        else 
            padded_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_18_d0 <= ap_const_lv32_0;

    padded_18_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_39_fu_732_p1 = ap_const_lv2_0)) and not((empty_39_fu_732_p1 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_18_we0 <= ap_const_logic_1;
        else 
            padded_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_19_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_19_ce0 <= ap_const_logic_1;
        else 
            padded_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_19_d0 <= ap_const_lv32_0;

    padded_19_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_39_fu_732_p1 = ap_const_lv2_0)) and not((empty_39_fu_732_p1 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_19_we0 <= ap_const_logic_1;
        else 
            padded_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_1_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_1_ce0 <= ap_const_logic_1;
        else 
            padded_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_1_d0 <= ap_const_lv32_0;

    padded_1_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if (((empty_43_fu_766_p1 = ap_const_lv2_0) and (empty_39_fu_732_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_1_we0 <= ap_const_logic_1;
        else 
            padded_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_20_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_20_ce0 <= ap_const_logic_1;
        else 
            padded_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_20_d0 <= ap_const_lv32_0;

    padded_20_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_39_fu_732_p1 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_1)) and not((empty_39_fu_732_p1 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_20_we0 <= ap_const_logic_1;
        else 
            padded_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_21_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_21_ce0 <= ap_const_logic_1;
        else 
            padded_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_21_d0 <= ap_const_lv32_0;

    padded_21_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_39_fu_732_p1 = ap_const_lv2_0)) and not((empty_39_fu_732_p1 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_21_we0 <= ap_const_logic_1;
        else 
            padded_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_22_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_22_ce0 <= ap_const_logic_1;
        else 
            padded_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_22_d0 <= ap_const_lv32_0;

    padded_22_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_39_fu_732_p1 = ap_const_lv2_0)) and not((empty_39_fu_732_p1 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_22_we0 <= ap_const_logic_1;
        else 
            padded_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_23_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_23_ce0 <= ap_const_logic_1;
        else 
            padded_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_23_d0 <= ap_const_lv32_0;

    padded_23_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_39_fu_732_p1 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_1)) and not((empty_39_fu_732_p1 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_23_we0 <= ap_const_logic_1;
        else 
            padded_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_24_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_24_ce0 <= ap_const_logic_1;
        else 
            padded_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_24_d0 <= ap_const_lv32_0;

    padded_24_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_39_fu_732_p1 = ap_const_lv2_0)) and not((empty_43_fu_766_p1 = ap_const_lv2_0)) and not((empty_43_fu_766_p1 = ap_const_lv2_1)) and not((empty_39_fu_732_p1 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_24_we0 <= ap_const_logic_1;
        else 
            padded_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_25_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_25_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_25_ce0 <= ap_const_logic_1;
        else 
            padded_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_25_d0 <= ap_const_lv32_0;

    padded_25_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_39_fu_732_p1 = ap_const_lv2_0)) and not((empty_43_fu_766_p1 = ap_const_lv2_0)) and not((empty_43_fu_766_p1 = ap_const_lv2_1)) and not((empty_39_fu_732_p1 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_25_we0 <= ap_const_logic_1;
        else 
            padded_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_26_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_26_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_26_ce0 <= ap_const_logic_1;
        else 
            padded_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_26_d0 <= ap_const_lv32_0;

    padded_26_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_39_fu_732_p1 = ap_const_lv2_0)) and not((empty_43_fu_766_p1 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_1)) and not((empty_43_fu_766_p1 = ap_const_lv2_1)) and not((empty_39_fu_732_p1 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_26_we0 <= ap_const_logic_1;
        else 
            padded_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_2_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_2_ce0 <= ap_const_logic_1;
        else 
            padded_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_2_d0 <= ap_const_lv32_0;

    padded_2_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_44_reg_843 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_0) and (empty_39_fu_732_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_2_we0 <= ap_const_logic_1;
        else 
            padded_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_3_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_3_ce0 <= ap_const_logic_1;
        else 
            padded_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_3_d0 <= ap_const_lv32_0;

    padded_3_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if (((empty_43_fu_766_p1 = ap_const_lv2_1) and (empty_39_fu_732_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_3_we0 <= ap_const_logic_1;
        else 
            padded_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_4_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_4_ce0 <= ap_const_logic_1;
        else 
            padded_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_4_d0 <= ap_const_lv32_0;

    padded_4_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if (((empty_43_fu_766_p1 = ap_const_lv2_1) and (empty_39_fu_732_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_4_we0 <= ap_const_logic_1;
        else 
            padded_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_5_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_5_ce0 <= ap_const_logic_1;
        else 
            padded_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_5_d0 <= ap_const_lv32_0;

    padded_5_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_44_reg_843 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_1)) and (empty_43_fu_766_p1 = ap_const_lv2_1) and (empty_39_fu_732_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_5_we0 <= ap_const_logic_1;
        else 
            padded_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_6_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_6_ce0 <= ap_const_logic_1;
        else 
            padded_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_6_d0 <= ap_const_lv32_0;

    padded_6_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_43_fu_766_p1 = ap_const_lv2_0)) and not((empty_43_fu_766_p1 = ap_const_lv2_1)) and (empty_39_fu_732_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_6_we0 <= ap_const_logic_1;
        else 
            padded_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_7_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_7_ce0 <= ap_const_logic_1;
        else 
            padded_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_7_d0 <= ap_const_lv32_0;

    padded_7_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_43_fu_766_p1 = ap_const_lv2_0)) and not((empty_43_fu_766_p1 = ap_const_lv2_1)) and (empty_39_fu_732_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_7_we0 <= ap_const_logic_1;
        else 
            padded_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_8_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_8_ce0 <= ap_const_logic_1;
        else 
            padded_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_8_d0 <= ap_const_lv32_0;

    padded_8_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if ((not((empty_43_fu_766_p1 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_0)) and not((empty_44_reg_843 = ap_const_lv2_1)) and not((empty_43_fu_766_p1 = ap_const_lv2_1)) and (empty_39_fu_732_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_8_we0 <= ap_const_logic_1;
        else 
            padded_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_9_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_9_ce0 <= ap_const_logic_1;
        else 
            padded_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_9_d0 <= ap_const_lv32_0;

    padded_9_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if (((empty_43_fu_766_p1 = ap_const_lv2_0) and (empty_39_fu_732_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_9_we0 <= ap_const_logic_1;
        else 
            padded_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_address0 <= p_cast9_fu_736_p1(13 - 1 downto 0);

    padded_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_ce0 <= ap_const_logic_1;
        else 
            padded_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    padded_d0 <= ap_const_lv32_0;

    padded_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, empty_44_reg_843, empty_39_fu_732_p1, empty_43_fu_766_p1)
    begin
        if (((empty_43_fu_766_p1 = ap_const_lv2_0) and (empty_39_fu_732_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_44_reg_843 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            padded_we0 <= ap_const_logic_1;
        else 
            padded_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_107_cast_fu_678_p4 <= phi_mul3614_fu_130(35 downto 29);
end behav;
