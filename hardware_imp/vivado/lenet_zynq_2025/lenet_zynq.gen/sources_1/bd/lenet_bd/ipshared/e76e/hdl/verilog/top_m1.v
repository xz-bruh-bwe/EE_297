// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_m1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_out_0_AWVALID,
        m_axi_gmem_out_0_AWREADY,
        m_axi_gmem_out_0_AWADDR,
        m_axi_gmem_out_0_AWID,
        m_axi_gmem_out_0_AWLEN,
        m_axi_gmem_out_0_AWSIZE,
        m_axi_gmem_out_0_AWBURST,
        m_axi_gmem_out_0_AWLOCK,
        m_axi_gmem_out_0_AWCACHE,
        m_axi_gmem_out_0_AWPROT,
        m_axi_gmem_out_0_AWQOS,
        m_axi_gmem_out_0_AWREGION,
        m_axi_gmem_out_0_AWUSER,
        m_axi_gmem_out_0_WVALID,
        m_axi_gmem_out_0_WREADY,
        m_axi_gmem_out_0_WDATA,
        m_axi_gmem_out_0_WSTRB,
        m_axi_gmem_out_0_WLAST,
        m_axi_gmem_out_0_WID,
        m_axi_gmem_out_0_WUSER,
        m_axi_gmem_out_0_ARVALID,
        m_axi_gmem_out_0_ARREADY,
        m_axi_gmem_out_0_ARADDR,
        m_axi_gmem_out_0_ARID,
        m_axi_gmem_out_0_ARLEN,
        m_axi_gmem_out_0_ARSIZE,
        m_axi_gmem_out_0_ARBURST,
        m_axi_gmem_out_0_ARLOCK,
        m_axi_gmem_out_0_ARCACHE,
        m_axi_gmem_out_0_ARPROT,
        m_axi_gmem_out_0_ARQOS,
        m_axi_gmem_out_0_ARREGION,
        m_axi_gmem_out_0_ARUSER,
        m_axi_gmem_out_0_RVALID,
        m_axi_gmem_out_0_RREADY,
        m_axi_gmem_out_0_RDATA,
        m_axi_gmem_out_0_RLAST,
        m_axi_gmem_out_0_RID,
        m_axi_gmem_out_0_RFIFONUM,
        m_axi_gmem_out_0_RUSER,
        m_axi_gmem_out_0_RRESP,
        m_axi_gmem_out_0_BVALID,
        m_axi_gmem_out_0_BREADY,
        m_axi_gmem_out_0_BRESP,
        m_axi_gmem_out_0_BID,
        m_axi_gmem_out_0_BUSER,
        input_r,
        output_r,
        grp_fu_634_p_din0,
        grp_fu_634_p_din1,
        grp_fu_634_p_opcode,
        grp_fu_634_p_dout0,
        grp_fu_634_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_out_0_AWVALID;
input   m_axi_gmem_out_0_AWREADY;
output  [63:0] m_axi_gmem_out_0_AWADDR;
output  [0:0] m_axi_gmem_out_0_AWID;
output  [31:0] m_axi_gmem_out_0_AWLEN;
output  [2:0] m_axi_gmem_out_0_AWSIZE;
output  [1:0] m_axi_gmem_out_0_AWBURST;
output  [1:0] m_axi_gmem_out_0_AWLOCK;
output  [3:0] m_axi_gmem_out_0_AWCACHE;
output  [2:0] m_axi_gmem_out_0_AWPROT;
output  [3:0] m_axi_gmem_out_0_AWQOS;
output  [3:0] m_axi_gmem_out_0_AWREGION;
output  [0:0] m_axi_gmem_out_0_AWUSER;
output   m_axi_gmem_out_0_WVALID;
input   m_axi_gmem_out_0_WREADY;
output  [31:0] m_axi_gmem_out_0_WDATA;
output  [3:0] m_axi_gmem_out_0_WSTRB;
output   m_axi_gmem_out_0_WLAST;
output  [0:0] m_axi_gmem_out_0_WID;
output  [0:0] m_axi_gmem_out_0_WUSER;
output   m_axi_gmem_out_0_ARVALID;
input   m_axi_gmem_out_0_ARREADY;
output  [63:0] m_axi_gmem_out_0_ARADDR;
output  [0:0] m_axi_gmem_out_0_ARID;
output  [31:0] m_axi_gmem_out_0_ARLEN;
output  [2:0] m_axi_gmem_out_0_ARSIZE;
output  [1:0] m_axi_gmem_out_0_ARBURST;
output  [1:0] m_axi_gmem_out_0_ARLOCK;
output  [3:0] m_axi_gmem_out_0_ARCACHE;
output  [2:0] m_axi_gmem_out_0_ARPROT;
output  [3:0] m_axi_gmem_out_0_ARQOS;
output  [3:0] m_axi_gmem_out_0_ARREGION;
output  [0:0] m_axi_gmem_out_0_ARUSER;
input   m_axi_gmem_out_0_RVALID;
output   m_axi_gmem_out_0_RREADY;
input  [31:0] m_axi_gmem_out_0_RDATA;
input   m_axi_gmem_out_0_RLAST;
input  [0:0] m_axi_gmem_out_0_RID;
input  [8:0] m_axi_gmem_out_0_RFIFONUM;
input  [0:0] m_axi_gmem_out_0_RUSER;
input  [1:0] m_axi_gmem_out_0_RRESP;
input   m_axi_gmem_out_0_BVALID;
output   m_axi_gmem_out_0_BREADY;
input  [1:0] m_axi_gmem_out_0_BRESP;
input  [0:0] m_axi_gmem_out_0_BID;
input  [0:0] m_axi_gmem_out_0_BUSER;
input  [63:0] input_r;
input  [63:0] output_r;
output  [31:0] grp_fu_634_p_din0;
output  [31:0] grp_fu_634_p_din1;
output  [4:0] grp_fu_634_p_opcode;
input  [0:0] grp_fu_634_p_dout0;
output   grp_fu_634_p_ce;

reg ap_idle;
reg m_axi_gmem_out_0_AWVALID;
reg m_axi_gmem_out_0_WVALID;
reg m_axi_gmem_out_0_ARVALID;
reg[63:0] m_axi_gmem_out_0_ARADDR;
reg m_axi_gmem_out_0_RREADY;
reg m_axi_gmem_out_0_BREADY;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
reg   [0:0] icmp_ln55_reg_904;
reg    ap_block_state4_io_grp1;
reg    ap_block_pp0_stage3_subdone_grp1_done_reg;
reg    ap_block_pp0_stage3_subdone_grp1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage3_subdone_grp9_done_reg;
reg    ap_block_pp0_stage3_subdone_grp9;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage3_subdone_grp5_done_reg;
reg    ap_block_pp0_stage3_subdone_grp5;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_out_blk_n_AR;
wire    ap_block_pp0_stage3_grp1;
reg    gmem_out_blk_n_R;
wire    ap_block_pp0_stage3_grp5;
wire    ap_block_pp0_stage0_grp2;
reg    ap_block_pp0_stage0_subdone_grp2_done_reg;
reg    ap_block_pp0_stage0_subdone_grp2;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0_grp6;
reg    ap_block_pp0_stage0_subdone_grp6_done_reg;
reg    ap_block_pp0_stage0_subdone_grp6;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_grp3;
reg    ap_block_pp0_stage1_subdone_grp3_done_reg;
reg    ap_block_pp0_stage1_subdone_grp3;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage1_grp7;
reg    ap_block_pp0_stage1_subdone_grp7_done_reg;
reg    ap_block_pp0_stage1_subdone_grp7;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_grp4;
reg    gmem_out_blk_n_AW;
wire    ap_block_pp0_stage3_grp9;
reg    gmem_out_blk_n_W;
wire    ap_block_pp0_stage0_grp10;
reg    ap_block_pp0_stage0_subdone_grp10_done_reg;
reg    ap_block_pp0_stage0_subdone_grp10;
reg    gmem_out_blk_n_B;
wire    ap_block_pp0_stage1_grp11;
reg    ap_block_pp0_stage1_subdone_grp11_done_reg;
reg    ap_block_pp0_stage1_subdone_grp11;
reg   [31:0] reg_190;
reg    ap_block_pp0_stage3_11001_grp5;
reg    ap_block_pp0_stage1_11001_grp7;
reg   [7:0] reg_194;
reg    ap_block_pp0_stage0_11001_grp6;
reg    ap_block_pp0_stage2_11001_grp4;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
wire   [0:0] icmp_ln55_fu_232_p2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln55_reg_904_pp0_iter1_reg;
reg   [0:0] icmp_ln55_reg_904_pp0_iter2_reg;
reg   [0:0] icmp_ln55_reg_904_pp0_iter3_reg;
reg   [0:0] icmp_ln55_reg_904_pp0_iter4_reg;
reg   [0:0] icmp_ln55_reg_904_pp0_iter5_reg;
reg   [4:0] j_load_reg_908;
wire   [0:0] icmp_ln56_fu_253_p2;
reg   [0:0] icmp_ln56_reg_913;
wire   [0:0] or_ln55_fu_273_p2;
reg   [0:0] or_ln55_reg_919;
wire   [4:0] select_ln56_fu_285_p3;
reg   [4:0] select_ln56_reg_924;
wire   [2:0] select_ln55_2_fu_340_p3;
reg   [2:0] select_ln55_2_reg_935;
wire    ap_block_pp0_stage1_11001_grp0;
reg    ap_block_pp0_stage1_subdone_grp0_done_reg;
wire    ap_block_pp0_stage1_subdone_grp0;
wire   [14:0] empty_fu_350_p2;
reg   [14:0] empty_reg_940;
wire   [14:0] add_ln61_3_fu_356_p2;
reg   [14:0] add_ln61_3_reg_945;
wire   [63:0] zext_ln56_fu_391_p1;
reg   [63:0] zext_ln56_reg_950;
reg   [63:0] gmem_out_addr_reg_955;
reg   [63:0] gmem_out_addr_5_reg_961;
reg   [63:0] gmem_out_addr_6_reg_967;
reg   [63:0] gmem_out_addr_7_reg_973;
reg   [63:0] gmem_out_addr_8_reg_984;
reg    ap_block_pp0_stage3_11001_grp9;
reg   [63:0] gmem_out_addr_8_reg_984_pp0_iter1_reg;
reg   [63:0] gmem_out_addr_8_reg_984_pp0_iter2_reg;
reg   [63:0] gmem_out_addr_8_reg_984_pp0_iter3_reg;
wire   [22:0] trunc_ln64_fu_651_p1;
reg   [22:0] trunc_ln64_reg_991;
wire   [31:0] v1_fu_655_p1;
reg   [31:0] v1_reg_996;
wire   [22:0] trunc_ln64_1_fu_659_p1;
reg   [22:0] trunc_ln64_1_reg_1002;
wire   [0:0] grp_fu_198_p2;
reg   [0:0] icmp_ln64_reg_1007;
wire   [0:0] icmp_ln64_1_fu_663_p2;
reg   [0:0] icmp_ln64_1_reg_1012;
wire   [31:0] v0_fu_668_p1;
reg   [31:0] v0_reg_1017;
reg   [0:0] icmp_ln64_2_reg_1023;
wire   [0:0] icmp_ln64_3_fu_673_p2;
reg   [0:0] icmp_ln64_3_reg_1028;
wire   [22:0] trunc_ln65_fu_678_p1;
reg   [22:0] trunc_ln65_reg_1033;
reg   [31:0] gmem_out_addr_7_read_reg_1038;
wire   [31:0] max1_fu_702_p3;
reg   [31:0] max1_reg_1043;
wire    ap_block_pp0_stage2_11001_grp0;
reg    ap_block_pp0_stage2_subdone_grp0_done_reg;
wire    ap_block_pp0_stage2_subdone_grp0;
reg    ap_block_pp0_stage2_subdone;
reg   [31:0] max1_reg_1043_pp0_iter4_reg;
wire   [22:0] trunc_ln65_1_fu_708_p1;
reg   [22:0] trunc_ln65_1_reg_1050;
reg   [0:0] icmp_ln65_reg_1055;
wire   [0:0] icmp_ln65_1_fu_712_p2;
reg   [0:0] icmp_ln65_1_reg_1060;
wire   [31:0] v2_fu_717_p1;
reg   [31:0] v2_reg_1065;
wire    ap_block_pp0_stage3_11001_grp0;
reg    ap_block_pp0_stage3_subdone_grp0_done_reg;
wire    ap_block_pp0_stage3_subdone_grp0;
wire   [31:0] v3_fu_722_p1;
reg   [31:0] v3_reg_1071;
reg   [0:0] icmp_ln65_2_reg_1077;
wire   [0:0] icmp_ln65_3_fu_726_p2;
reg   [0:0] icmp_ln65_3_reg_1082;
wire   [31:0] max2_fu_751_p3;
reg   [31:0] max2_reg_1087;
wire   [31:0] max_final_fu_839_p3;
reg   [31:0] max_final_reg_1094;
wire  signed [63:0] sext_ln59_fu_455_p1;
wire  signed [63:0] sext_ln60_fu_491_p1;
wire  signed [63:0] sext_ln61_fu_531_p1;
wire  signed [63:0] sext_ln62_fu_557_p1;
wire  signed [63:0] sext_ln68_fu_641_p1;
reg    ap_block_pp0_stage3_11001_grp1;
reg    ap_block_pp0_stage0_11001_grp2;
reg    ap_block_pp0_stage1_11001_grp3;
reg    ap_block_pp0_stage0_11001_grp10;
wire    ap_block_pp0_stage0_01001_grp10;
reg    ap_block_pp0_stage1_11001_grp11;
reg   [4:0] j_fu_112;
wire   [4:0] add_ln57_fu_607_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_load;
wire    ap_block_pp0_stage0;
reg   [4:0] i_fu_116;
reg   [4:0] ap_sig_allocacmp_i_load;
reg   [7:0] indvar_flatten_fu_120;
wire   [7:0] select_ln56_1_fu_313_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [2:0] c_fu_124;
wire    ap_block_pp0_stage1_grp0;
reg   [10:0] indvar_flatten16_fu_128;
wire   [10:0] add_ln55_1_fu_238_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten16_load;
reg   [31:0] grp_fu_176_p0;
reg   [31:0] grp_fu_176_p1;
wire    ap_block_pp0_stage3_grp0;
wire    ap_block_pp0_stage2_grp0;
wire    ap_block_pp0_stage0_grp0;
wire   [0:0] icmp_ln57_fu_267_p2;
wire   [4:0] select_ln55_fu_259_p3;
wire   [4:0] add_ln56_fu_279_p2;
wire   [3:0] tmp_15_fu_293_p4;
wire   [7:0] add_ln56_1_fu_307_p2;
wire   [2:0] add_ln55_fu_334_p2;
wire   [4:0] empty_fu_350_p0;
wire   [10:0] empty_fu_350_p1;
wire   [4:0] select_ln55_1_fu_371_p3;
wire   [4:0] tmp_14_fu_384_p3;
wire   [4:0] j_mid2_fu_377_p3;
wire   [7:0] tmp_13_fu_406_p3;
wire   [9:0] p_shl1_fu_398_p3;
wire   [9:0] zext_ln59_1_fu_414_p1;
wire   [9:0] sub_ln59_fu_418_p2;
wire   [63:0] p_cast9_fu_395_p1;
wire   [63:0] add_ln59_2_fu_428_p2;
wire   [63:0] zext_ln59_fu_424_p1;
wire   [63:0] add_ln59_fu_433_p2;
wire   [63:0] add_ln59_1_fu_439_p2;
wire   [61:0] trunc_ln_fu_445_p4;
wire   [9:0] add_ln60_fu_465_p2;
wire   [63:0] zext_ln60_fu_471_p1;
wire   [63:0] add_ln60_1_fu_475_p2;
wire   [61:0] trunc_ln9_fu_481_p4;
wire   [63:0] zext_ln61_fu_506_p1;
wire   [63:0] add_ln61_2_fu_501_p2;
wire   [63:0] add_ln61_fu_509_p2;
wire   [63:0] add_ln61_1_fu_515_p2;
wire   [61:0] trunc_ln1_fu_521_p4;
wire   [63:0] add_ln62_fu_541_p2;
wire   [61:0] trunc_ln2_fu_547_p4;
wire   [3:0] tmp_16_fu_567_p4;
wire   [6:0] tmp_17_fu_585_p3;
wire   [8:0] p_shl_fu_577_p3;
wire   [8:0] zext_ln68_fu_593_p1;
wire   [8:0] sub_ln68_fu_597_p2;
wire   [12:0] grp_fu_849_p3;
wire   [63:0] zext_ln68_2_fu_622_p1;
wire   [63:0] add_ln68_fu_618_p2;
wire   [63:0] add_ln68_1_fu_625_p2;
wire   [61:0] trunc_ln3_fu_631_p4;
wire   [0:0] or_ln64_fu_682_p2;
wire   [0:0] or_ln64_1_fu_686_p2;
wire   [0:0] and_ln64_fu_690_p2;
wire   [0:0] and_ln64_1_fu_696_p2;
wire   [0:0] or_ln65_fu_731_p2;
wire   [0:0] or_ln65_1_fu_735_p2;
wire   [0:0] and_ln65_fu_739_p2;
wire   [0:0] and_ln65_1_fu_745_p2;
wire   [31:0] bitcast_ln66_fu_757_p1;
wire   [31:0] bitcast_ln66_1_fu_774_p1;
wire   [7:0] tmp_6_fu_760_p4;
wire   [22:0] trunc_ln66_fu_770_p1;
wire   [0:0] icmp_ln66_1_fu_797_p2;
wire   [0:0] icmp_ln66_fu_791_p2;
wire   [7:0] tmp_7_fu_777_p4;
wire   [22:0] trunc_ln66_1_fu_787_p1;
wire   [0:0] icmp_ln66_3_fu_815_p2;
wire   [0:0] icmp_ln66_2_fu_809_p2;
wire   [0:0] or_ln66_fu_803_p2;
wire   [0:0] or_ln66_1_fu_821_p2;
wire   [0:0] and_ln66_fu_827_p2;
wire   [0:0] and_ln66_1_fu_833_p2;
wire   [8:0] grp_fu_849_p0;
wire   [3:0] grp_fu_849_p1;
wire   [8:0] grp_fu_849_p2;
reg    grp_fu_176_ce;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
wire    ap_block_pp0_stage1_00001_grp0;
wire    ap_block_pp0_stage3_00001_grp0;
wire    ap_block_pp0_stage2_00001_grp0;
reg    grp_fu_849_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter5_stage1;
reg    ap_idle_pp0_0to4;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to6;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [14:0] empty_fu_350_p00;
wire   [12:0] grp_fu_849_p10;
wire   [12:0] grp_fu_849_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp1_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp9_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp5_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp2_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp6_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp3_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp7_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp10_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp11_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp0_done_reg = 1'b0;
#0 j_fu_112 = 5'd0;
#0 i_fu_116 = 5'd0;
#0 indvar_flatten_fu_120 = 8'd0;
#0 c_fu_124 = 3'd0;
#0 indvar_flatten16_fu_128 = 11'd0;
#0 ap_done_reg = 1'b0;
end

top_mul_5ns_11ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 15 ))
mul_5ns_11ns_15_1_1_U149(
    .din0(empty_fu_350_p0),
    .din1(empty_fu_350_p1),
    .dout(empty_fu_350_p2)
);

top_mac_muladd_9ns_4ns_9ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 13 ))
mac_muladd_9ns_4ns_9ns_13_4_1_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_849_p0),
    .din1(grp_fu_849_p1),
    .din2(grp_fu_849_p2),
    .ce(grp_fu_849_ce),
    .dout(grp_fu_849_p3)
);

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp10_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp10_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp10)) begin
                ap_block_pp0_stage0_subdone_grp10_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp2_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp2)) begin
                ap_block_pp0_stage0_subdone_grp2_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp6_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp6_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp6)) begin
                ap_block_pp0_stage0_subdone_grp6_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp0)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp11_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp11_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp11)) begin
                ap_block_pp0_stage1_subdone_grp11_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp3_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp3_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp3)) begin
                ap_block_pp0_stage1_subdone_grp3_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp7_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp7_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp7)) begin
                ap_block_pp0_stage1_subdone_grp7_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp0)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp0)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp1_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp1)) begin
                ap_block_pp0_stage3_subdone_grp1_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp5)) begin
                ap_block_pp0_stage3_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp9_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp9_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp9)) begin
                ap_block_pp0_stage3_subdone_grp9_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage1) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage1) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage1) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage1) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage1) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        c_fu_124 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (icmp_ln55_reg_904 == 1'd0))) begin
        c_fu_124 <= select_ln55_2_fu_340_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_116 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (icmp_ln55_reg_904 == 1'd0))) begin
        i_fu_116 <= select_ln56_reg_924;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln55_fu_232_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten16_fu_128 <= add_ln55_1_fu_238_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten16_fu_128 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln55_fu_232_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_120 <= select_ln56_1_fu_313_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_120 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_fu_112 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001_grp4) & (icmp_ln55_reg_904 == 1'd0))) begin
        j_fu_112 <= add_ln57_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))) begin
        add_ln61_3_reg_945 <= add_ln61_3_fu_356_p2;
        empty_reg_940 <= empty_fu_350_p2;
        icmp_ln64_3_reg_1028 <= icmp_ln64_3_fu_673_p2;
        select_ln55_2_reg_935 <= select_ln55_2_fu_340_p3;
        v0_reg_1017 <= v0_fu_668_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp4))) begin
        gmem_out_addr_5_reg_961 <= sext_ln60_fu_491_p1;
        gmem_out_addr_6_reg_967 <= sext_ln61_fu_531_p1;
        gmem_out_addr_7_reg_973 <= sext_ln62_fu_557_p1;
        gmem_out_addr_reg_955 <= sext_ln59_fu_455_p1;
        trunc_ln65_1_reg_1050 <= trunc_ln65_1_fu_708_p1;
        zext_ln56_reg_950[4 : 2] <= zext_ln56_fu_391_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp4))) begin
        gmem_out_addr_7_read_reg_1038 <= m_axi_gmem_out_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp9) & (1'b0 == ap_block_pp0_stage3_subdone_grp9_done_reg))) begin
        gmem_out_addr_8_reg_984 <= sext_ln68_fu_641_p1;
        gmem_out_addr_8_reg_984_pp0_iter1_reg <= gmem_out_addr_8_reg_984;
        gmem_out_addr_8_reg_984_pp0_iter2_reg <= gmem_out_addr_8_reg_984_pp0_iter1_reg;
        gmem_out_addr_8_reg_984_pp0_iter3_reg <= gmem_out_addr_8_reg_984_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln55_reg_904 <= icmp_ln55_fu_232_p2;
        icmp_ln55_reg_904_pp0_iter1_reg <= icmp_ln55_reg_904;
        icmp_ln55_reg_904_pp0_iter2_reg <= icmp_ln55_reg_904_pp0_iter1_reg;
        icmp_ln55_reg_904_pp0_iter3_reg <= icmp_ln55_reg_904_pp0_iter2_reg;
        icmp_ln55_reg_904_pp0_iter4_reg <= icmp_ln55_reg_904_pp0_iter3_reg;
        icmp_ln55_reg_904_pp0_iter5_reg <= icmp_ln55_reg_904_pp0_iter4_reg;
        icmp_ln56_reg_913 <= icmp_ln56_fu_253_p2;
        j_load_reg_908 <= ap_sig_allocacmp_j_load;
        or_ln55_reg_919 <= or_ln55_fu_273_p2;
        select_ln56_reg_924 <= select_ln56_fu_285_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        icmp_ln64_1_reg_1012 <= icmp_ln64_1_fu_663_p2;
        max2_reg_1087 <= max2_fu_751_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))) begin
        icmp_ln64_2_reg_1023 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        icmp_ln64_reg_1007 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        icmp_ln65_1_reg_1060 <= icmp_ln65_1_fu_712_p2;
        max1_reg_1043 <= max1_fu_702_p3;
        max1_reg_1043_pp0_iter4_reg <= max1_reg_1043;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))) begin
        icmp_ln65_2_reg_1077 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))) begin
        icmp_ln65_3_reg_1082 <= icmp_ln65_3_fu_726_p2;
        max_final_reg_1094 <= max_final_fu_839_p3;
        v2_reg_1065 <= v2_fu_717_p1;
        v3_reg_1071 <= v3_fu_722_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        icmp_ln65_reg_1055 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp7) & (1'b0 == ap_block_pp0_stage1_subdone_grp7_done_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp5) & (1'b0 == ap_block_pp0_stage3_subdone_grp5_done_reg)))) begin
        reg_190 <= m_axi_gmem_out_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp7) & (1'b0 == ap_block_pp0_stage1_subdone_grp7_done_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp6) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp5) & (1'b0 == ap_block_pp0_stage3_subdone_grp5_done_reg)))) begin
        reg_194 <= {{m_axi_gmem_out_0_RDATA[30:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp6) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg))) begin
        trunc_ln64_1_reg_1002 <= trunc_ln64_1_fu_659_p1;
        v1_reg_996 <= v1_fu_655_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp5) & (1'b0 == ap_block_pp0_stage3_subdone_grp5_done_reg))) begin
        trunc_ln64_reg_991 <= trunc_ln64_fu_651_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp7) & (1'b0 == ap_block_pp0_stage1_subdone_grp7_done_reg))) begin
        trunc_ln65_reg_1033 <= trunc_ln65_fu_678_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (icmp_ln55_reg_904 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln55_reg_904_pp0_iter5_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter5_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter5_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to6 = 1'b1;
    end else begin
        ap_idle_pp0_1to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_116;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten16_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten16_load = indvar_flatten16_fu_128;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_120;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 5'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_112;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_grp1) & (1'b0 == ap_block_pp0_stage3_subdone_grp1_done_reg) & (icmp_ln55_reg_904 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage1_grp3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage0_grp2)))) begin
        gmem_out_blk_n_AR = m_axi_gmem_out_0_ARREADY;
    end else begin
        gmem_out_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_grp9) & (1'b0 == ap_block_pp0_stage3_subdone_grp9_done_reg))) begin
        gmem_out_blk_n_AW = m_axi_gmem_out_0_AWREADY;
    end else begin
        gmem_out_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg) & (1'b0 == ap_block_pp0_stage1_grp11))) begin
        gmem_out_blk_n_B = m_axi_gmem_out_0_BVALID;
    end else begin
        gmem_out_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage1_grp7)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg) & (1'b0 == ap_block_pp0_stage0_grp6)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_grp5) & (1'b0 == ap_block_pp0_stage3_subdone_grp5_done_reg)))) begin
        gmem_out_blk_n_R = m_axi_gmem_out_0_RVALID;
    end else begin
        gmem_out_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg) & (1'b0 == ap_block_pp0_stage0_grp10))) begin
        gmem_out_blk_n_W = m_axi_gmem_out_0_WREADY;
    end else begin
        gmem_out_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0)))) begin
        grp_fu_176_ce = 1'b1;
    end else begin
        grp_fu_176_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp0))) begin
        grp_fu_176_p0 = max1_reg_1043;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_grp0))) begin
        grp_fu_176_p0 = v2_fu_717_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_grp0))) begin
        grp_fu_176_p0 = v0_fu_668_p1;
    end else begin
        grp_fu_176_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp0))) begin
        grp_fu_176_p1 = max2_reg_1087;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_grp0))) begin
        grp_fu_176_p1 = v3_fu_722_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_grp0))) begin
        grp_fu_176_p1 = v1_reg_996;
    end else begin
        grp_fu_176_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp9) & (1'b0 == ap_block_pp0_stage3_subdone_grp9_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp4)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_849_ce = 1'b1;
    end else begin
        grp_fu_849_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp4))) begin
        m_axi_gmem_out_0_ARADDR = gmem_out_addr_7_reg_973;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp3) & (1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg))) begin
        m_axi_gmem_out_0_ARADDR = gmem_out_addr_6_reg_967;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg))) begin
        m_axi_gmem_out_0_ARADDR = gmem_out_addr_5_reg_961;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001_grp1) & (1'b0 == ap_block_pp0_stage3_subdone_grp1_done_reg) & (icmp_ln55_reg_904 == 1'd0))) begin
        m_axi_gmem_out_0_ARADDR = gmem_out_addr_reg_955;
    end else begin
        m_axi_gmem_out_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001_grp1) & (1'b0 == ap_block_pp0_stage3_subdone_grp1_done_reg) & (icmp_ln55_reg_904 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp3) & (1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg)))) begin
        m_axi_gmem_out_0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_out_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp9) & (1'b0 == ap_block_pp0_stage3_subdone_grp9_done_reg))) begin
        m_axi_gmem_out_0_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_out_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp11) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg))) begin
        m_axi_gmem_out_0_BREADY = 1'b1;
    end else begin
        m_axi_gmem_out_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp7) & (1'b0 == ap_block_pp0_stage1_subdone_grp7_done_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp6) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp5) & (1'b0 == ap_block_pp0_stage3_subdone_grp5_done_reg)))) begin
        m_axi_gmem_out_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem_out_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp10) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg))) begin
        m_axi_gmem_out_0_WVALID = 1'b1;
    end else begin
        m_axi_gmem_out_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to6 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter5_stage1) & (ap_idle_pp0_0to4 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_1_fu_238_p2 = (ap_sig_allocacmp_indvar_flatten16_load + 11'd1);

assign add_ln55_fu_334_p2 = (c_fu_124 + 3'd1);

assign add_ln56_1_fu_307_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln56_fu_279_p2 = (select_ln55_fu_259_p3 + 5'd2);

assign add_ln57_fu_607_p2 = (j_mid2_fu_377_p3 + 5'd2);

assign add_ln59_1_fu_439_p2 = (zext_ln59_fu_424_p1 + add_ln59_fu_433_p2);

assign add_ln59_2_fu_428_p2 = (p_cast9_fu_395_p1 + input_r);

assign add_ln59_fu_433_p2 = (add_ln59_2_fu_428_p2 + zext_ln56_fu_391_p1);

assign add_ln60_1_fu_475_p2 = (zext_ln60_fu_471_p1 + add_ln59_fu_433_p2);

assign add_ln60_fu_465_p2 = (sub_ln59_fu_418_p2 + 10'd24);

assign add_ln61_1_fu_515_p2 = (zext_ln59_fu_424_p1 + add_ln61_fu_509_p2);

assign add_ln61_2_fu_501_p2 = (zext_ln56_fu_391_p1 + input_r);

assign add_ln61_3_fu_356_p2 = (empty_fu_350_p2 + 15'd672);

assign add_ln61_fu_509_p2 = (zext_ln61_fu_506_p1 + add_ln61_2_fu_501_p2);

assign add_ln62_fu_541_p2 = (zext_ln60_fu_471_p1 + add_ln61_fu_509_p2);

assign add_ln68_1_fu_625_p2 = (zext_ln68_2_fu_622_p1 + add_ln68_fu_618_p2);

assign add_ln68_fu_618_p2 = (zext_ln56_reg_950 + output_r);

assign and_ln64_1_fu_696_p2 = (grp_fu_634_p_dout0 & and_ln64_fu_690_p2);

assign and_ln64_fu_690_p2 = (or_ln64_fu_682_p2 & or_ln64_1_fu_686_p2);

assign and_ln65_1_fu_745_p2 = (grp_fu_634_p_dout0 & and_ln65_fu_739_p2);

assign and_ln65_fu_739_p2 = (or_ln65_fu_731_p2 & or_ln65_1_fu_735_p2);

assign and_ln66_1_fu_833_p2 = (grp_fu_634_p_dout0 & and_ln66_fu_827_p2);

assign and_ln66_fu_827_p2 = (or_ln66_fu_803_p2 & or_ln66_1_fu_821_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001_grp10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_gmem_out_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg)));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp10 = ((m_axi_gmem_out_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp2 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp6 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_gmem_out_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg)));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp10 = ((m_axi_gmem_out_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp10_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp2 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp6 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp6_done_reg));
end

assign ap_block_pp0_stage1_00001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((m_axi_gmem_out_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp7_done_reg)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg)));
end

assign ap_block_pp0_stage1_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001_grp11 = ((m_axi_gmem_out_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp3 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp7 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp7_done_reg));
end

assign ap_block_pp0_stage1_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((m_axi_gmem_out_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp7_done_reg)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg)));
end

assign ap_block_pp0_stage1_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp11 = ((m_axi_gmem_out_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp11_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp3 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp7 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp7_done_reg));
end

assign ap_block_pp0_stage2_00001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001_grp4 = (((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((m_axi_gmem_out_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp9_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp5_done_reg)) | ((1'b1 == ap_block_state4_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp1_done_reg)));
end

assign ap_block_pp0_stage3_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001_grp1 = ((1'b1 == ap_block_state4_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_grp5 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp5_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_grp9 = ((m_axi_gmem_out_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp9_done_reg));
end

assign ap_block_pp0_stage3_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((m_axi_gmem_out_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp9_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp5_done_reg)) | ((1'b1 == ap_block_state4_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp1_done_reg)));
end

assign ap_block_pp0_stage3_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp1 = ((1'b1 == ap_block_state4_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp5 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp5_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp9 = ((m_axi_gmem_out_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp9_done_reg));
end

always @ (*) begin
    ap_block_state4_io_grp1 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (icmp_ln55_reg_904 == 1'd0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ap_ready = ap_ready_sig;

assign bitcast_ln66_1_fu_774_p1 = max2_reg_1087;

assign bitcast_ln66_fu_757_p1 = max1_reg_1043_pp0_iter4_reg;

assign empty_fu_350_p0 = empty_fu_350_p00;

assign empty_fu_350_p00 = select_ln56_reg_924;

assign empty_fu_350_p1 = 15'd672;

assign grp_fu_198_p2 = ((reg_194 != 8'd255) ? 1'b1 : 1'b0);

assign grp_fu_634_p_ce = grp_fu_176_ce;

assign grp_fu_634_p_din0 = grp_fu_176_p0;

assign grp_fu_634_p_din1 = grp_fu_176_p1;

assign grp_fu_634_p_opcode = 5'd2;

assign grp_fu_849_p0 = 13'd336;

assign grp_fu_849_p1 = grp_fu_849_p10;

assign grp_fu_849_p10 = tmp_15_fu_293_p4;

assign grp_fu_849_p2 = grp_fu_849_p20;

assign grp_fu_849_p20 = sub_ln68_fu_597_p2;

assign icmp_ln55_fu_232_p2 = ((ap_sig_allocacmp_indvar_flatten16_load == 11'd1176) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_253_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd196) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_267_p2 = ((ap_sig_allocacmp_j_load < 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln64_1_fu_663_p2 = ((trunc_ln64_reg_991 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_3_fu_673_p2 = ((trunc_ln64_1_reg_1002 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln65_1_fu_712_p2 = ((trunc_ln65_reg_1033 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln65_3_fu_726_p2 = ((trunc_ln65_1_reg_1050 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln66_1_fu_797_p2 = ((trunc_ln66_fu_770_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln66_2_fu_809_p2 = ((tmp_7_fu_777_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln66_3_fu_815_p2 = ((trunc_ln66_1_fu_787_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_791_p2 = ((tmp_6_fu_760_p4 != 8'd255) ? 1'b1 : 1'b0);

assign j_mid2_fu_377_p3 = ((or_ln55_reg_919[0:0] == 1'b1) ? select_ln55_1_fu_371_p3 : 5'd0);

assign m_axi_gmem_out_0_ARBURST = 2'd0;

assign m_axi_gmem_out_0_ARCACHE = 4'd0;

assign m_axi_gmem_out_0_ARID = 1'd0;

assign m_axi_gmem_out_0_ARLEN = 64'd1;

assign m_axi_gmem_out_0_ARLOCK = 2'd0;

assign m_axi_gmem_out_0_ARPROT = 3'd0;

assign m_axi_gmem_out_0_ARQOS = 4'd0;

assign m_axi_gmem_out_0_ARREGION = 4'd0;

assign m_axi_gmem_out_0_ARSIZE = 3'd0;

assign m_axi_gmem_out_0_ARUSER = 1'd0;

assign m_axi_gmem_out_0_AWADDR = gmem_out_addr_8_reg_984_pp0_iter3_reg;

assign m_axi_gmem_out_0_AWBURST = 2'd0;

assign m_axi_gmem_out_0_AWCACHE = 4'd0;

assign m_axi_gmem_out_0_AWID = 1'd0;

assign m_axi_gmem_out_0_AWLEN = 64'd1;

assign m_axi_gmem_out_0_AWLOCK = 2'd0;

assign m_axi_gmem_out_0_AWPROT = 3'd0;

assign m_axi_gmem_out_0_AWQOS = 4'd0;

assign m_axi_gmem_out_0_AWREGION = 4'd0;

assign m_axi_gmem_out_0_AWSIZE = 3'd0;

assign m_axi_gmem_out_0_AWUSER = 1'd0;

assign m_axi_gmem_out_0_WDATA = max_final_reg_1094;

assign m_axi_gmem_out_0_WID = 1'd0;

assign m_axi_gmem_out_0_WLAST = 1'b0;

assign m_axi_gmem_out_0_WSTRB = 4'd15;

assign m_axi_gmem_out_0_WUSER = 1'd0;

assign max1_fu_702_p3 = ((and_ln64_1_fu_696_p2[0:0] == 1'b1) ? v0_reg_1017 : v1_reg_996);

assign max2_fu_751_p3 = ((and_ln65_1_fu_745_p2[0:0] == 1'b1) ? v2_reg_1065 : v3_reg_1071);

assign max_final_fu_839_p3 = ((and_ln66_1_fu_833_p2[0:0] == 1'b1) ? max1_reg_1043_pp0_iter4_reg : max2_reg_1087);

assign or_ln55_fu_273_p2 = (icmp_ln57_fu_267_p2 | icmp_ln56_fu_253_p2);

assign or_ln64_1_fu_686_p2 = (icmp_ln64_3_reg_1028 | icmp_ln64_2_reg_1023);

assign or_ln64_fu_682_p2 = (icmp_ln64_reg_1007 | icmp_ln64_1_reg_1012);

assign or_ln65_1_fu_735_p2 = (icmp_ln65_3_reg_1082 | icmp_ln65_2_reg_1077);

assign or_ln65_fu_731_p2 = (icmp_ln65_reg_1055 | icmp_ln65_1_reg_1060);

assign or_ln66_1_fu_821_p2 = (icmp_ln66_3_fu_815_p2 | icmp_ln66_2_fu_809_p2);

assign or_ln66_fu_803_p2 = (icmp_ln66_fu_791_p2 | icmp_ln66_1_fu_797_p2);

assign p_cast9_fu_395_p1 = empty_reg_940;

assign p_shl1_fu_398_p3 = {{j_mid2_fu_377_p3}, {5'd0}};

assign p_shl_fu_577_p3 = {{tmp_16_fu_567_p4}, {5'd0}};

assign select_ln55_1_fu_371_p3 = ((icmp_ln56_reg_913[0:0] == 1'b1) ? 5'd0 : j_load_reg_908);

assign select_ln55_2_fu_340_p3 = ((icmp_ln56_reg_913[0:0] == 1'b1) ? add_ln55_fu_334_p2 : c_fu_124);

assign select_ln55_fu_259_p3 = ((icmp_ln56_fu_253_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_i_load);

assign select_ln56_1_fu_313_p3 = ((icmp_ln56_fu_253_p2[0:0] == 1'b1) ? 8'd1 : add_ln56_1_fu_307_p2);

assign select_ln56_fu_285_p3 = ((or_ln55_fu_273_p2[0:0] == 1'b1) ? select_ln55_fu_259_p3 : add_ln56_fu_279_p2);

assign sext_ln59_fu_455_p1 = $signed(trunc_ln_fu_445_p4);

assign sext_ln60_fu_491_p1 = $signed(trunc_ln9_fu_481_p4);

assign sext_ln61_fu_531_p1 = $signed(trunc_ln1_fu_521_p4);

assign sext_ln62_fu_557_p1 = $signed(trunc_ln2_fu_547_p4);

assign sext_ln68_fu_641_p1 = $signed(trunc_ln3_fu_631_p4);

assign sub_ln59_fu_418_p2 = (p_shl1_fu_398_p3 - zext_ln59_1_fu_414_p1);

assign sub_ln68_fu_597_p2 = (p_shl_fu_577_p3 - zext_ln68_fu_593_p1);

assign tmp_13_fu_406_p3 = {{j_mid2_fu_377_p3}, {3'd0}};

assign tmp_14_fu_384_p3 = {{select_ln55_2_reg_935}, {2'd0}};

assign tmp_15_fu_293_p4 = {{select_ln56_fu_285_p3[4:1]}};

assign tmp_16_fu_567_p4 = {{j_mid2_fu_377_p3[4:1]}};

assign tmp_17_fu_585_p3 = {{tmp_16_fu_567_p4}, {3'd0}};

assign tmp_6_fu_760_p4 = {{bitcast_ln66_fu_757_p1[30:23]}};

assign tmp_7_fu_777_p4 = {{bitcast_ln66_1_fu_774_p1[30:23]}};

assign trunc_ln1_fu_521_p4 = {{add_ln61_1_fu_515_p2[63:2]}};

assign trunc_ln2_fu_547_p4 = {{add_ln62_fu_541_p2[63:2]}};

assign trunc_ln3_fu_631_p4 = {{add_ln68_1_fu_625_p2[63:2]}};

assign trunc_ln64_1_fu_659_p1 = m_axi_gmem_out_0_RDATA[22:0];

assign trunc_ln64_fu_651_p1 = m_axi_gmem_out_0_RDATA[22:0];

assign trunc_ln65_1_fu_708_p1 = m_axi_gmem_out_0_RDATA[22:0];

assign trunc_ln65_fu_678_p1 = m_axi_gmem_out_0_RDATA[22:0];

assign trunc_ln66_1_fu_787_p1 = bitcast_ln66_1_fu_774_p1[22:0];

assign trunc_ln66_fu_770_p1 = bitcast_ln66_fu_757_p1[22:0];

assign trunc_ln9_fu_481_p4 = {{add_ln60_1_fu_475_p2[63:2]}};

assign trunc_ln_fu_445_p4 = {{add_ln59_1_fu_439_p2[63:2]}};

assign v0_fu_668_p1 = reg_190;

assign v1_fu_655_p1 = m_axi_gmem_out_0_RDATA;

assign v2_fu_717_p1 = reg_190;

assign v3_fu_722_p1 = gmem_out_addr_7_read_reg_1038;

assign zext_ln56_fu_391_p1 = tmp_14_fu_384_p3;

assign zext_ln59_1_fu_414_p1 = tmp_13_fu_406_p3;

assign zext_ln59_fu_424_p1 = sub_ln59_fu_418_p2;

assign zext_ln60_fu_471_p1 = add_ln60_fu_465_p2;

assign zext_ln61_fu_506_p1 = add_ln61_3_reg_945;

assign zext_ln68_2_fu_622_p1 = grp_fu_849_p3;

assign zext_ln68_fu_593_p1 = tmp_17_fu_585_p3;

always @ (posedge ap_clk) begin
    zext_ln56_reg_950[1:0] <= 2'b00;
    zext_ln56_reg_950[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //top_m1
