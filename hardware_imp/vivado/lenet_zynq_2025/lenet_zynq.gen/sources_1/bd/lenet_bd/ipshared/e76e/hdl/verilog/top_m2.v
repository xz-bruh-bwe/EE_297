// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_m2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_out_0_AWVALID,
        m_axi_gmem_out_0_AWREADY,
        m_axi_gmem_out_0_AWADDR,
        m_axi_gmem_out_0_AWID,
        m_axi_gmem_out_0_AWLEN,
        m_axi_gmem_out_0_AWSIZE,
        m_axi_gmem_out_0_AWBURST,
        m_axi_gmem_out_0_AWLOCK,
        m_axi_gmem_out_0_AWCACHE,
        m_axi_gmem_out_0_AWPROT,
        m_axi_gmem_out_0_AWQOS,
        m_axi_gmem_out_0_AWREGION,
        m_axi_gmem_out_0_AWUSER,
        m_axi_gmem_out_0_WVALID,
        m_axi_gmem_out_0_WREADY,
        m_axi_gmem_out_0_WDATA,
        m_axi_gmem_out_0_WSTRB,
        m_axi_gmem_out_0_WLAST,
        m_axi_gmem_out_0_WID,
        m_axi_gmem_out_0_WUSER,
        m_axi_gmem_out_0_ARVALID,
        m_axi_gmem_out_0_ARREADY,
        m_axi_gmem_out_0_ARADDR,
        m_axi_gmem_out_0_ARID,
        m_axi_gmem_out_0_ARLEN,
        m_axi_gmem_out_0_ARSIZE,
        m_axi_gmem_out_0_ARBURST,
        m_axi_gmem_out_0_ARLOCK,
        m_axi_gmem_out_0_ARCACHE,
        m_axi_gmem_out_0_ARPROT,
        m_axi_gmem_out_0_ARQOS,
        m_axi_gmem_out_0_ARREGION,
        m_axi_gmem_out_0_ARUSER,
        m_axi_gmem_out_0_RVALID,
        m_axi_gmem_out_0_RREADY,
        m_axi_gmem_out_0_RDATA,
        m_axi_gmem_out_0_RLAST,
        m_axi_gmem_out_0_RID,
        m_axi_gmem_out_0_RFIFONUM,
        m_axi_gmem_out_0_RUSER,
        m_axi_gmem_out_0_RRESP,
        m_axi_gmem_out_0_BVALID,
        m_axi_gmem_out_0_BREADY,
        m_axi_gmem_out_0_BRESP,
        m_axi_gmem_out_0_BID,
        m_axi_gmem_out_0_BUSER,
        input_r,
        output_r,
        grp_fu_634_p_din0,
        grp_fu_634_p_din1,
        grp_fu_634_p_opcode,
        grp_fu_634_p_dout0,
        grp_fu_634_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_out_0_AWVALID;
input   m_axi_gmem_out_0_AWREADY;
output  [63:0] m_axi_gmem_out_0_AWADDR;
output  [0:0] m_axi_gmem_out_0_AWID;
output  [31:0] m_axi_gmem_out_0_AWLEN;
output  [2:0] m_axi_gmem_out_0_AWSIZE;
output  [1:0] m_axi_gmem_out_0_AWBURST;
output  [1:0] m_axi_gmem_out_0_AWLOCK;
output  [3:0] m_axi_gmem_out_0_AWCACHE;
output  [2:0] m_axi_gmem_out_0_AWPROT;
output  [3:0] m_axi_gmem_out_0_AWQOS;
output  [3:0] m_axi_gmem_out_0_AWREGION;
output  [0:0] m_axi_gmem_out_0_AWUSER;
output   m_axi_gmem_out_0_WVALID;
input   m_axi_gmem_out_0_WREADY;
output  [31:0] m_axi_gmem_out_0_WDATA;
output  [3:0] m_axi_gmem_out_0_WSTRB;
output   m_axi_gmem_out_0_WLAST;
output  [0:0] m_axi_gmem_out_0_WID;
output  [0:0] m_axi_gmem_out_0_WUSER;
output   m_axi_gmem_out_0_ARVALID;
input   m_axi_gmem_out_0_ARREADY;
output  [63:0] m_axi_gmem_out_0_ARADDR;
output  [0:0] m_axi_gmem_out_0_ARID;
output  [31:0] m_axi_gmem_out_0_ARLEN;
output  [2:0] m_axi_gmem_out_0_ARSIZE;
output  [1:0] m_axi_gmem_out_0_ARBURST;
output  [1:0] m_axi_gmem_out_0_ARLOCK;
output  [3:0] m_axi_gmem_out_0_ARCACHE;
output  [2:0] m_axi_gmem_out_0_ARPROT;
output  [3:0] m_axi_gmem_out_0_ARQOS;
output  [3:0] m_axi_gmem_out_0_ARREGION;
output  [0:0] m_axi_gmem_out_0_ARUSER;
input   m_axi_gmem_out_0_RVALID;
output   m_axi_gmem_out_0_RREADY;
input  [31:0] m_axi_gmem_out_0_RDATA;
input   m_axi_gmem_out_0_RLAST;
input  [0:0] m_axi_gmem_out_0_RID;
input  [8:0] m_axi_gmem_out_0_RFIFONUM;
input  [0:0] m_axi_gmem_out_0_RUSER;
input  [1:0] m_axi_gmem_out_0_RRESP;
input   m_axi_gmem_out_0_BVALID;
output   m_axi_gmem_out_0_BREADY;
input  [1:0] m_axi_gmem_out_0_BRESP;
input  [0:0] m_axi_gmem_out_0_BID;
input  [0:0] m_axi_gmem_out_0_BUSER;
input  [63:0] input_r;
input  [63:0] output_r;
output  [31:0] grp_fu_634_p_din0;
output  [31:0] grp_fu_634_p_din1;
output  [4:0] grp_fu_634_p_opcode;
input  [0:0] grp_fu_634_p_dout0;
output   grp_fu_634_p_ce;

reg ap_idle;
reg m_axi_gmem_out_0_AWVALID;
reg m_axi_gmem_out_0_WVALID;
reg m_axi_gmem_out_0_ARVALID;
reg[63:0] m_axi_gmem_out_0_ARADDR;
reg m_axi_gmem_out_0_RREADY;
reg m_axi_gmem_out_0_BREADY;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
reg   [0:0] icmp_ln112_reg_924;
reg    ap_block_state4_io_grp2;
reg    ap_block_pp0_stage3_subdone_grp2_done_reg;
reg    ap_block_pp0_stage3_subdone_grp2;
reg    ap_block_pp0_stage3_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage3_subdone_grp6_done_reg;
reg    ap_block_pp0_stage3_subdone_grp6;
reg    ap_block_pp0_stage3_subdone_grp10_done_reg;
reg    ap_block_pp0_stage3_subdone_grp10;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_out_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_grp1;
reg    ap_block_pp0_stage2_subdone_grp1_done_reg;
reg    ap_block_pp0_stage2_subdone_grp1;
reg    ap_block_pp0_stage2_subdone;
reg    gmem_out_blk_n_R;
wire    ap_block_pp0_stage2_grp5;
reg    ap_block_pp0_stage2_subdone_grp5_done_reg;
reg    ap_block_pp0_stage2_subdone_grp5;
wire    ap_block_pp0_stage3_grp2;
wire    ap_block_pp0_stage3_grp6;
wire    ap_block_pp0_stage0_grp3;
reg    ap_block_pp0_stage0_subdone_grp3_done_reg;
reg    ap_block_pp0_stage0_subdone_grp3;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0_grp7;
reg    ap_block_pp0_stage0_subdone_grp7_done_reg;
reg    ap_block_pp0_stage0_subdone_grp7;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_grp4;
reg    ap_block_pp0_stage1_subdone_grp4_done_reg;
reg    ap_block_pp0_stage1_subdone_grp4;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage1_grp8;
reg    ap_block_pp0_stage1_subdone_grp8_done_reg;
reg    ap_block_pp0_stage1_subdone_grp8;
reg    gmem_out_blk_n_AW;
wire    ap_block_pp0_stage2_grp9;
reg    ap_block_pp0_stage2_subdone_grp9_done_reg;
reg    ap_block_pp0_stage2_subdone_grp9;
reg    gmem_out_blk_n_W;
wire    ap_block_pp0_stage3_grp10;
reg    gmem_out_blk_n_B;
wire    ap_block_pp0_stage0_grp11;
reg    ap_block_pp0_stage0_subdone_grp11_done_reg;
reg    ap_block_pp0_stage0_subdone_grp11;
reg   [31:0] reg_198;
reg    ap_block_pp0_stage2_11001_grp5;
reg    ap_block_pp0_stage0_11001_grp7;
reg   [7:0] reg_202;
reg    ap_block_pp0_stage3_11001_grp6;
reg    ap_block_pp0_stage1_11001_grp8;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
wire   [0:0] icmp_ln112_fu_240_p2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln112_reg_924_pp0_iter1_reg;
reg   [0:0] icmp_ln112_reg_924_pp0_iter2_reg;
reg   [0:0] icmp_ln112_reg_924_pp0_iter3_reg;
reg   [0:0] icmp_ln112_reg_924_pp0_iter4_reg;
wire   [3:0] j_mid2_fu_318_p3;
reg   [3:0] j_mid2_reg_928;
wire   [3:0] empty_fu_334_p1;
reg   [3:0] empty_reg_934;
wire   [13:0] empty_43_fu_362_p2;
reg   [13:0] empty_43_reg_939;
wire   [12:0] empty_44_fu_368_p1;
reg   [12:0] empty_44_reg_944;
reg   [2:0] tmp_11_reg_949;
reg   [2:0] tmp_13_reg_955;
wire   [63:0] zext_ln116_fu_482_p1;
reg   [63:0] zext_ln116_reg_960;
wire    ap_block_pp0_stage1_11001_grp0;
reg    ap_block_pp0_stage1_subdone_grp0_done_reg;
wire    ap_block_pp0_stage1_subdone_grp0;
wire   [63:0] add_ln116_fu_491_p2;
reg   [63:0] add_ln116_reg_965;
reg   [63:0] gmem_out_addr_reg_970;
wire   [63:0] add_ln118_fu_537_p2;
reg   [63:0] add_ln118_reg_976;
reg   [63:0] gmem_out_addr_4_reg_982;
reg   [63:0] gmem_out_addr_4_reg_982_pp0_iter1_reg;
reg   [63:0] gmem_out_addr_4_reg_982_pp0_iter2_reg;
reg   [63:0] gmem_out_addr_4_reg_982_pp0_iter3_reg;
reg   [63:0] gmem_out_addr_4_reg_982_pp0_iter4_reg;
reg   [63:0] gmem_out_addr_1_reg_989;
wire    ap_block_pp0_stage2_11001_grp0;
reg    ap_block_pp0_stage2_subdone_grp0_done_reg;
wire    ap_block_pp0_stage2_subdone_grp0;
reg   [63:0] gmem_out_addr_2_reg_995;
reg   [63:0] gmem_out_addr_3_reg_1001;
wire   [22:0] trunc_ln121_fu_680_p1;
reg   [22:0] trunc_ln121_reg_1007;
wire   [31:0] v1_fu_684_p1;
reg   [31:0] v1_reg_1012;
wire   [22:0] trunc_ln121_1_fu_688_p1;
reg   [22:0] trunc_ln121_1_reg_1018;
wire   [0:0] grp_fu_206_p2;
reg   [0:0] icmp_ln121_reg_1023;
wire    ap_block_pp0_stage3_11001_grp0;
reg    ap_block_pp0_stage3_subdone_grp0_done_reg;
wire    ap_block_pp0_stage3_subdone_grp0;
wire   [0:0] icmp_ln121_1_fu_692_p2;
reg   [0:0] icmp_ln121_1_reg_1028;
wire   [31:0] v0_fu_697_p1;
reg   [31:0] v0_reg_1033;
reg   [0:0] icmp_ln121_2_reg_1039;
wire   [0:0] icmp_ln121_3_fu_702_p2;
reg   [0:0] icmp_ln121_3_reg_1044;
wire   [22:0] trunc_ln122_fu_707_p1;
reg   [22:0] trunc_ln122_reg_1049;
reg   [31:0] gmem_out_addr_3_read_reg_1054;
wire   [31:0] max1_fu_731_p3;
reg   [31:0] max1_reg_1059;
reg   [31:0] max1_reg_1059_pp0_iter4_reg;
wire   [22:0] trunc_ln122_1_fu_737_p1;
reg   [22:0] trunc_ln122_1_reg_1066;
reg   [0:0] icmp_ln122_reg_1071;
wire   [0:0] icmp_ln122_1_fu_741_p2;
reg   [0:0] icmp_ln122_1_reg_1076;
wire   [31:0] v2_fu_746_p1;
reg   [31:0] v2_reg_1081;
wire   [31:0] v3_fu_751_p1;
reg   [31:0] v3_reg_1087;
reg   [0:0] icmp_ln122_2_reg_1093;
wire   [0:0] icmp_ln122_3_fu_755_p2;
reg   [0:0] icmp_ln122_3_reg_1098;
wire   [31:0] max2_fu_780_p3;
reg   [31:0] max2_reg_1103;
wire   [31:0] max_final_fu_868_p3;
reg   [31:0] max_final_reg_1110;
wire  signed [63:0] sext_ln116_fu_513_p1;
wire    ap_block_pp0_stage1_grp0;
wire  signed [63:0] sext_ln125_fu_585_p1;
wire  signed [63:0] sext_ln117_fu_621_p1;
wire    ap_block_pp0_stage2_grp0;
wire  signed [63:0] sext_ln118_fu_645_p1;
wire  signed [63:0] sext_ln119_fu_670_p1;
reg    ap_block_state3_io_grp1;
reg    ap_block_pp0_stage2_11001_grp1;
reg    ap_block_pp0_stage3_11001_grp2;
reg    ap_block_pp0_stage0_11001_grp3;
reg    ap_block_pp0_stage1_11001_grp4;
reg    ap_block_pp0_stage2_11001_grp9;
reg    ap_block_pp0_stage3_11001_grp10;
wire    ap_block_pp0_stage3_01001_grp10;
reg    ap_block_pp0_stage0_11001_grp11;
reg   [3:0] j_fu_120;
wire   [3:0] add_ln114_fu_392_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
wire    ap_block_pp0_stage0;
reg   [3:0] i_fu_124;
wire   [3:0] select_ln113_fu_326_p3;
reg   [3:0] ap_sig_allocacmp_i_load;
reg   [5:0] indvar_flatten_fu_128;
wire   [5:0] select_ln113_1_fu_404_p3;
reg   [5:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [4:0] c_fu_132;
wire   [4:0] select_ln112_2_fu_304_p3;
reg   [4:0] ap_sig_allocacmp_c_load;
reg   [8:0] indvar_flatten16_fu_136;
wire   [8:0] add_ln112_1_fu_246_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten16_load;
reg   [31:0] grp_fu_184_p0;
reg   [31:0] grp_fu_184_p1;
wire    ap_block_pp0_stage0_grp0;
wire    ap_block_pp0_stage3_grp0;
wire   [0:0] icmp_ln113_fu_270_p2;
wire   [0:0] icmp_ln114_fu_292_p2;
wire   [4:0] add_ln112_fu_264_p2;
wire   [3:0] select_ln112_fu_276_p3;
wire   [0:0] or_ln112_fu_298_p2;
wire   [3:0] select_ln112_1_fu_284_p3;
wire   [3:0] add_ln113_fu_312_p2;
wire   [12:0] tmp_3_fu_338_p3;
wire   [10:0] tmp_10_fu_350_p3;
wire   [13:0] p_shl50_fu_346_p1;
wire   [13:0] p_shl51_fu_358_p1;
wire   [5:0] add_ln113_1_fu_398_p2;
wire   [5:0] tmp_2_fu_437_p3;
wire   [8:0] tmp_12_fu_458_p3;
wire   [10:0] p_shl_fu_451_p3;
wire   [10:0] zext_ln114_fu_465_p1;
wire   [9:0] shl_ln_fu_475_p3;
wire   [63:0] p_cast12_fu_448_p1;
wire   [63:0] add_ln116_2_fu_486_p2;
wire   [63:0] zext_ln113_fu_444_p1;
wire   [63:0] add_ln116_1_fu_497_p2;
wire   [61:0] trunc_ln_fu_503_p4;
wire   [12:0] add_ln118_3_fu_528_p2;
wire   [63:0] zext_ln118_fu_533_p1;
wire   [63:0] add_ln118_2_fu_523_p2;
wire   [8:0] shl_ln1_fu_543_p3;
wire   [10:0] add_ln114_1_fu_469_p2;
wire   [10:0] zext_ln125_fu_550_p1;
wire   [10:0] add_ln125_2_fu_559_p2;
wire   [63:0] zext_ln125_1_fu_565_p1;
wire   [63:0] add_ln125_fu_554_p2;
wire   [63:0] add_ln125_1_fu_569_p2;
wire   [61:0] trunc_ln8_fu_575_p4;
wire   [9:0] or_ln_fu_595_p3;
wire   [63:0] zext_ln117_fu_602_p1;
wire   [63:0] add_ln117_fu_606_p2;
wire   [61:0] trunc_ln2_fu_611_p4;
wire   [63:0] add_ln118_1_fu_631_p2;
wire   [61:0] trunc_ln3_fu_635_p4;
wire   [63:0] add_ln119_fu_655_p2;
wire   [61:0] trunc_ln4_fu_660_p4;
wire   [0:0] or_ln121_fu_711_p2;
wire   [0:0] or_ln121_1_fu_715_p2;
wire   [0:0] and_ln121_fu_719_p2;
wire   [0:0] and_ln121_1_fu_725_p2;
wire   [0:0] or_ln122_fu_760_p2;
wire   [0:0] or_ln122_1_fu_764_p2;
wire   [0:0] and_ln122_fu_768_p2;
wire   [0:0] and_ln122_1_fu_774_p2;
wire   [31:0] bitcast_ln123_fu_786_p1;
wire   [31:0] bitcast_ln123_1_fu_803_p1;
wire   [7:0] tmp_9_fu_789_p4;
wire   [22:0] trunc_ln123_fu_799_p1;
wire   [0:0] icmp_ln123_1_fu_826_p2;
wire   [0:0] icmp_ln123_fu_820_p2;
wire   [7:0] tmp_s_fu_806_p4;
wire   [22:0] trunc_ln123_1_fu_816_p1;
wire   [0:0] icmp_ln123_3_fu_844_p2;
wire   [0:0] icmp_ln123_2_fu_838_p2;
wire   [0:0] or_ln123_fu_832_p2;
wire   [0:0] or_ln123_1_fu_850_p2;
wire   [0:0] and_ln123_fu_856_p2;
wire   [0:0] and_ln123_1_fu_862_p2;
reg    grp_fu_184_ce;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
wire    ap_block_pp0_stage0_00001_grp0;
wire    ap_block_pp0_stage2_00001_grp0;
wire    ap_block_pp0_stage1_00001_grp0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter5_stage0;
reg    ap_idle_pp0_0to4;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to6;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp2_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp6_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp10_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp1_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp5_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp3_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp7_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp4_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp8_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp9_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp11_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp0_done_reg = 1'b0;
#0 j_fu_120 = 4'd0;
#0 i_fu_124 = 4'd0;
#0 indvar_flatten_fu_128 = 6'd0;
#0 c_fu_132 = 5'd0;
#0 indvar_flatten16_fu_136 = 9'd0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp11_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp11_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp11)) begin
                ap_block_pp0_stage0_subdone_grp11_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp3_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp3_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp3)) begin
                ap_block_pp0_stage0_subdone_grp3_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp7_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp7_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp7)) begin
                ap_block_pp0_stage0_subdone_grp7_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp0)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp4_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp4_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp4)) begin
                ap_block_pp0_stage1_subdone_grp4_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp8_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp8_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp8)) begin
                ap_block_pp0_stage1_subdone_grp8_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp0)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp1_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp1)) begin
                ap_block_pp0_stage2_subdone_grp1_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp5)) begin
                ap_block_pp0_stage2_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp9_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp9_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp9)) begin
                ap_block_pp0_stage2_subdone_grp9_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp0)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp10_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp10_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp10)) begin
                ap_block_pp0_stage3_subdone_grp10_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp2_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp2)) begin
                ap_block_pp0_stage3_subdone_grp2_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp6_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp6_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp6)) begin
                ap_block_pp0_stage3_subdone_grp6_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln112_fu_240_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c_fu_132 <= select_ln112_2_fu_304_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c_fu_132 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln112_fu_240_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_124 <= select_ln113_fu_326_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_124 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln112_fu_240_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten16_fu_136 <= add_ln112_1_fu_246_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten16_fu_136 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln112_fu_240_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_128 <= select_ln113_1_fu_404_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_128 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln112_fu_240_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_120 <= add_ln114_fu_392_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_120 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))) begin
        add_ln116_reg_965 <= add_ln116_fu_491_p2;
        add_ln118_reg_976 <= add_ln118_fu_537_p2;
        gmem_out_addr_4_reg_982 <= sext_ln125_fu_585_p1;
        gmem_out_addr_4_reg_982_pp0_iter1_reg <= gmem_out_addr_4_reg_982;
        gmem_out_addr_4_reg_982_pp0_iter2_reg <= gmem_out_addr_4_reg_982_pp0_iter1_reg;
        gmem_out_addr_4_reg_982_pp0_iter3_reg <= gmem_out_addr_4_reg_982_pp0_iter2_reg;
        gmem_out_addr_4_reg_982_pp0_iter4_reg <= gmem_out_addr_4_reg_982_pp0_iter3_reg;
        gmem_out_addr_reg_970 <= sext_ln116_fu_513_p1;
        icmp_ln122_1_reg_1076 <= icmp_ln122_1_fu_741_p2;
        max1_reg_1059 <= max1_fu_731_p3;
        max1_reg_1059_pp0_iter4_reg <= max1_reg_1059;
        zext_ln116_reg_960[9 : 6] <= zext_ln116_fu_482_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_43_reg_939[13 : 7] <= empty_43_fu_362_p2[13 : 7];
        empty_44_reg_944[12 : 7] <= empty_44_fu_368_p1[12 : 7];
        empty_reg_934 <= empty_fu_334_p1;
        icmp_ln112_reg_924 <= icmp_ln112_fu_240_p2;
        icmp_ln112_reg_924_pp0_iter1_reg <= icmp_ln112_reg_924;
        icmp_ln112_reg_924_pp0_iter2_reg <= icmp_ln112_reg_924_pp0_iter1_reg;
        icmp_ln112_reg_924_pp0_iter3_reg <= icmp_ln112_reg_924_pp0_iter2_reg;
        icmp_ln112_reg_924_pp0_iter4_reg <= icmp_ln112_reg_924_pp0_iter3_reg;
        j_mid2_reg_928 <= j_mid2_fu_318_p3;
        tmp_11_reg_949 <= {{select_ln113_fu_326_p3[3:1]}};
        tmp_13_reg_955 <= {{j_mid2_fu_318_p3[3:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        gmem_out_addr_1_reg_989 <= sext_ln117_fu_621_p1;
        gmem_out_addr_2_reg_995 <= sext_ln118_fu_645_p1;
        gmem_out_addr_3_reg_1001 <= sext_ln119_fu_670_p1;
        icmp_ln122_3_reg_1098 <= icmp_ln122_3_fu_755_p2;
        max_final_reg_1110 <= max_final_fu_868_p3;
        v2_reg_1081 <= v2_fu_746_p1;
        v3_reg_1087 <= v3_fu_751_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp8) & (1'b0 == ap_block_pp0_stage1_subdone_grp8_done_reg))) begin
        gmem_out_addr_3_read_reg_1054 <= m_axi_gmem_out_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))) begin
        icmp_ln121_1_reg_1028 <= icmp_ln121_1_fu_692_p2;
        max2_reg_1103 <= max2_fu_780_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        icmp_ln121_2_reg_1039 <= grp_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        icmp_ln121_3_reg_1044 <= icmp_ln121_3_fu_702_p2;
        v0_reg_1033 <= v0_fu_697_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))) begin
        icmp_ln121_reg_1023 <= grp_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        icmp_ln122_2_reg_1093 <= grp_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))) begin
        icmp_ln122_reg_1071 <= grp_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg)))) begin
        reg_198 <= m_axi_gmem_out_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp8) & (1'b0 == ap_block_pp0_stage1_subdone_grp8_done_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp6) & (1'b0 == ap_block_pp0_stage3_subdone_grp6_done_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg)))) begin
        reg_202 <= {{m_axi_gmem_out_0_RDATA[30:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp6) & (1'b0 == ap_block_pp0_stage3_subdone_grp6_done_reg))) begin
        trunc_ln121_1_reg_1018 <= trunc_ln121_1_fu_688_p1;
        v1_reg_1012 <= v1_fu_684_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg))) begin
        trunc_ln121_reg_1007 <= trunc_ln121_fu_680_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp8) & (1'b0 == ap_block_pp0_stage1_subdone_grp8_done_reg))) begin
        trunc_ln122_1_reg_1066 <= trunc_ln122_1_fu_737_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg))) begin
        trunc_ln122_reg_1049 <= trunc_ln122_fu_707_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (icmp_ln112_reg_924 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln112_reg_924_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to6 = 1'b1;
    end else begin
        ap_idle_pp0_1to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_c_load = 5'd0;
    end else begin
        ap_sig_allocacmp_c_load = c_fu_132;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_124;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten16_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten16_load = indvar_flatten16_fu_136;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 6'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_128;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_120;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_grp2) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg) & (icmp_ln112_reg_924 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg) & (1'b0 == ap_block_pp0_stage1_grp4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage0_grp3)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage2_grp1) & (icmp_ln112_reg_924 == 1'd0)))) begin
        gmem_out_blk_n_AR = m_axi_gmem_out_0_ARREADY;
    end else begin
        gmem_out_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp9_done_reg) & (1'b0 == ap_block_pp0_stage2_grp9))) begin
        gmem_out_blk_n_AW = m_axi_gmem_out_0_AWREADY;
    end else begin
        gmem_out_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg) & (1'b0 == ap_block_pp0_stage0_grp11))) begin
        gmem_out_blk_n_B = m_axi_gmem_out_0_BVALID;
    end else begin
        gmem_out_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp8_done_reg) & (1'b0 == ap_block_pp0_stage1_grp8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage0_grp7)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_grp6) & (1'b0 == ap_block_pp0_stage3_subdone_grp6_done_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage2_grp5)))) begin
        gmem_out_blk_n_R = m_axi_gmem_out_0_RVALID;
    end else begin
        gmem_out_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_grp10) & (1'b0 == ap_block_pp0_stage3_subdone_grp10_done_reg))) begin
        gmem_out_blk_n_W = m_axi_gmem_out_0_WREADY;
    end else begin
        gmem_out_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0)))) begin
        grp_fu_184_ce = 1'b1;
    end else begin
        grp_fu_184_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_grp0))) begin
        grp_fu_184_p0 = max1_reg_1059;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp0))) begin
        grp_fu_184_p0 = v2_fu_746_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_grp0))) begin
        grp_fu_184_p0 = v0_fu_697_p1;
    end else begin
        grp_fu_184_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_grp0))) begin
        grp_fu_184_p1 = max2_reg_1103;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_grp0))) begin
        grp_fu_184_p1 = v3_fu_751_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_grp0))) begin
        grp_fu_184_p1 = v1_reg_1012;
    end else begin
        grp_fu_184_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp4) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg))) begin
        m_axi_gmem_out_0_ARADDR = gmem_out_addr_3_reg_1001;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp3) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg))) begin
        m_axi_gmem_out_0_ARADDR = gmem_out_addr_2_reg_995;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001_grp2) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg) & (icmp_ln112_reg_924 == 1'd0))) begin
        m_axi_gmem_out_0_ARADDR = gmem_out_addr_1_reg_989;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001_grp1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg) & (icmp_ln112_reg_924 == 1'd0))) begin
        m_axi_gmem_out_0_ARADDR = gmem_out_addr_reg_970;
    end else begin
        m_axi_gmem_out_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001_grp2) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg) & (icmp_ln112_reg_924 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp4) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp3) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001_grp1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg) & (icmp_ln112_reg_924 == 1'd0)))) begin
        m_axi_gmem_out_0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_out_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp9) & (1'b0 == ap_block_pp0_stage2_subdone_grp9_done_reg))) begin
        m_axi_gmem_out_0_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_out_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp11) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg))) begin
        m_axi_gmem_out_0_BREADY = 1'b1;
    end else begin
        m_axi_gmem_out_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_grp8) & (1'b0 == ap_block_pp0_stage1_subdone_grp8_done_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp6) & (1'b0 == ap_block_pp0_stage3_subdone_grp6_done_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001_grp5) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg)))) begin
        m_axi_gmem_out_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem_out_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001_grp10) & (1'b0 == ap_block_pp0_stage3_subdone_grp10_done_reg))) begin
        m_axi_gmem_out_0_WVALID = 1'b1;
    end else begin
        m_axi_gmem_out_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter5_stage0) & (ap_idle_pp0_0to4 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to6 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln112_1_fu_246_p2 = (ap_sig_allocacmp_indvar_flatten16_load + 9'd1);

assign add_ln112_fu_264_p2 = (ap_sig_allocacmp_c_load + 5'd1);

assign add_ln113_1_fu_398_p2 = (ap_sig_allocacmp_indvar_flatten_load + 6'd1);

assign add_ln113_fu_312_p2 = (select_ln112_fu_276_p3 + 4'd2);

assign add_ln114_1_fu_469_p2 = (p_shl_fu_451_p3 + zext_ln114_fu_465_p1);

assign add_ln114_fu_392_p2 = (j_mid2_fu_318_p3 + 4'd2);

assign add_ln116_1_fu_497_p2 = (zext_ln116_fu_482_p1 + add_ln116_fu_491_p2);

assign add_ln116_2_fu_486_p2 = (p_cast12_fu_448_p1 + input_r);

assign add_ln116_fu_491_p2 = (add_ln116_2_fu_486_p2 + zext_ln113_fu_444_p1);

assign add_ln117_fu_606_p2 = (zext_ln117_fu_602_p1 + add_ln116_reg_965);

assign add_ln118_1_fu_631_p2 = (zext_ln116_reg_960 + add_ln118_reg_976);

assign add_ln118_2_fu_523_p2 = (zext_ln113_fu_444_p1 + input_r);

assign add_ln118_3_fu_528_p2 = (empty_44_reg_944 + 13'd640);

assign add_ln118_fu_537_p2 = (zext_ln118_fu_533_p1 + add_ln118_2_fu_523_p2);

assign add_ln119_fu_655_p2 = (zext_ln117_fu_602_p1 + add_ln118_reg_976);

assign add_ln125_1_fu_569_p2 = (zext_ln125_1_fu_565_p1 + add_ln125_fu_554_p2);

assign add_ln125_2_fu_559_p2 = (add_ln114_1_fu_469_p2 + zext_ln125_fu_550_p1);

assign add_ln125_fu_554_p2 = (zext_ln113_fu_444_p1 + output_r);

assign and_ln121_1_fu_725_p2 = (grp_fu_634_p_dout0 & and_ln121_fu_719_p2);

assign and_ln121_fu_719_p2 = (or_ln121_fu_711_p2 & or_ln121_1_fu_715_p2);

assign and_ln122_1_fu_774_p2 = (grp_fu_634_p_dout0 & and_ln122_fu_768_p2);

assign and_ln122_fu_768_p2 = (or_ln122_fu_760_p2 & or_ln122_1_fu_764_p2);

assign and_ln123_1_fu_862_p2 = (grp_fu_634_p_dout0 & and_ln123_fu_856_p2);

assign and_ln123_fu_856_p2 = (or_ln123_fu_832_p2 & or_ln123_1_fu_850_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_gmem_out_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg)));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp11 = ((m_axi_gmem_out_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp3 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp7 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_gmem_out_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg)));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp11 = ((m_axi_gmem_out_0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp11_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp3 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp7 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg));
end

assign ap_block_pp0_stage1_00001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp8_done_reg)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg)));
end

assign ap_block_pp0_stage1_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001_grp4 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp8 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp8_done_reg));
end

assign ap_block_pp0_stage1_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp8_done_reg)) | ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg)));
end

assign ap_block_pp0_stage1_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp4 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp8 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp8_done_reg));
end

assign ap_block_pp0_stage2_00001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((m_axi_gmem_out_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp9_done_reg)) | ((1'b1 == ap_block_state3_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg)));
end

assign ap_block_pp0_stage2_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001_grp1 = ((1'b1 == ap_block_state3_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp5 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp9 = ((m_axi_gmem_out_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp9_done_reg));
end

assign ap_block_pp0_stage2_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((m_axi_gmem_out_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp9_done_reg)) | ((1'b1 == ap_block_state3_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg)));
end

assign ap_block_pp0_stage2_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp1 = ((1'b1 == ap_block_state3_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp5 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp5_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp9 = ((m_axi_gmem_out_0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp9_done_reg));
end

assign ap_block_pp0_stage3_01001_grp10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((m_axi_gmem_out_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp10_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp6_done_reg)) | ((1'b1 == ap_block_state4_io_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg)));
end

assign ap_block_pp0_stage3_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001_grp10 = ((m_axi_gmem_out_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp10_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_grp2 = ((1'b1 == ap_block_state4_io_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_grp6 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp6_done_reg));
end

assign ap_block_pp0_stage3_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((m_axi_gmem_out_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp10_done_reg)) | ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp6_done_reg)) | ((1'b1 == ap_block_state4_io_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg)));
end

assign ap_block_pp0_stage3_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp10 = ((m_axi_gmem_out_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp10_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp2 = ((1'b1 == ap_block_state4_io_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp6 = ((m_axi_gmem_out_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp6_done_reg));
end

always @ (*) begin
    ap_block_state3_io_grp1 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (icmp_ln112_reg_924 == 1'd0));
end

always @ (*) begin
    ap_block_state4_io_grp2 = ((m_axi_gmem_out_0_ARREADY == 1'b0) & (icmp_ln112_reg_924 == 1'd0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ap_ready = ap_ready_sig;

assign bitcast_ln123_1_fu_803_p1 = max2_reg_1103;

assign bitcast_ln123_fu_786_p1 = max1_reg_1059_pp0_iter4_reg;

assign empty_43_fu_362_p2 = (p_shl50_fu_346_p1 + p_shl51_fu_358_p1);

assign empty_44_fu_368_p1 = empty_43_fu_362_p2[12:0];

assign empty_fu_334_p1 = select_ln112_2_fu_304_p3[3:0];

assign grp_fu_206_p2 = ((reg_202 != 8'd255) ? 1'b1 : 1'b0);

assign grp_fu_634_p_ce = grp_fu_184_ce;

assign grp_fu_634_p_din0 = grp_fu_184_p0;

assign grp_fu_634_p_din1 = grp_fu_184_p1;

assign grp_fu_634_p_opcode = 5'd2;

assign icmp_ln112_fu_240_p2 = ((ap_sig_allocacmp_indvar_flatten16_load == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_270_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 6'd25) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_292_p2 = ((ap_sig_allocacmp_j_load < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln121_1_fu_692_p2 = ((trunc_ln121_reg_1007 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln121_3_fu_702_p2 = ((trunc_ln121_1_reg_1018 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_1_fu_741_p2 = ((trunc_ln122_reg_1049 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_3_fu_755_p2 = ((trunc_ln122_1_reg_1066 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln123_1_fu_826_p2 = ((trunc_ln123_fu_799_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln123_2_fu_838_p2 = ((tmp_s_fu_806_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln123_3_fu_844_p2 = ((trunc_ln123_1_fu_816_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_820_p2 = ((tmp_9_fu_789_p4 != 8'd255) ? 1'b1 : 1'b0);

assign j_mid2_fu_318_p3 = ((or_ln112_fu_298_p2[0:0] == 1'b1) ? select_ln112_1_fu_284_p3 : 4'd0);

assign m_axi_gmem_out_0_ARBURST = 2'd0;

assign m_axi_gmem_out_0_ARCACHE = 4'd0;

assign m_axi_gmem_out_0_ARID = 1'd0;

assign m_axi_gmem_out_0_ARLEN = 64'd1;

assign m_axi_gmem_out_0_ARLOCK = 2'd0;

assign m_axi_gmem_out_0_ARPROT = 3'd0;

assign m_axi_gmem_out_0_ARQOS = 4'd0;

assign m_axi_gmem_out_0_ARREGION = 4'd0;

assign m_axi_gmem_out_0_ARSIZE = 3'd0;

assign m_axi_gmem_out_0_ARUSER = 1'd0;

assign m_axi_gmem_out_0_AWADDR = gmem_out_addr_4_reg_982_pp0_iter4_reg;

assign m_axi_gmem_out_0_AWBURST = 2'd0;

assign m_axi_gmem_out_0_AWCACHE = 4'd0;

assign m_axi_gmem_out_0_AWID = 1'd0;

assign m_axi_gmem_out_0_AWLEN = 64'd1;

assign m_axi_gmem_out_0_AWLOCK = 2'd0;

assign m_axi_gmem_out_0_AWPROT = 3'd0;

assign m_axi_gmem_out_0_AWQOS = 4'd0;

assign m_axi_gmem_out_0_AWREGION = 4'd0;

assign m_axi_gmem_out_0_AWSIZE = 3'd0;

assign m_axi_gmem_out_0_AWUSER = 1'd0;

assign m_axi_gmem_out_0_WDATA = max_final_reg_1110;

assign m_axi_gmem_out_0_WID = 1'd0;

assign m_axi_gmem_out_0_WLAST = 1'b0;

assign m_axi_gmem_out_0_WSTRB = 4'd15;

assign m_axi_gmem_out_0_WUSER = 1'd0;

assign max1_fu_731_p3 = ((and_ln121_1_fu_725_p2[0:0] == 1'b1) ? v0_reg_1033 : v1_reg_1012);

assign max2_fu_780_p3 = ((and_ln122_1_fu_774_p2[0:0] == 1'b1) ? v2_reg_1081 : v3_reg_1087);

assign max_final_fu_868_p3 = ((and_ln123_1_fu_862_p2[0:0] == 1'b1) ? max1_reg_1059_pp0_iter4_reg : max2_reg_1103);

assign or_ln112_fu_298_p2 = (icmp_ln114_fu_292_p2 | icmp_ln113_fu_270_p2);

assign or_ln121_1_fu_715_p2 = (icmp_ln121_3_reg_1044 | icmp_ln121_2_reg_1039);

assign or_ln121_fu_711_p2 = (icmp_ln121_reg_1023 | icmp_ln121_1_reg_1028);

assign or_ln122_1_fu_764_p2 = (icmp_ln122_3_reg_1098 | icmp_ln122_2_reg_1093);

assign or_ln122_fu_760_p2 = (icmp_ln122_reg_1071 | icmp_ln122_1_reg_1076);

assign or_ln123_1_fu_850_p2 = (icmp_ln123_3_fu_844_p2 | icmp_ln123_2_fu_838_p2);

assign or_ln123_fu_832_p2 = (icmp_ln123_fu_820_p2 | icmp_ln123_1_fu_826_p2);

assign or_ln_fu_595_p3 = {{tmp_13_reg_955}, {7'd64}};

assign p_cast12_fu_448_p1 = empty_43_reg_939;

assign p_shl50_fu_346_p1 = tmp_3_fu_338_p3;

assign p_shl51_fu_358_p1 = tmp_10_fu_350_p3;

assign p_shl_fu_451_p3 = {{tmp_11_reg_949}, {8'd0}};

assign select_ln112_1_fu_284_p3 = ((icmp_ln113_fu_270_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign select_ln112_2_fu_304_p3 = ((icmp_ln113_fu_270_p2[0:0] == 1'b1) ? add_ln112_fu_264_p2 : ap_sig_allocacmp_c_load);

assign select_ln112_fu_276_p3 = ((icmp_ln113_fu_270_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_i_load);

assign select_ln113_1_fu_404_p3 = ((icmp_ln113_fu_270_p2[0:0] == 1'b1) ? 6'd1 : add_ln113_1_fu_398_p2);

assign select_ln113_fu_326_p3 = ((or_ln112_fu_298_p2[0:0] == 1'b1) ? select_ln112_fu_276_p3 : add_ln113_fu_312_p2);

assign sext_ln116_fu_513_p1 = $signed(trunc_ln_fu_503_p4);

assign sext_ln117_fu_621_p1 = $signed(trunc_ln2_fu_611_p4);

assign sext_ln118_fu_645_p1 = $signed(trunc_ln3_fu_635_p4);

assign sext_ln119_fu_670_p1 = $signed(trunc_ln4_fu_660_p4);

assign sext_ln125_fu_585_p1 = $signed(trunc_ln8_fu_575_p4);

assign shl_ln1_fu_543_p3 = {{j_mid2_reg_928}, {5'd0}};

assign shl_ln_fu_475_p3 = {{j_mid2_reg_928}, {6'd0}};

assign tmp_10_fu_350_p3 = {{select_ln113_fu_326_p3}, {7'd0}};

assign tmp_12_fu_458_p3 = {{tmp_11_reg_949}, {6'd0}};

assign tmp_2_fu_437_p3 = {{empty_reg_934}, {2'd0}};

assign tmp_3_fu_338_p3 = {{select_ln113_fu_326_p3}, {9'd0}};

assign tmp_9_fu_789_p4 = {{bitcast_ln123_fu_786_p1[30:23]}};

assign tmp_s_fu_806_p4 = {{bitcast_ln123_1_fu_803_p1[30:23]}};

assign trunc_ln121_1_fu_688_p1 = m_axi_gmem_out_0_RDATA[22:0];

assign trunc_ln121_fu_680_p1 = m_axi_gmem_out_0_RDATA[22:0];

assign trunc_ln122_1_fu_737_p1 = m_axi_gmem_out_0_RDATA[22:0];

assign trunc_ln122_fu_707_p1 = m_axi_gmem_out_0_RDATA[22:0];

assign trunc_ln123_1_fu_816_p1 = bitcast_ln123_1_fu_803_p1[22:0];

assign trunc_ln123_fu_799_p1 = bitcast_ln123_fu_786_p1[22:0];

assign trunc_ln2_fu_611_p4 = {{add_ln117_fu_606_p2[63:2]}};

assign trunc_ln3_fu_635_p4 = {{add_ln118_1_fu_631_p2[63:2]}};

assign trunc_ln4_fu_660_p4 = {{add_ln119_fu_655_p2[63:2]}};

assign trunc_ln8_fu_575_p4 = {{add_ln125_1_fu_569_p2[63:2]}};

assign trunc_ln_fu_503_p4 = {{add_ln116_1_fu_497_p2[63:2]}};

assign v0_fu_697_p1 = reg_198;

assign v1_fu_684_p1 = m_axi_gmem_out_0_RDATA;

assign v2_fu_746_p1 = reg_198;

assign v3_fu_751_p1 = gmem_out_addr_3_read_reg_1054;

assign zext_ln113_fu_444_p1 = tmp_2_fu_437_p3;

assign zext_ln114_fu_465_p1 = tmp_12_fu_458_p3;

assign zext_ln116_fu_482_p1 = shl_ln_fu_475_p3;

assign zext_ln117_fu_602_p1 = or_ln_fu_595_p3;

assign zext_ln118_fu_533_p1 = add_ln118_3_fu_528_p2;

assign zext_ln125_1_fu_565_p1 = add_ln125_2_fu_559_p2;

assign zext_ln125_fu_550_p1 = shl_ln1_fu_543_p3;

always @ (posedge ap_clk) begin
    empty_43_reg_939[6:0] <= 7'b0000000;
    empty_44_reg_944[6:0] <= 7'b0000000;
    zext_ln116_reg_960[5:0] <= 6'b000000;
    zext_ln116_reg_960[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //top_m2
