// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_c1_Pipeline_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        padded_15_address0,
        padded_15_ce0,
        padded_15_we0,
        padded_15_d0,
        padded_14_address0,
        padded_14_ce0,
        padded_14_we0,
        padded_14_d0,
        padded_13_address0,
        padded_13_ce0,
        padded_13_we0,
        padded_13_d0,
        padded_12_address0,
        padded_12_ce0,
        padded_12_we0,
        padded_12_d0,
        padded_11_address0,
        padded_11_ce0,
        padded_11_we0,
        padded_11_d0,
        padded_10_address0,
        padded_10_ce0,
        padded_10_we0,
        padded_10_d0,
        padded_9_address0,
        padded_9_ce0,
        padded_9_we0,
        padded_9_d0,
        padded_8_address0,
        padded_8_ce0,
        padded_8_we0,
        padded_8_d0,
        padded_7_address0,
        padded_7_ce0,
        padded_7_we0,
        padded_7_d0,
        padded_6_address0,
        padded_6_ce0,
        padded_6_we0,
        padded_6_d0,
        padded_5_address0,
        padded_5_ce0,
        padded_5_we0,
        padded_5_d0,
        padded_4_address0,
        padded_4_ce0,
        padded_4_we0,
        padded_4_d0,
        padded_3_address0,
        padded_3_ce0,
        padded_3_we0,
        padded_3_d0,
        padded_2_address0,
        padded_2_ce0,
        padded_2_we0,
        padded_2_d0,
        padded_1_address0,
        padded_1_ce0,
        padded_1_we0,
        padded_1_d0,
        padded_address0,
        padded_ce0,
        padded_we0,
        padded_d0
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] padded_15_address0;
output   padded_15_ce0;
output   padded_15_we0;
output  [31:0] padded_15_d0;
output  [5:0] padded_14_address0;
output   padded_14_ce0;
output   padded_14_we0;
output  [31:0] padded_14_d0;
output  [5:0] padded_13_address0;
output   padded_13_ce0;
output   padded_13_we0;
output  [31:0] padded_13_d0;
output  [5:0] padded_12_address0;
output   padded_12_ce0;
output   padded_12_we0;
output  [31:0] padded_12_d0;
output  [5:0] padded_11_address0;
output   padded_11_ce0;
output   padded_11_we0;
output  [31:0] padded_11_d0;
output  [5:0] padded_10_address0;
output   padded_10_ce0;
output   padded_10_we0;
output  [31:0] padded_10_d0;
output  [5:0] padded_9_address0;
output   padded_9_ce0;
output   padded_9_we0;
output  [31:0] padded_9_d0;
output  [5:0] padded_8_address0;
output   padded_8_ce0;
output   padded_8_we0;
output  [31:0] padded_8_d0;
output  [5:0] padded_7_address0;
output   padded_7_ce0;
output   padded_7_we0;
output  [31:0] padded_7_d0;
output  [5:0] padded_6_address0;
output   padded_6_ce0;
output   padded_6_we0;
output  [31:0] padded_6_d0;
output  [5:0] padded_5_address0;
output   padded_5_ce0;
output   padded_5_we0;
output  [31:0] padded_5_d0;
output  [5:0] padded_4_address0;
output   padded_4_ce0;
output   padded_4_we0;
output  [31:0] padded_4_d0;
output  [5:0] padded_3_address0;
output   padded_3_ce0;
output   padded_3_we0;
output  [31:0] padded_3_d0;
output  [5:0] padded_2_address0;
output   padded_2_ce0;
output   padded_2_we0;
output  [31:0] padded_2_d0;
output  [5:0] padded_1_address0;
output   padded_1_ce0;
output   padded_1_we0;
output  [31:0] padded_1_d0;
output  [5:0] padded_address0;
output   padded_ce0;
output   padded_we0;
output  [31:0] padded_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] exitcond641_fu_333_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] tmp_102_cast_fu_377_p1;
reg   [10:0] empty_fu_88;
wire   [10:0] empty_64_fu_339_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_p_load;
reg    padded_10_we0_local;
wire   [1:0] p_cast7_fu_359_p4;
wire   [1:0] p_cast6_fu_397_p4;
reg    padded_10_ce0_local;
reg    padded_9_we0_local;
reg    padded_9_ce0_local;
reg    padded_8_we0_local;
reg    padded_8_ce0_local;
reg    padded_11_we0_local;
reg    padded_11_ce0_local;
reg    padded_6_we0_local;
reg    padded_6_ce0_local;
reg    padded_5_we0_local;
reg    padded_5_ce0_local;
reg    padded_4_we0_local;
reg    padded_4_ce0_local;
reg    padded_7_we0_local;
reg    padded_7_ce0_local;
reg    padded_2_we0_local;
reg    padded_2_ce0_local;
reg    padded_1_we0_local;
reg    padded_1_ce0_local;
reg    padded_we0_local;
reg    padded_ce0_local;
reg    padded_3_we0_local;
reg    padded_3_ce0_local;
reg    padded_14_we0_local;
reg    padded_14_ce0_local;
reg    padded_13_we0_local;
reg    padded_13_ce0_local;
reg    padded_12_we0_local;
reg    padded_12_ce0_local;
reg    padded_15_we0_local;
reg    padded_15_ce0_local;
wire   [2:0] tmp_101_fu_349_p4;
wire   [2:0] empty_65_fu_345_p1;
wire   [5:0] tmp_102_fu_369_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 empty_fu_88 = 11'd0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((exitcond641_fu_333_p2 == 1'd0)) begin
            empty_fu_88 <= empty_64_fu_339_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            empty_fu_88 <= 11'd0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_p_load = 11'd0;
    end else begin
        ap_sig_allocacmp_p_load = empty_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_10_ce0_local = 1'b1;
    end else begin
        padded_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd2) & (p_cast7_fu_359_p4 == 2'd2))) begin
        padded_10_we0_local = 1'b1;
    end else begin
        padded_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_11_ce0_local = 1'b1;
    end else begin
        padded_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd3) & (p_cast7_fu_359_p4 == 2'd2))) begin
        padded_11_we0_local = 1'b1;
    end else begin
        padded_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_12_ce0_local = 1'b1;
    end else begin
        padded_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd0) & (p_cast7_fu_359_p4 == 2'd3))) begin
        padded_12_we0_local = 1'b1;
    end else begin
        padded_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_13_ce0_local = 1'b1;
    end else begin
        padded_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd1) & (p_cast7_fu_359_p4 == 2'd3))) begin
        padded_13_we0_local = 1'b1;
    end else begin
        padded_13_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_14_ce0_local = 1'b1;
    end else begin
        padded_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd2) & (p_cast7_fu_359_p4 == 2'd3))) begin
        padded_14_we0_local = 1'b1;
    end else begin
        padded_14_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_15_ce0_local = 1'b1;
    end else begin
        padded_15_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd3) & (p_cast7_fu_359_p4 == 2'd3))) begin
        padded_15_we0_local = 1'b1;
    end else begin
        padded_15_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_1_ce0_local = 1'b1;
    end else begin
        padded_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd1) & (p_cast7_fu_359_p4 == 2'd0))) begin
        padded_1_we0_local = 1'b1;
    end else begin
        padded_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_2_ce0_local = 1'b1;
    end else begin
        padded_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd2) & (p_cast7_fu_359_p4 == 2'd0))) begin
        padded_2_we0_local = 1'b1;
    end else begin
        padded_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_3_ce0_local = 1'b1;
    end else begin
        padded_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd3) & (p_cast7_fu_359_p4 == 2'd0))) begin
        padded_3_we0_local = 1'b1;
    end else begin
        padded_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_4_ce0_local = 1'b1;
    end else begin
        padded_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd0) & (p_cast7_fu_359_p4 == 2'd1))) begin
        padded_4_we0_local = 1'b1;
    end else begin
        padded_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_5_ce0_local = 1'b1;
    end else begin
        padded_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd1) & (p_cast7_fu_359_p4 == 2'd1))) begin
        padded_5_we0_local = 1'b1;
    end else begin
        padded_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_6_ce0_local = 1'b1;
    end else begin
        padded_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd2) & (p_cast7_fu_359_p4 == 2'd1))) begin
        padded_6_we0_local = 1'b1;
    end else begin
        padded_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_7_ce0_local = 1'b1;
    end else begin
        padded_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd3) & (p_cast7_fu_359_p4 == 2'd1))) begin
        padded_7_we0_local = 1'b1;
    end else begin
        padded_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_8_ce0_local = 1'b1;
    end else begin
        padded_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd0) & (p_cast7_fu_359_p4 == 2'd2))) begin
        padded_8_we0_local = 1'b1;
    end else begin
        padded_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_9_ce0_local = 1'b1;
    end else begin
        padded_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd1) & (p_cast7_fu_359_p4 == 2'd2))) begin
        padded_9_we0_local = 1'b1;
    end else begin
        padded_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        padded_ce0_local = 1'b1;
    end else begin
        padded_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond641_fu_333_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (p_cast6_fu_397_p4 == 2'd0) & (p_cast7_fu_359_p4 == 2'd0))) begin
        padded_we0_local = 1'b1;
    end else begin
        padded_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign empty_64_fu_339_p2 = (ap_sig_allocacmp_p_load + 11'd1);

assign empty_65_fu_345_p1 = ap_sig_allocacmp_p_load[2:0];

assign exitcond641_fu_333_p2 = ((ap_sig_allocacmp_p_load == 11'd1024) ? 1'b1 : 1'b0);

assign p_cast6_fu_397_p4 = {{ap_sig_allocacmp_p_load[4:3]}};

assign p_cast7_fu_359_p4 = {{ap_sig_allocacmp_p_load[9:8]}};

assign padded_10_address0 = tmp_102_cast_fu_377_p1;

assign padded_10_ce0 = padded_10_ce0_local;

assign padded_10_d0 = 32'd0;

assign padded_10_we0 = padded_10_we0_local;

assign padded_11_address0 = tmp_102_cast_fu_377_p1;

assign padded_11_ce0 = padded_11_ce0_local;

assign padded_11_d0 = 32'd0;

assign padded_11_we0 = padded_11_we0_local;

assign padded_12_address0 = tmp_102_cast_fu_377_p1;

assign padded_12_ce0 = padded_12_ce0_local;

assign padded_12_d0 = 32'd0;

assign padded_12_we0 = padded_12_we0_local;

assign padded_13_address0 = tmp_102_cast_fu_377_p1;

assign padded_13_ce0 = padded_13_ce0_local;

assign padded_13_d0 = 32'd0;

assign padded_13_we0 = padded_13_we0_local;

assign padded_14_address0 = tmp_102_cast_fu_377_p1;

assign padded_14_ce0 = padded_14_ce0_local;

assign padded_14_d0 = 32'd0;

assign padded_14_we0 = padded_14_we0_local;

assign padded_15_address0 = tmp_102_cast_fu_377_p1;

assign padded_15_ce0 = padded_15_ce0_local;

assign padded_15_d0 = 32'd0;

assign padded_15_we0 = padded_15_we0_local;

assign padded_1_address0 = tmp_102_cast_fu_377_p1;

assign padded_1_ce0 = padded_1_ce0_local;

assign padded_1_d0 = 32'd0;

assign padded_1_we0 = padded_1_we0_local;

assign padded_2_address0 = tmp_102_cast_fu_377_p1;

assign padded_2_ce0 = padded_2_ce0_local;

assign padded_2_d0 = 32'd0;

assign padded_2_we0 = padded_2_we0_local;

assign padded_3_address0 = tmp_102_cast_fu_377_p1;

assign padded_3_ce0 = padded_3_ce0_local;

assign padded_3_d0 = 32'd0;

assign padded_3_we0 = padded_3_we0_local;

assign padded_4_address0 = tmp_102_cast_fu_377_p1;

assign padded_4_ce0 = padded_4_ce0_local;

assign padded_4_d0 = 32'd0;

assign padded_4_we0 = padded_4_we0_local;

assign padded_5_address0 = tmp_102_cast_fu_377_p1;

assign padded_5_ce0 = padded_5_ce0_local;

assign padded_5_d0 = 32'd0;

assign padded_5_we0 = padded_5_we0_local;

assign padded_6_address0 = tmp_102_cast_fu_377_p1;

assign padded_6_ce0 = padded_6_ce0_local;

assign padded_6_d0 = 32'd0;

assign padded_6_we0 = padded_6_we0_local;

assign padded_7_address0 = tmp_102_cast_fu_377_p1;

assign padded_7_ce0 = padded_7_ce0_local;

assign padded_7_d0 = 32'd0;

assign padded_7_we0 = padded_7_we0_local;

assign padded_8_address0 = tmp_102_cast_fu_377_p1;

assign padded_8_ce0 = padded_8_ce0_local;

assign padded_8_d0 = 32'd0;

assign padded_8_we0 = padded_8_we0_local;

assign padded_9_address0 = tmp_102_cast_fu_377_p1;

assign padded_9_ce0 = padded_9_ce0_local;

assign padded_9_d0 = 32'd0;

assign padded_9_we0 = padded_9_we0_local;

assign padded_address0 = tmp_102_cast_fu_377_p1;

assign padded_ce0 = padded_ce0_local;

assign padded_d0 = 32'd0;

assign padded_we0 = padded_we0_local;

assign tmp_101_fu_349_p4 = {{ap_sig_allocacmp_p_load[7:5]}};

assign tmp_102_cast_fu_377_p1 = tmp_102_fu_369_p3;

assign tmp_102_fu_369_p3 = {{tmp_101_fu_349_p4}, {empty_65_fu_345_p1}};

endmodule //top_c1_Pipeline_1
