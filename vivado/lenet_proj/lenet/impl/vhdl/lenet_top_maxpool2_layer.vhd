-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lenet_top_maxpool2_layer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r : IN STD_LOGIC_VECTOR (63 downto 0);
    output_r : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of lenet_top_maxpool2_layer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv9_190 : STD_LOGIC_VECTOR (8 downto 0) := "110010000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv64_280 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001010000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv10_40 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal icmp_ln112_reg_1091 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal icmp_ln112_reg_1091_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln112_reg_1091_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal icmp_ln112_reg_1091_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal icmp_ln112_reg_1091_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_W : STD_LOGIC;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal icmp_ln112_reg_1091_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten59_reg_192 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_reg_204 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_reg_216 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_228 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_240 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln116_fu_272_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln116_reg_1084 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln112_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln112_fu_283_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln112_reg_1095 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln113_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_1100 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln112_fu_295_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln112_reg_1112 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln112_2_fu_315_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln112_2_reg_1118 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln116_4_fu_327_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln116_4_reg_1123 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln112_1_fu_426_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln112_1_reg_1130 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal or_ln112_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_reg_1135 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln113_fu_473_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln113_reg_1141 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln113_1_fu_520_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln113_1_reg_1146 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln113_2_fu_564_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln113_2_reg_1152 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln113_3_fu_590_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln113_3_reg_1158 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln113_fu_605_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln113_reg_1163 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state20_io : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal gmem_addr_reg_1168 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_5_reg_1174 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_6_reg_1180 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_7_reg_1186 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_8_reg_1192 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_8_reg_1192_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_8_reg_1192_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_8_reg_1192_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln113_1_fu_789_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln113_1_reg_1198 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln112_7_fu_795_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln112_7_reg_1203 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state21_io : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal select_ln113_4_fu_801_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln113_4_reg_1208 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln113_5_fu_806_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln113_5_reg_1213 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln114_fu_812_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln114_reg_1218 : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_addr_read_reg_1223 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1228 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln121_fu_827_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln121_reg_1233 : STD_LOGIC_VECTOR (22 downto 0);
    signal v1_fu_831_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v1_reg_1238 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1244 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln121_1_fu_845_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln121_1_reg_1249 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln121_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_reg_1254 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_1_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_1_reg_1259 : STD_LOGIC_VECTOR (0 downto 0);
    signal v0_fu_859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v0_reg_1264 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_6_read_reg_1270 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln121_2_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_2_reg_1275 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_1280 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1285 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln122_fu_883_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln122_reg_1290 : STD_LOGIC_VECTOR (22 downto 0);
    signal v3_fu_887_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v3_reg_1295 : STD_LOGIC_VECTOR (31 downto 0);
    signal max1_fu_911_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max1_reg_1301 : STD_LOGIC_VECTOR (31 downto 0);
    signal max1_reg_1301_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1308 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln122_1_fu_927_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln122_1_reg_1313 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln122_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_reg_1318 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_1_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_1_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal v2_fu_941_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_reg_1328 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln122_2_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_2_reg_1334 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_3_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_3_reg_1339 : STD_LOGIC_VECTOR (0 downto 0);
    signal max2_fu_975_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max2_reg_1344 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_final_fu_1063_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_final_reg_1351 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_flatten59_phi_fu_196_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_c_phi_fu_208_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_220_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_i_phi_fu_232_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_j_phi_fu_244_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln116_fu_642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln117_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln118_fu_702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln119_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln125_fu_779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal grp_fu_252_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln116_fu_256_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_260_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln116_fu_268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln116_1_fu_303_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln116_mid1_fu_307_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln116_3_fu_323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln116_2_fu_338_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln116_3_fu_350_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln116_2_fu_358_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln116_3_fu_362_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_1_fu_346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_332_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln3_fu_373_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln118_1_fu_385_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln118_1_fu_393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln118_fu_397_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln118_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln4_fu_408_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln114_fu_416_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln116_1_fu_367_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln118_3_fu_443_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln118_1_fu_402_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln125_fu_420_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln114_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln116_2_mid1_fu_484_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln116_3_mid1_fu_496_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln116_6_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln112_3_fu_432_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln116_5_fu_508_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_4_fu_492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln112_4_fu_437_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln116_6_fu_514_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_mid1_fu_478_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln118_mid1_fu_528_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln118_1_mid1_fu_540_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln118_3_fu_548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln118_4_fu_552_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln118_2_fu_536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln112_5_fu_448_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln118_5_fu_558_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln125_mid1_fu_572_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln114_1_fu_580_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln112_6_fu_455_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln125_3_fu_584_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln112_1_fu_598_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln116_1_fu_615_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln116_5_fu_623_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln116_2_fu_627_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_632_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal or_ln117_fu_652_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln117_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln117_fu_662_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln8_fu_667_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln118_2_fu_687_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln9_fu_692_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln119_fu_712_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_717_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_1_fu_737_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp4_fu_747_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln125_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln113_3_cast_fu_612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln125_1_fu_758_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln125_2_fu_763_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2_fu_769_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal or_ln121_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln121_1_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln121_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln121_1_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln122_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln122_1_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln122_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln122_1_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln123_fu_981_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_1_fu_998_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_984_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln123_fu_994_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln123_1_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln123_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1001_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln123_1_fu_1011_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln123_3_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln123_2_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln123_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln123_1_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln123_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln123_1_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_252_ce : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component lenet_top_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    fcmp_32ns_32ns_1_2_no_dsp_1_U90 : component lenet_top_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_252_p0,
        din1 => grp_fu_252_p1,
        ce => grp_fu_252_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_252_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                c_reg_204 <= select_ln112_7_reg_1203;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_reg_204 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_reg_228 <= select_ln113_4_reg_1208;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_228 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten59_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten59_reg_192 <= add_ln112_1_reg_1130;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten59_reg_192 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten_reg_216 <= select_ln113_5_reg_1213;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_216 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    j_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                j_reg_240 <= add_ln114_reg_1218;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_reg_240 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln112_1_reg_1130 <= add_ln112_1_fu_426_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln112_fu_277_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln112_reg_1095 <= add_ln112_fu_283_p2;
                add_ln116_4_reg_1123 <= add_ln116_4_fu_327_p2;
                icmp_ln113_reg_1100 <= icmp_ln113_fu_289_p2;
                    select_ln112_2_reg_1118(5 downto 2) <= select_ln112_2_fu_315_p3(5 downto 2);
                select_ln112_reg_1112 <= select_ln112_fu_295_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln113_reg_1100 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln113_1_reg_1198 <= add_ln113_1_fu_789_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln113_reg_1141 <= add_ln113_fu_473_p2;
                or_ln112_reg_1135 <= or_ln112_fu_468_p2;
                select_ln113_1_reg_1146 <= select_ln113_1_fu_520_p3;
                select_ln113_2_reg_1152 <= select_ln113_2_fu_564_p3;
                    select_ln113_3_reg_1158(10 downto 5) <= select_ln113_3_fu_590_p3(10 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                add_ln114_reg_1218 <= add_ln114_fu_812_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln116_reg_1084 <= add_ln116_fu_272_p2;
                icmp_ln112_reg_1091 <= icmp_ln112_fu_277_p2;
                icmp_ln112_reg_1091_pp0_iter1_reg <= icmp_ln112_reg_1091;
                icmp_ln112_reg_1091_pp0_iter2_reg <= icmp_ln112_reg_1091_pp0_iter1_reg;
                icmp_ln112_reg_1091_pp0_iter3_reg <= icmp_ln112_reg_1091_pp0_iter2_reg;
                icmp_ln112_reg_1091_pp0_iter4_reg <= icmp_ln112_reg_1091_pp0_iter3_reg;
                icmp_ln112_reg_1091_pp0_iter5_reg <= icmp_ln112_reg_1091_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                gmem_addr_5_reg_1174 <= sext_ln117_fu_677_p1;
                gmem_addr_6_reg_1180 <= sext_ln118_fu_702_p1;
                gmem_addr_7_reg_1186 <= sext_ln119_fu_727_p1;
                gmem_addr_8_reg_1192 <= sext_ln125_fu_779_p1;
                gmem_addr_reg_1168 <= sext_ln116_fu_642_p1;
                select_ln113_reg_1163 <= select_ln113_fu_605_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0))) then
                gmem_addr_6_read_reg_1270 <= m_axi_gmem_RDATA;
                icmp_ln121_2_reg_1275 <= icmp_ln121_2_fu_863_p2;
                icmp_ln121_3_reg_1280 <= icmp_ln121_3_fu_868_p2;
                tmp_4_reg_1285 <= m_axi_gmem_RDATA(30 downto 23);
                trunc_ln122_reg_1290 <= trunc_ln122_fu_883_p1;
                v0_reg_1264 <= v0_fu_859_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                gmem_addr_8_reg_1192_pp0_iter1_reg <= gmem_addr_8_reg_1192;
                gmem_addr_8_reg_1192_pp0_iter2_reg <= gmem_addr_8_reg_1192_pp0_iter1_reg;
                gmem_addr_8_reg_1192_pp0_iter3_reg <= gmem_addr_8_reg_1192_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0))) then
                gmem_addr_read_reg_1223 <= m_axi_gmem_RDATA;
                tmp_reg_1228 <= m_axi_gmem_RDATA(30 downto 23);
                trunc_ln121_reg_1233 <= trunc_ln121_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0))) then
                icmp_ln121_1_reg_1259 <= icmp_ln121_1_fu_854_p2;
                icmp_ln121_reg_1254 <= icmp_ln121_fu_849_p2;
                tmp_s_reg_1244 <= m_axi_gmem_RDATA(30 downto 23);
                trunc_ln121_1_reg_1249 <= trunc_ln121_1_fu_845_p1;
                v1_reg_1238 <= v1_fu_831_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln112_reg_1091_pp0_iter3_reg = ap_const_lv1_0))) then
                icmp_ln122_1_reg_1323 <= icmp_ln122_1_fu_936_p2;
                icmp_ln122_reg_1318 <= icmp_ln122_fu_931_p2;
                max1_reg_1301 <= max1_fu_911_p3;
                tmp_5_reg_1308 <= m_axi_gmem_RDATA(30 downto 23);
                trunc_ln122_1_reg_1313 <= trunc_ln122_1_fu_927_p1;
                v3_reg_1295 <= v3_fu_887_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter3_reg = ap_const_lv1_0))) then
                icmp_ln122_2_reg_1334 <= icmp_ln122_2_fu_945_p2;
                icmp_ln122_3_reg_1339 <= icmp_ln122_3_fu_950_p2;
                v2_reg_1328 <= v2_fu_941_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                max1_reg_1301_pp0_iter4_reg <= max1_reg_1301;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln112_reg_1091_pp0_iter3_reg = ap_const_lv1_0))) then
                max2_reg_1344 <= max2_fu_975_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter4_reg = ap_const_lv1_0))) then
                max_final_reg_1351 <= max_final_fu_1063_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                select_ln112_7_reg_1203 <= select_ln112_7_fu_795_p3;
                select_ln113_4_reg_1208 <= select_ln113_4_fu_801_p3;
                select_ln113_5_reg_1213 <= select_ln113_5_fu_806_p3;
            end if;
        end if;
    end process;
    select_ln112_2_reg_1118(1 downto 0) <= "00";
    select_ln113_3_reg_1158(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln112_reg_1091, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter5, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((icmp_ln112_reg_1091 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((icmp_ln112_reg_1091 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln112_1_fu_426_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(indvar_flatten59_reg_192));
    add_ln112_fu_283_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ap_phi_mux_c_phi_fu_208_p4));
    add_ln113_1_fu_789_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(indvar_flatten_reg_216));
    add_ln113_fu_473_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) + unsigned(select_ln112_reg_1112));
    add_ln114_fu_812_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) + unsigned(select_ln113_reg_1163));
    add_ln116_1_fu_367_p2 <= std_logic_vector(unsigned(add_ln116_3_fu_362_p2) + unsigned(zext_ln116_1_fu_346_p1));
    add_ln116_2_fu_627_p2 <= std_logic_vector(unsigned(zext_ln116_5_fu_623_p1) + unsigned(select_ln113_1_reg_1146));
    add_ln116_3_fu_362_p2 <= std_logic_vector(unsigned(zext_ln116_2_fu_358_p1) + unsigned(add_ln116_reg_1084));
    add_ln116_4_fu_327_p2 <= std_logic_vector(unsigned(input_r) + unsigned(zext_ln116_3_fu_323_p1));
    add_ln116_5_fu_508_p2 <= std_logic_vector(unsigned(zext_ln116_6_fu_504_p1) + unsigned(select_ln112_3_fu_432_p3));
    add_ln116_6_fu_514_p2 <= std_logic_vector(unsigned(add_ln116_5_fu_508_p2) + unsigned(zext_ln116_4_fu_492_p1));
    add_ln116_fu_272_p2 <= std_logic_vector(unsigned(input_r) + unsigned(zext_ln116_fu_268_p1));
    add_ln117_fu_662_p2 <= std_logic_vector(unsigned(zext_ln117_fu_658_p1) + unsigned(select_ln113_1_reg_1146));
    add_ln118_1_fu_402_p2 <= std_logic_vector(unsigned(add_ln118_fu_397_p2) + unsigned(zext_ln118_fu_381_p1));
    add_ln118_2_fu_687_p2 <= std_logic_vector(unsigned(zext_ln116_5_fu_623_p1) + unsigned(select_ln113_2_reg_1152));
    add_ln118_3_fu_443_p2 <= std_logic_vector(unsigned(ap_const_lv64_280) + unsigned(add_ln116_4_reg_1123));
    add_ln118_4_fu_552_p2 <= std_logic_vector(unsigned(zext_ln118_3_fu_548_p1) + unsigned(select_ln112_3_fu_432_p3));
    add_ln118_5_fu_558_p2 <= std_logic_vector(unsigned(add_ln118_4_fu_552_p2) + unsigned(zext_ln118_2_fu_536_p1));
    add_ln118_fu_397_p2 <= std_logic_vector(unsigned(zext_ln118_1_fu_393_p1) + unsigned(add_ln116_reg_1084));
    add_ln119_fu_712_p2 <= std_logic_vector(unsigned(zext_ln117_fu_658_p1) + unsigned(select_ln113_2_reg_1152));
    add_ln125_1_fu_758_p2 <= std_logic_vector(unsigned(output_r) + unsigned(zext_ln125_fu_754_p1));
    add_ln125_2_fu_763_p2 <= std_logic_vector(unsigned(select_ln113_3_cast_fu_612_p1) + unsigned(add_ln125_1_fu_758_p2));
    add_ln125_3_fu_584_p2 <= std_logic_vector(unsigned(zext_ln114_1_fu_580_p1) + unsigned(shl_ln116_3_mid1_fu_496_p3));
    add_ln125_fu_420_p2 <= std_logic_vector(unsigned(zext_ln114_fu_416_p1) + unsigned(shl_ln116_3_fu_350_p3));
    and_ln121_1_fu_905_p2 <= (grp_fu_252_p2 and and_ln121_fu_899_p2);
    and_ln121_fu_899_p2 <= (or_ln121_fu_891_p2 and or_ln121_1_fu_895_p2);
    and_ln122_1_fu_969_p2 <= (grp_fu_252_p2 and and_ln122_fu_963_p2);
    and_ln122_fu_963_p2 <= (or_ln122_fu_955_p2 and or_ln122_1_fu_959_p2);
    and_ln123_1_fu_1057_p2 <= (grp_fu_252_p2 and and_ln123_fu_1051_p2);
    and_ln123_fu_1051_p2 <= (or_ln123_fu_1027_p2 and or_ln123_1_fu_1045_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state27 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(m_axi_gmem_RVALID, m_axi_gmem_BVALID, icmp_ln112_reg_1091_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, icmp_ln112_reg_1091_pp0_iter5_reg)
    begin
                ap_block_pp0_stage0_00001 <= (((m_axi_gmem_BVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_gmem_RVALID, m_axi_gmem_BVALID, icmp_ln112_reg_1091_pp0_iter2_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, icmp_ln112_reg_1091_pp0_iter5_reg, ap_block_state6_io)
    begin
                ap_block_pp0_stage0_11001 <= (((m_axi_gmem_BVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state6_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_gmem_RVALID, m_axi_gmem_BVALID, icmp_ln112_reg_1091_pp0_iter2_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, icmp_ln112_reg_1091_pp0_iter5_reg, ap_block_state6_io)
    begin
                ap_block_pp0_stage0_subdone <= (((m_axi_gmem_BVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state6_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_00001_assign_proc : process(m_axi_gmem_RVALID, ap_enable_reg_pp0_iter3, icmp_ln112_reg_1091_pp0_iter3_reg)
    begin
                ap_block_pp0_stage1_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(m_axi_gmem_RVALID, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, icmp_ln112_reg_1091_pp0_iter3_reg, ap_block_state7_io)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_const_boolean_1 = ap_block_state7_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(m_axi_gmem_RVALID, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, icmp_ln112_reg_1091_pp0_iter3_reg, ap_block_state7_io)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_const_boolean_1 = ap_block_state7_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_00001_assign_proc : process(m_axi_gmem_RVALID, ap_enable_reg_pp0_iter2, icmp_ln112_reg_1091_pp0_iter2_reg)
    begin
                ap_block_pp0_stage2_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(m_axi_gmem_RVALID, ap_enable_reg_pp0_iter2, icmp_ln112_reg_1091_pp0_iter2_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_block_state8_io, ap_block_state20_io)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_const_boolean_1 = ap_block_state8_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_io)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(m_axi_gmem_RVALID, ap_enable_reg_pp0_iter2, icmp_ln112_reg_1091_pp0_iter2_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_block_state8_io, ap_block_state20_io)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_const_boolean_1 = ap_block_state8_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_io)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(m_axi_gmem_RVALID, ap_enable_reg_pp0_iter2, icmp_ln112_reg_1091_pp0_iter2_reg)
    begin
                ap_block_pp0_stage3_01001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(m_axi_gmem_RVALID, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, icmp_ln112_reg_1091_pp0_iter2_reg, ap_enable_reg_pp0_iter4, ap_block_state5_io, ap_block_state21_io)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_io)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(m_axi_gmem_RVALID, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, icmp_ln112_reg_1091_pp0_iter2_reg, ap_enable_reg_pp0_iter4, ap_block_state5_io, ap_block_state21_io)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_io)));
    end process;

        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp0_stage2_iter2_assign_proc : process(m_axi_gmem_RVALID, icmp_ln112_reg_1091_pp0_iter2_reg)
    begin
                ap_block_state12_pp0_stage2_iter2 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage3_iter2_assign_proc : process(m_axi_gmem_RVALID, icmp_ln112_reg_1091_pp0_iter2_reg)
    begin
                ap_block_state13_pp0_stage3_iter2 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_state14_pp0_stage0_iter3_assign_proc : process(m_axi_gmem_RVALID, icmp_ln112_reg_1091_pp0_iter2_reg)
    begin
                ap_block_state14_pp0_stage0_iter3 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_state15_pp0_stage1_iter3_assign_proc : process(m_axi_gmem_RVALID, icmp_ln112_reg_1091_pp0_iter3_reg)
    begin
                ap_block_state15_pp0_stage1_iter3 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state16_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_io_assign_proc : process(m_axi_gmem_AWREADY, icmp_ln112_reg_1091_pp0_iter4_reg)
    begin
                ap_block_state20_io <= ((m_axi_gmem_AWREADY = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter4_reg = ap_const_lv1_0));
    end process;

        ap_block_state20_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_io_assign_proc : process(m_axi_gmem_WREADY, icmp_ln112_reg_1091_pp0_iter4_reg)
    begin
                ap_block_state21_io <= ((m_axi_gmem_WREADY = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter4_reg = ap_const_lv1_0));
    end process;

        ap_block_state21_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state26_pp0_stage0_iter6_assign_proc : process(m_axi_gmem_BVALID, icmp_ln112_reg_1091_pp0_iter5_reg)
    begin
                ap_block_state26_pp0_stage0_iter6 <= ((m_axi_gmem_BVALID = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter5_reg = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln112_reg_1091)
    begin
                ap_block_state5_io <= ((icmp_ln112_reg_1091 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln112_reg_1091)
    begin
                ap_block_state6_io <= ((icmp_ln112_reg_1091 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln112_reg_1091_pp0_iter1_reg)
    begin
                ap_block_state7_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln112_reg_1091_pp0_iter1_reg)
    begin
                ap_block_state8_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln112_reg_1091)
    begin
        if ((icmp_ln112_reg_1091 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_phi_fu_208_p4_assign_proc : process(icmp_ln112_reg_1091, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, c_reg_204, select_ln112_7_reg_1203)
    begin
        if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_c_phi_fu_208_p4 <= select_ln112_7_reg_1203;
        else 
            ap_phi_mux_c_phi_fu_208_p4 <= c_reg_204;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_232_p4_assign_proc : process(icmp_ln112_reg_1091, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_reg_228, select_ln113_4_reg_1208)
    begin
        if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_phi_fu_232_p4 <= select_ln113_4_reg_1208;
        else 
            ap_phi_mux_i_phi_fu_232_p4 <= i_reg_228;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten59_phi_fu_196_p4_assign_proc : process(icmp_ln112_reg_1091, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, indvar_flatten59_reg_192, add_ln112_1_reg_1130)
    begin
        if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten59_phi_fu_196_p4 <= add_ln112_1_reg_1130;
        else 
            ap_phi_mux_indvar_flatten59_phi_fu_196_p4 <= indvar_flatten59_reg_192;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_220_p4_assign_proc : process(icmp_ln112_reg_1091, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, indvar_flatten_reg_216, select_ln113_5_reg_1213)
    begin
        if (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten_phi_fu_220_p4 <= select_ln113_5_reg_1213;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_220_p4 <= indvar_flatten_reg_216;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_244_p4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln112_reg_1091_pp0_iter1_reg, j_reg_240, add_ln114_reg_1218)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_j_phi_fu_244_p4 <= add_ln114_reg_1218;
        else 
            ap_phi_mux_j_phi_fu_244_p4 <= j_reg_240;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln123_1_fu_998_p1 <= max2_reg_1344;
    bitcast_ln123_fu_981_p1 <= max1_reg_1301_pp0_iter4_reg;
    empty_fu_332_p2 <= (i_reg_228 or ap_const_lv4_1);

    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3, icmp_ln112_reg_1091, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln112_reg_1091_pp0_iter1_reg)
    begin
        if ((((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_enable_reg_pp0_iter4, icmp_ln112_reg_1091_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, icmp_ln112_reg_1091_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln112_reg_1091_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2, icmp_ln112_reg_1091_pp0_iter2_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, icmp_ln112_reg_1091_pp0_iter3_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln112_reg_1091_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter4, icmp_ln112_reg_1091_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln112_reg_1091_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_252_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_252_ce <= ap_const_logic_1;
        else 
            grp_fu_252_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_252_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, v0_fu_859_p1, max1_reg_1301, v2_fu_941_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_fu_252_p0 <= max1_reg_1301;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_252_p0 <= v2_fu_941_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_252_p0 <= v0_fu_859_p1;
        else 
            grp_fu_252_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_252_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, v1_reg_1238, v3_reg_1295, max2_reg_1344)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            grp_fu_252_p1 <= max2_reg_1344;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_252_p1 <= v3_reg_1295;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_252_p1 <= v1_reg_1238;
        else 
            grp_fu_252_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln112_fu_277_p2 <= "1" when (ap_phi_mux_indvar_flatten59_phi_fu_196_p4 = ap_const_lv9_190) else "0";
    icmp_ln113_fu_289_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_220_p4 = ap_const_lv6_19) else "0";
    icmp_ln114_fu_462_p2 <= "1" when (unsigned(ap_phi_mux_j_phi_fu_244_p4) < unsigned(ap_const_lv4_A)) else "0";
    icmp_ln121_1_fu_854_p2 <= "1" when (trunc_ln121_reg_1233 = ap_const_lv23_0) else "0";
    icmp_ln121_2_fu_863_p2 <= "0" when (tmp_s_reg_1244 = ap_const_lv8_FF) else "1";
    icmp_ln121_3_fu_868_p2 <= "1" when (trunc_ln121_1_reg_1249 = ap_const_lv23_0) else "0";
    icmp_ln121_fu_849_p2 <= "0" when (tmp_reg_1228 = ap_const_lv8_FF) else "1";
    icmp_ln122_1_fu_936_p2 <= "1" when (trunc_ln122_reg_1290 = ap_const_lv23_0) else "0";
    icmp_ln122_2_fu_945_p2 <= "0" when (tmp_5_reg_1308 = ap_const_lv8_FF) else "1";
    icmp_ln122_3_fu_950_p2 <= "1" when (trunc_ln122_1_reg_1313 = ap_const_lv23_0) else "0";
    icmp_ln122_fu_931_p2 <= "0" when (tmp_4_reg_1285 = ap_const_lv8_FF) else "1";
    icmp_ln123_1_fu_1021_p2 <= "1" when (trunc_ln123_fu_994_p1 = ap_const_lv23_0) else "0";
    icmp_ln123_2_fu_1033_p2 <= "0" when (tmp_8_fu_1001_p4 = ap_const_lv8_FF) else "1";
    icmp_ln123_3_fu_1039_p2 <= "1" when (trunc_ln123_1_fu_1011_p1 = ap_const_lv23_0) else "0";
    icmp_ln123_fu_1015_p2 <= "0" when (tmp_7_fu_984_p4 = ap_const_lv8_FF) else "1";

    m_axi_gmem_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, icmp_ln112_reg_1091, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln112_reg_1091_pp0_iter1_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, gmem_addr_reg_1168, gmem_addr_5_reg_1174, gmem_addr_6_reg_1180, gmem_addr_7_reg_1186, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            m_axi_gmem_ARADDR <= gmem_addr_7_reg_1186;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            m_axi_gmem_ARADDR <= gmem_addr_6_reg_1180;
        elsif (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            m_axi_gmem_ARADDR <= gmem_addr_5_reg_1174;
        elsif (((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            m_axi_gmem_ARADDR <= gmem_addr_reg_1168;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, icmp_ln112_reg_1091, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln112_reg_1091_pp0_iter1_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln112_reg_1091 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln112_reg_1091_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= gmem_addr_8_reg_1192_pp0_iter3_reg;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_1;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, icmp_ln112_reg_1091_pp0_iter4_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, icmp_ln112_reg_1091_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln112_reg_1091_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, icmp_ln112_reg_1091_pp0_iter2_reg, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, icmp_ln112_reg_1091_pp0_iter3_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln112_reg_1091_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln112_reg_1091_pp0_iter2_reg = ap_const_lv1_0)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= max_final_reg_1351;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter4, icmp_ln112_reg_1091_pp0_iter4_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln112_reg_1091_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    max1_fu_911_p3 <= 
        v0_reg_1264 when (and_ln121_1_fu_905_p2(0) = '1') else 
        v1_reg_1238;
    max2_fu_975_p3 <= 
        v2_reg_1328 when (and_ln122_1_fu_969_p2(0) = '1') else 
        v3_reg_1295;
    max_final_fu_1063_p3 <= 
        max1_reg_1301_pp0_iter4_reg when (and_ln123_1_fu_1057_p2(0) = '1') else 
        max2_reg_1344;
    or_ln112_fu_468_p2 <= (icmp_ln114_fu_462_p2 or icmp_ln113_reg_1100);
    or_ln117_fu_652_p2 <= (shl_ln116_1_fu_615_p3 or ap_const_lv10_40);
    or_ln121_1_fu_895_p2 <= (icmp_ln121_3_reg_1280 or icmp_ln121_2_reg_1275);
    or_ln121_fu_891_p2 <= (icmp_ln121_reg_1254 or icmp_ln121_1_reg_1259);
    or_ln122_1_fu_959_p2 <= (icmp_ln122_3_reg_1339 or icmp_ln122_2_reg_1334);
    or_ln122_fu_955_p2 <= (icmp_ln122_reg_1318 or icmp_ln122_1_reg_1323);
    or_ln123_1_fu_1045_p2 <= (icmp_ln123_3_fu_1039_p2 or icmp_ln123_2_fu_1033_p2);
    or_ln123_fu_1027_p2 <= (icmp_ln123_fu_1015_p2 or icmp_ln123_1_fu_1021_p2);
    p_mid1_fu_478_p2 <= (ap_const_lv4_1 or add_ln113_fu_473_p2);
    select_ln112_1_fu_598_p3 <= 
        ap_const_lv4_0 when (icmp_ln113_reg_1100(0) = '1') else 
        j_reg_240;
    select_ln112_2_fu_315_p3 <= 
        shl_ln116_mid1_fu_307_p3 when (icmp_ln113_fu_289_p2(0) = '1') else 
        shl_ln_fu_260_p3;
    select_ln112_3_fu_432_p3 <= 
        add_ln116_4_reg_1123 when (icmp_ln113_reg_1100(0) = '1') else 
        add_ln116_reg_1084;
    select_ln112_4_fu_437_p3 <= 
        add_ln116_4_reg_1123 when (icmp_ln113_reg_1100(0) = '1') else 
        add_ln116_1_fu_367_p2;
    select_ln112_5_fu_448_p3 <= 
        add_ln118_3_fu_443_p2 when (icmp_ln113_reg_1100(0) = '1') else 
        add_ln118_1_fu_402_p2;
    select_ln112_6_fu_455_p3 <= 
        ap_const_lv11_0 when (icmp_ln113_reg_1100(0) = '1') else 
        add_ln125_fu_420_p2;
    select_ln112_7_fu_795_p3 <= 
        add_ln112_reg_1095 when (icmp_ln113_reg_1100(0) = '1') else 
        c_reg_204;
    select_ln112_fu_295_p3 <= 
        ap_const_lv4_0 when (icmp_ln113_fu_289_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_232_p4;
    select_ln113_1_fu_520_p3 <= 
        select_ln112_4_fu_437_p3 when (or_ln112_fu_468_p2(0) = '1') else 
        add_ln116_6_fu_514_p2;
    select_ln113_2_fu_564_p3 <= 
        select_ln112_5_fu_448_p3 when (or_ln112_fu_468_p2(0) = '1') else 
        add_ln118_5_fu_558_p2;
    select_ln113_3_cast_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln113_3_reg_1158),64));
    select_ln113_3_fu_590_p3 <= 
        select_ln112_6_fu_455_p3 when (or_ln112_fu_468_p2(0) = '1') else 
        add_ln125_3_fu_584_p2;
    select_ln113_4_fu_801_p3 <= 
        select_ln112_reg_1112 when (or_ln112_reg_1135(0) = '1') else 
        add_ln113_reg_1141;
    select_ln113_5_fu_806_p3 <= 
        ap_const_lv6_1 when (icmp_ln113_reg_1100(0) = '1') else 
        add_ln113_1_reg_1198;
    select_ln113_fu_605_p3 <= 
        select_ln112_1_fu_598_p3 when (or_ln112_reg_1135(0) = '1') else 
        ap_const_lv4_0;
        sext_ln116_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_632_p4),64));

        sext_ln117_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln8_fu_667_p4),64));

        sext_ln118_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln9_fu_692_p4),64));

        sext_ln119_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_717_p4),64));

        sext_ln125_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_769_p4),64));

    shl_ln116_1_fu_615_p3 <= (select_ln113_fu_605_p3 & ap_const_lv6_0);
    shl_ln116_2_fu_338_p3 <= (i_reg_228 & ap_const_lv9_0);
    shl_ln116_2_mid1_fu_484_p3 <= (add_ln113_fu_473_p2 & ap_const_lv9_0);
    shl_ln116_3_fu_350_p3 <= (i_reg_228 & ap_const_lv7_0);
    shl_ln116_3_mid1_fu_496_p3 <= (add_ln113_fu_473_p2 & ap_const_lv7_0);
    shl_ln116_mid1_fu_307_p3 <= (trunc_ln116_1_fu_303_p1 & ap_const_lv2_0);
    shl_ln118_1_fu_385_p3 <= (empty_fu_332_p2 & ap_const_lv7_0);
    shl_ln118_1_mid1_fu_540_p3 <= (p_mid1_fu_478_p2 & ap_const_lv7_0);
    shl_ln118_mid1_fu_528_p3 <= (p_mid1_fu_478_p2 & ap_const_lv9_0);
    shl_ln125_mid1_fu_572_p3 <= (add_ln113_fu_473_p2 & ap_const_lv5_0);
    shl_ln3_fu_373_p3 <= (empty_fu_332_p2 & ap_const_lv9_0);
    shl_ln4_fu_408_p3 <= (i_reg_228 & ap_const_lv5_0);
    shl_ln_fu_260_p3 <= (trunc_ln116_fu_256_p1 & ap_const_lv2_0);
    tmp4_fu_747_p3 <= (tmp_1_fu_737_p4 & select_ln112_2_reg_1118);
    tmp_1_fu_737_p4 <= select_ln113_fu_605_p3(3 downto 1);
    tmp_7_fu_984_p4 <= bitcast_ln123_fu_981_p1(30 downto 23);
    tmp_8_fu_1001_p4 <= bitcast_ln123_1_fu_998_p1(30 downto 23);
    trunc_ln116_1_fu_303_p1 <= add_ln112_fu_283_p2(4 - 1 downto 0);
    trunc_ln116_fu_256_p1 <= ap_phi_mux_c_phi_fu_208_p4(4 - 1 downto 0);
    trunc_ln121_1_fu_845_p1 <= m_axi_gmem_RDATA(23 - 1 downto 0);
    trunc_ln121_fu_827_p1 <= m_axi_gmem_RDATA(23 - 1 downto 0);
    trunc_ln122_1_fu_927_p1 <= m_axi_gmem_RDATA(23 - 1 downto 0);
    trunc_ln122_fu_883_p1 <= m_axi_gmem_RDATA(23 - 1 downto 0);
    trunc_ln123_1_fu_1011_p1 <= bitcast_ln123_1_fu_998_p1(23 - 1 downto 0);
    trunc_ln123_fu_994_p1 <= bitcast_ln123_fu_981_p1(23 - 1 downto 0);
    trunc_ln1_fu_717_p4 <= add_ln119_fu_712_p2(63 downto 2);
    trunc_ln2_fu_769_p4 <= add_ln125_2_fu_763_p2(63 downto 2);
    trunc_ln8_fu_667_p4 <= add_ln117_fu_662_p2(63 downto 2);
    trunc_ln9_fu_692_p4 <= add_ln118_2_fu_687_p2(63 downto 2);
    trunc_ln_fu_632_p4 <= add_ln116_2_fu_627_p2(63 downto 2);
    v0_fu_859_p1 <= gmem_addr_read_reg_1223;
    v1_fu_831_p1 <= m_axi_gmem_RDATA;
    v2_fu_941_p1 <= gmem_addr_6_read_reg_1270;
    v3_fu_887_p1 <= m_axi_gmem_RDATA;
    zext_ln114_1_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln125_mid1_fu_572_p3),11));
    zext_ln114_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_408_p3),11));
    zext_ln116_1_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln116_2_fu_338_p3),64));
    zext_ln116_2_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln116_3_fu_350_p3),64));
    zext_ln116_3_fu_323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln116_mid1_fu_307_p3),64));
    zext_ln116_4_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln116_2_mid1_fu_484_p3),64));
    zext_ln116_5_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln116_1_fu_615_p3),64));
    zext_ln116_6_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln116_3_mid1_fu_496_p3),64));
    zext_ln116_fu_268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_260_p3),64));
    zext_ln117_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln117_fu_652_p2),64));
    zext_ln118_1_fu_393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln118_1_fu_385_p3),64));
    zext_ln118_2_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln118_mid1_fu_528_p3),64));
    zext_ln118_3_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln118_1_mid1_fu_540_p3),64));
    zext_ln118_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln3_fu_373_p3),64));
    zext_ln125_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_fu_747_p3),64));
end behav;
