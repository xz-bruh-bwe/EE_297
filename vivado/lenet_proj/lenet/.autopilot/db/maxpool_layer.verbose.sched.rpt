

================================================================
== Vitis HLS Report for 'maxpool_layer'
================================================================
* Date:           Mon Apr  7 23:44:38 2025

* Version:        2020.1 (Build 2902540 on Wed May 27 20:16:15 MDT 2020)
* Project:        lenet_proj
* Solution:       lenet (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 12.60 ns | 9.198 ns |   3.40 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     4729|     4729| 59.585 us | 59.585 us |  4729|  4729|   none  |
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_55_1_VITIS_LOOP_56_2_VITIS_LOOP_57_3  |     4727|     4727|        28|          4|          1|  1176|    yes   |
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 28


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 30
* Pipeline : 1
  Pipeline-0 : II = 4, D = 28, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 30 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 2 
30 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty_5, i32, i32, void @empty_24, i32, i32, void @empty_24, void @empty_24, void @empty_24, i32, i32, i32, i32, void @empty_24, void @empty_24"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%output_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %output_r" [lenet_proj/lenet_support.cpp:50]   --->   Operation 32 'read' 'output_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%input_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %input_r" [lenet_proj/lenet_support.cpp:50]   --->   Operation 33 'read' 'input_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.76ns)   --->   "%br_ln55 = br void %bb" [lenet_proj/lenet_support.cpp:55]   --->   Operation 34 'br' 'br_ln55' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.74>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%indvar_flatten44 = phi i11, void, i11 %add_ln55_2, void %.split3" [lenet_proj/lenet_support.cpp:55]   --->   Operation 35 'phi' 'indvar_flatten44' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8, void, i8 %select_ln56_5, void %.split3" [lenet_proj/lenet_support.cpp:56]   --->   Operation 36 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%i = phi i5, void, i5 %select_ln56_4, void %.split3" [lenet_proj/lenet_support.cpp:56]   --->   Operation 37 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%j = phi i5, void, i5 %add_ln57, void %.split3" [lenet_proj/lenet_support.cpp:57]   --->   Operation 38 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln56 = zext i5 %i" [lenet_proj/lenet_support.cpp:56]   --->   Operation 39 'zext' 'zext_ln56' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %i, i32, i32" [lenet_proj/lenet_support.cpp:56]   --->   Operation 40 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [4/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln59 = mul i15 %zext_ln56, i15" [lenet_proj/lenet_support.cpp:59]   --->   Operation 41 'mul' 'mul_ln59' <Predicate = true> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 42 [1/1] (1.88ns)   --->   "%icmp_ln55 = icmp_eq  i11 %indvar_flatten44, i11" [lenet_proj/lenet_support.cpp:55]   --->   Operation 42 'icmp' 'icmp_ln55' <Predicate = true> <Delay = 1.88> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln55 = br i1 %icmp_ln55, void %.split3, void" [lenet_proj/lenet_support.cpp:55]   --->   Operation 43 'br' 'br_ln55' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.55ns)   --->   "%icmp_ln56 = icmp_eq  i8 %indvar_flatten, i8" [lenet_proj/lenet_support.cpp:56]   --->   Operation 44 'icmp' 'icmp_ln56' <Predicate = (!icmp_ln55)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node select_ln56)   --->   "%select_ln55_1 = select i1 %icmp_ln56, i5, i5 %j" [lenet_proj/lenet_support.cpp:55]   --->   Operation 45 'select' 'select_ln55_1' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.36ns)   --->   "%icmp_ln57 = icmp_ult  i5 %j, i5" [lenet_proj/lenet_support.cpp:57]   --->   Operation 46 'icmp' 'icmp_ln57' <Predicate = (!icmp_ln55)> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.97ns)   --->   "%or_ln55 = or i1 %icmp_ln56, i1 %icmp_ln57" [lenet_proj/lenet_support.cpp:55]   --->   Operation 47 'or' 'or_ln55' <Predicate = (!icmp_ln55)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (1.21ns) (out node of the LUT)   --->   "%select_ln56 = select i1 %or_ln55, i5 %select_ln55_1, i5" [lenet_proj/lenet_support.cpp:56]   --->   Operation 48 'select' 'select_ln56' <Predicate = (!icmp_ln55)> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (1.91ns)   --->   "%add_ln56_1 = add i8, i8 %indvar_flatten" [lenet_proj/lenet_support.cpp:56]   --->   Operation 49 'add' 'add_ln56_1' <Predicate = (!icmp_ln55)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.14>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%empty = or i5 %i, i5" [lenet_proj/lenet_support.cpp:56]   --->   Operation 50 'or' 'empty' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 0.00>
ST_3 : Operation 51 [3/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln59 = mul i15 %zext_ln56, i15" [lenet_proj/lenet_support.cpp:59]   --->   Operation 51 'mul' 'mul_ln59' <Predicate = true> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 52 [1/1] (1.21ns)   --->   "%select_ln55 = select i1 %icmp_ln56, i5, i5 %i" [lenet_proj/lenet_support.cpp:55]   --->   Operation 52 'select' 'select_ln55' <Predicate = (!icmp_ln55)> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (1.78ns)   --->   "%add_ln56 = add i5, i5 %select_ln55" [lenet_proj/lenet_support.cpp:56]   --->   Operation 53 'add' 'add_ln56' <Predicate = (!icmp_ln55)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln56_1 = zext i5 %add_ln56" [lenet_proj/lenet_support.cpp:56]   --->   Operation 54 'zext' 'zext_ln56_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%p_mid = partselect i4 @_ssdm_op_PartSelect.i4.i5.i32.i32, i5 %add_ln56, i32, i32" [lenet_proj/lenet_support.cpp:56]   --->   Operation 55 'partselect' 'p_mid' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 0.00>
ST_3 : Operation 56 [4/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln59_1 = mul i15, i15 %zext_ln56_1" [lenet_proj/lenet_support.cpp:59]   --->   Operation 56 'mul' 'mul_ln59_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 2.15>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%p_cast = zext i5 %empty" [lenet_proj/lenet_support.cpp:56]   --->   Operation 57 'zext' 'p_cast' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 0.00>
ST_4 : Operation 58 [2/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln59 = mul i15 %zext_ln56, i15" [lenet_proj/lenet_support.cpp:59]   --->   Operation 58 'mul' 'mul_ln59' <Predicate = true> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 59 [4/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln61 = mul i15 %p_cast, i15" [lenet_proj/lenet_support.cpp:61]   --->   Operation 59 'mul' 'mul_ln61' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 60 [3/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln59_1 = mul i15, i15 %zext_ln56_1" [lenet_proj/lenet_support.cpp:59]   --->   Operation 60 'mul' 'mul_ln59_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 2.15>
ST_5 : Operation 61 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln59 = mul i15 %zext_ln56, i15" [lenet_proj/lenet_support.cpp:59]   --->   Operation 61 'mul' 'mul_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 62 [3/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln61 = mul i15 %p_cast, i15" [lenet_proj/lenet_support.cpp:61]   --->   Operation 62 'mul' 'mul_ln61' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 63 [1/1] (1.63ns)   --->   "%add_ln55_2 = add i11 %indvar_flatten44, i11" [lenet_proj/lenet_support.cpp:55]   --->   Operation 63 'add' 'add_ln55_2' <Predicate = true> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%p_mid1 = or i5 %add_ln56, i5" [lenet_proj/lenet_support.cpp:56]   --->   Operation 64 'or' 'p_mid1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%p_cast_mid1 = zext i5 %p_mid1" [lenet_proj/lenet_support.cpp:56]   --->   Operation 65 'zext' 'p_cast_mid1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 0.00>
ST_5 : Operation 66 [2/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln59_1 = mul i15, i15 %zext_ln56_1" [lenet_proj/lenet_support.cpp:59]   --->   Operation 66 'mul' 'mul_ln59_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 67 [4/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln61_1 = mul i15, i15 %p_cast_mid1" [lenet_proj/lenet_support.cpp:61]   --->   Operation 67 'mul' 'mul_ln61_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 68 [1/1] (1.21ns)   --->   "%select_ln56_4 = select i1 %or_ln55, i5 %select_ln55, i5 %add_ln56" [lenet_proj/lenet_support.cpp:56]   --->   Operation 68 'select' 'select_ln56_4' <Predicate = (!icmp_ln55)> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (1.78ns)   --->   "%add_ln57 = add i5, i5 %select_ln56" [lenet_proj/lenet_support.cpp:57]   --->   Operation 69 'add' 'add_ln57' <Predicate = (!icmp_ln55)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (1.24ns)   --->   "%select_ln56_5 = select i1 %icmp_ln56, i8, i8 %add_ln56_1" [lenet_proj/lenet_support.cpp:56]   --->   Operation 70 'select' 'select_ln56_5' <Predicate = (!icmp_ln55)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.65>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%c = phi i3, void, i3 %select_ln55_7, void %.split3" [lenet_proj/lenet_support.cpp:55]   --->   Operation 71 'phi' 'c' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %c, i2" [lenet_proj/lenet_support.cpp:59]   --->   Operation 72 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i5 %shl_ln" [lenet_proj/lenet_support.cpp:59]   --->   Operation 73 'zext' 'zext_ln59' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (3.52ns)   --->   "%add_ln59 = add i64 %zext_ln59, i64 %input_read" [lenet_proj/lenet_support.cpp:59]   --->   Operation 74 'add' 'add_ln59' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [2/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln61 = mul i15 %p_cast, i15" [lenet_proj/lenet_support.cpp:61]   --->   Operation 75 'mul' 'mul_ln61' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 76 [1/1] (1.65ns)   --->   "%add_ln55 = add i3, i3 %c" [lenet_proj/lenet_support.cpp:55]   --->   Operation 76 'add' 'add_ln55' <Predicate = (!icmp_ln55)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%shl_ln59_mid1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %add_ln55, i2" [lenet_proj/lenet_support.cpp:59]   --->   Operation 77 'bitconcatenate' 'shl_ln59_mid1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln59_5 = zext i5 %shl_ln59_mid1" [lenet_proj/lenet_support.cpp:59]   --->   Operation 78 'zext' 'zext_ln59_5' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (3.52ns)   --->   "%add_ln59_3 = add i64 %input_read, i64 %zext_ln59_5" [lenet_proj/lenet_support.cpp:59]   --->   Operation 79 'add' 'add_ln59_3' <Predicate = (!icmp_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (1.48ns)   --->   "%select_ln55_2 = select i1 %icmp_ln56, i64 %add_ln59_3, i64 %add_ln59" [lenet_proj/lenet_support.cpp:55]   --->   Operation 80 'select' 'select_ln55_2' <Predicate = (!icmp_ln55)> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 81 [1/1] (1.21ns)   --->   "%select_ln55_3 = select i1 %icmp_ln56, i5 %shl_ln59_mid1, i5 %shl_ln" [lenet_proj/lenet_support.cpp:55]   --->   Operation 81 'select' 'select_ln55_3' <Predicate = (!icmp_ln55)> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.98ns)   --->   "%select_ln55_7 = select i1 %icmp_ln56, i3 %add_ln55, i3 %c" [lenet_proj/lenet_support.cpp:55]   --->   Operation 82 'select' 'select_ln55_7' <Predicate = (!icmp_ln55)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 83 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln59_1 = mul i15, i15 %zext_ln56_1" [lenet_proj/lenet_support.cpp:59]   --->   Operation 83 'mul' 'mul_ln59_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 84 [3/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln61_1 = mul i15, i15 %p_cast_mid1" [lenet_proj/lenet_support.cpp:61]   --->   Operation 84 'mul' 'mul_ln61_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 8.52>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln59_2 = zext i15 %mul_ln59" [lenet_proj/lenet_support.cpp:59]   --->   Operation 85 'zext' 'zext_ln59_2' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 0.00>
ST_7 : Operation 86 [1/1] (3.52ns)   --->   "%add_ln59_1 = add i64 %zext_ln59_2, i64 %add_ln59" [lenet_proj/lenet_support.cpp:59]   --->   Operation 86 'add' 'add_ln59_1' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 87 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln61 = mul i15 %p_cast, i15" [lenet_proj/lenet_support.cpp:61]   --->   Operation 87 'mul' 'mul_ln61' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln61 = zext i15 %mul_ln61" [lenet_proj/lenet_support.cpp:61]   --->   Operation 88 'zext' 'zext_ln61' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (3.52ns)   --->   "%add_ln61 = add i64 %zext_ln61, i64 %add_ln59" [lenet_proj/lenet_support.cpp:61]   --->   Operation 89 'add' 'add_ln61' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node select_ln56_1)   --->   "%select_ln55_4 = select i1 %icmp_ln56, i64 %add_ln59_3, i64 %add_ln59_1" [lenet_proj/lenet_support.cpp:55]   --->   Operation 90 'select' 'select_ln55_4' <Predicate = (!icmp_ln55 & or_ln55)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln59_7 = zext i15 %mul_ln59_1" [lenet_proj/lenet_support.cpp:59]   --->   Operation 91 'zext' 'zext_ln59_7' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (3.52ns)   --->   "%add_ln59_4 = add i64 %select_ln55_2, i64 %zext_ln59_7" [lenet_proj/lenet_support.cpp:59]   --->   Operation 92 'add' 'add_ln59_4' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln56_1 = select i1 %or_ln55, i64 %select_ln55_4, i64 %add_ln59_4" [lenet_proj/lenet_support.cpp:56]   --->   Operation 93 'select' 'select_ln56_1' <Predicate = (!icmp_ln55)> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 94 [2/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln61_1 = mul i15, i15 %p_cast_mid1" [lenet_proj/lenet_support.cpp:61]   --->   Operation 94 'mul' 'mul_ln61_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%shl_ln59_1 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %select_ln56, i5" [lenet_proj/lenet_support.cpp:59]   --->   Operation 95 'bitconcatenate' 'shl_ln59_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln59_3 = zext i10 %shl_ln59_1" [lenet_proj/lenet_support.cpp:59]   --->   Operation 96 'zext' 'zext_ln59_3' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%shl_ln59_2 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %select_ln56, i3" [lenet_proj/lenet_support.cpp:59]   --->   Operation 97 'bitconcatenate' 'shl_ln59_2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln59_4 = zext i8 %shl_ln59_2" [lenet_proj/lenet_support.cpp:59]   --->   Operation 98 'zext' 'zext_ln59_4' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (1.73ns)   --->   "%sub_ln59 = sub i11 %zext_ln59_3, i11 %zext_ln59_4" [lenet_proj/lenet_support.cpp:59]   --->   Operation 99 'sub' 'sub_ln59' <Predicate = (!icmp_ln55)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 100 [1/1] (0.00ns)   --->   "%sext_ln59_1 = sext i11 %sub_ln59" [lenet_proj/lenet_support.cpp:59]   --->   Operation 100 'sext' 'sext_ln59_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_7 : Operation 101 [1/1] (3.52ns)   --->   "%add_ln59_2 = add i64 %select_ln56_1, i64 %sext_ln59_1" [lenet_proj/lenet_support.cpp:59]   --->   Operation 101 'add' 'add_ln59_2' <Predicate = (!icmp_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln59_2, i32, i32" [lenet_proj/lenet_support.cpp:59]   --->   Operation 102 'partselect' 'trunc_ln' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_7 : Operation 103 [1/1] (0.00ns)   --->   "%sext_ln59 = sext i62 %trunc_ln" [lenet_proj/lenet_support.cpp:59]   --->   Operation 103 'sext' 'sext_ln59' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln59" [lenet_proj/lenet_support.cpp:59]   --->   Operation 104 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln55)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 9.19>
ST_8 : Operation 105 [1/1] (3.52ns)   --->   "%add_ln61_2 = add i64, i64 %add_ln59_3" [lenet_proj/lenet_support.cpp:61]   --->   Operation 105 'add' 'add_ln61_2' <Predicate = (!icmp_ln55 & icmp_ln56 & or_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node select_ln56_2)   --->   "%select_ln55_5 = select i1 %icmp_ln56, i64 %add_ln61_2, i64 %add_ln61" [lenet_proj/lenet_support.cpp:55]   --->   Operation 106 'select' 'select_ln55_5' <Predicate = (!icmp_ln55 & or_ln55)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 107 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln61_1 = mul i15, i15 %p_cast_mid1" [lenet_proj/lenet_support.cpp:61]   --->   Operation 107 'mul' 'mul_ln61_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln61_1 = zext i15 %mul_ln61_1" [lenet_proj/lenet_support.cpp:61]   --->   Operation 108 'zext' 'zext_ln61_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 0.00>
ST_8 : Operation 109 [1/1] (3.52ns)   --->   "%add_ln61_3 = add i64 %select_ln55_2, i64 %zext_ln61_1" [lenet_proj/lenet_support.cpp:61]   --->   Operation 109 'add' 'add_ln61_3' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln56_2 = select i1 %or_ln55, i64 %select_ln55_5, i64 %add_ln61_3" [lenet_proj/lenet_support.cpp:56]   --->   Operation 110 'select' 'select_ln56_2' <Predicate = (!icmp_ln55)> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 111 [7/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:59]   --->   Operation 111 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 112 [1/1] (0.00ns)   --->   "%or_ln60 = or i5 %select_ln56, i5" [lenet_proj/lenet_support.cpp:60]   --->   Operation 112 'or' 'or_ln60' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_8 : Operation 113 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %or_ln60, i5" [lenet_proj/lenet_support.cpp:60]   --->   Operation 113 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i10 %shl_ln1" [lenet_proj/lenet_support.cpp:60]   --->   Operation 114 'zext' 'zext_ln60' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.00ns)   --->   "%shl_ln60_1 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %or_ln60, i3" [lenet_proj/lenet_support.cpp:60]   --->   Operation 115 'bitconcatenate' 'shl_ln60_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i8 %shl_ln60_1" [lenet_proj/lenet_support.cpp:60]   --->   Operation 116 'zext' 'zext_ln60_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_8 : Operation 117 [1/1] (1.73ns)   --->   "%sub_ln60 = sub i11 %zext_ln60, i11 %zext_ln60_1" [lenet_proj/lenet_support.cpp:60]   --->   Operation 117 'sub' 'sub_ln60' <Predicate = (!icmp_ln55)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 118 [1/1] (0.00ns)   --->   "%sext_ln60_1 = sext i11 %sub_ln60" [lenet_proj/lenet_support.cpp:60]   --->   Operation 118 'sext' 'sext_ln60_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (3.52ns)   --->   "%add_ln60 = add i64 %select_ln56_1, i64 %sext_ln60_1" [lenet_proj/lenet_support.cpp:60]   --->   Operation 119 'add' 'add_ln60' <Predicate = (!icmp_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 120 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln60, i32, i32" [lenet_proj/lenet_support.cpp:60]   --->   Operation 120 'partselect' 'trunc_ln1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%sext_ln60 = sext i62 %trunc_ln1" [lenet_proj/lenet_support.cpp:60]   --->   Operation 121 'sext' 'sext_ln60' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %sext_ln60" [lenet_proj/lenet_support.cpp:60]   --->   Operation 122 'getelementptr' 'gmem_addr_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 9.19>
ST_9 : Operation 123 [6/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:59]   --->   Operation 123 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 124 [7/7] (9.19ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:60]   --->   Operation 124 'readreq' 'gmem_load_1_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 125 [1/1] (3.52ns)   --->   "%add_ln61_1 = add i64 %select_ln56_2, i64 %sext_ln59_1" [lenet_proj/lenet_support.cpp:61]   --->   Operation 125 'add' 'add_ln61_1' <Predicate = (!icmp_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 126 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln61_1, i32, i32" [lenet_proj/lenet_support.cpp:61]   --->   Operation 126 'partselect' 'trunc_ln2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_9 : Operation 127 [1/1] (0.00ns)   --->   "%sext_ln61 = sext i62 %trunc_ln2" [lenet_proj/lenet_support.cpp:61]   --->   Operation 127 'sext' 'sext_ln61' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_9 : Operation 128 [1/1] (0.00ns)   --->   "%gmem_addr_2 = getelementptr i32 %gmem, i64 %sext_ln61" [lenet_proj/lenet_support.cpp:61]   --->   Operation 128 'getelementptr' 'gmem_addr_2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_9 : Operation 129 [1/1] (3.52ns)   --->   "%add_ln62 = add i64 %select_ln56_2, i64 %sext_ln60_1" [lenet_proj/lenet_support.cpp:62]   --->   Operation 129 'add' 'add_ln62' <Predicate = (!icmp_ln55)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 130 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln62, i32, i32" [lenet_proj/lenet_support.cpp:62]   --->   Operation 130 'partselect' 'trunc_ln3' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_9 : Operation 131 [1/1] (0.00ns)   --->   "%sext_ln62 = sext i62 %trunc_ln3" [lenet_proj/lenet_support.cpp:62]   --->   Operation 131 'sext' 'sext_ln62' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_9 : Operation 132 [1/1] (0.00ns)   --->   "%gmem_addr_3 = getelementptr i32 %gmem, i64 %sext_ln62" [lenet_proj/lenet_support.cpp:62]   --->   Operation 132 'getelementptr' 'gmem_addr_3' <Predicate = (!icmp_ln55)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 9.19>
ST_10 : Operation 133 [5/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:59]   --->   Operation 133 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 134 [6/7] (9.19ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:60]   --->   Operation 134 'readreq' 'gmem_load_1_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 135 [7/7] (9.19ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_2, i32, i1 %gmem_load_1_req" [lenet_proj/lenet_support.cpp:61]   --->   Operation 135 'readreq' 'gmem_load_2_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 9.19>
ST_11 : Operation 136 [4/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:59]   --->   Operation 136 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 137 [5/7] (9.19ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:60]   --->   Operation 137 'readreq' 'gmem_load_1_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 138 [6/7] (9.19ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_2, i32, i1 %gmem_load_1_req" [lenet_proj/lenet_support.cpp:61]   --->   Operation 138 'readreq' 'gmem_load_2_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 139 [7/7] (9.19ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_3, i32, i1 %gmem_load_2_req" [lenet_proj/lenet_support.cpp:62]   --->   Operation 139 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 9.19>
ST_12 : Operation 140 [3/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:59]   --->   Operation 140 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 141 [4/7] (9.19ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:60]   --->   Operation 141 'readreq' 'gmem_load_1_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 142 [5/7] (9.19ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_2, i32, i1 %gmem_load_1_req" [lenet_proj/lenet_support.cpp:61]   --->   Operation 142 'readreq' 'gmem_load_2_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 143 [6/7] (9.19ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_3, i32, i1 %gmem_load_2_req" [lenet_proj/lenet_support.cpp:62]   --->   Operation 143 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 9.19>
ST_13 : Operation 144 [2/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:59]   --->   Operation 144 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 145 [3/7] (9.19ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:60]   --->   Operation 145 'readreq' 'gmem_load_1_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 146 [4/7] (9.19ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_2, i32, i1 %gmem_load_1_req" [lenet_proj/lenet_support.cpp:61]   --->   Operation 146 'readreq' 'gmem_load_2_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 147 [5/7] (9.19ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_3, i32, i1 %gmem_load_2_req" [lenet_proj/lenet_support.cpp:62]   --->   Operation 147 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 9.19>
ST_14 : Operation 148 [1/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:59]   --->   Operation 148 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 149 [2/7] (9.19ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:60]   --->   Operation 149 'readreq' 'gmem_load_1_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 150 [3/7] (9.19ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_2, i32, i1 %gmem_load_1_req" [lenet_proj/lenet_support.cpp:61]   --->   Operation 150 'readreq' 'gmem_load_2_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 151 [4/7] (9.19ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_3, i32, i1 %gmem_load_2_req" [lenet_proj/lenet_support.cpp:62]   --->   Operation 151 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 9.19>
ST_15 : Operation 152 [1/1] (9.19ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P, i32 %gmem_addr, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:59]   --->   Operation 152 'read' 'gmem_addr_read' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 153 [1/7] (9.19ns)   --->   "%gmem_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:60]   --->   Operation 153 'readreq' 'gmem_load_1_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 154 [2/7] (9.19ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_2, i32, i1 %gmem_load_1_req" [lenet_proj/lenet_support.cpp:61]   --->   Operation 154 'readreq' 'gmem_load_2_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 155 [3/7] (9.19ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_3, i32, i1 %gmem_load_2_req" [lenet_proj/lenet_support.cpp:62]   --->   Operation 155 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 156 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %gmem_addr_read, i32, i32" [lenet_proj/lenet_support.cpp:64]   --->   Operation 156 'partselect' 'tmp_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_15 : Operation 157 [1/1] (0.00ns)   --->   "%trunc_ln64 = trunc i32 %gmem_addr_read" [lenet_proj/lenet_support.cpp:64]   --->   Operation 157 'trunc' 'trunc_ln64' <Predicate = (!icmp_ln55)> <Delay = 0.00>

State 16 <SV = 15> <Delay = 9.19>
ST_16 : Operation 158 [1/1] (9.19ns)   --->   "%gmem_addr_1_read = read i32 @_ssdm_op_Read.m_axi.i32P, i32 %gmem_addr_1, i1 %gmem_load_1_req, i32 %gmem_addr_read" [lenet_proj/lenet_support.cpp:60]   --->   Operation 158 'read' 'gmem_addr_1_read' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 159 [1/7] (9.19ns)   --->   "%gmem_load_2_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_2, i32, i1 %gmem_load_1_req" [lenet_proj/lenet_support.cpp:61]   --->   Operation 159 'readreq' 'gmem_load_2_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 160 [2/7] (9.19ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_3, i32, i1 %gmem_load_2_req" [lenet_proj/lenet_support.cpp:62]   --->   Operation 160 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %gmem_addr_1_read, i32, i32" [lenet_proj/lenet_support.cpp:64]   --->   Operation 161 'partselect' 'tmp_2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_16 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln64_1 = trunc i32 %gmem_addr_1_read" [lenet_proj/lenet_support.cpp:64]   --->   Operation 162 'trunc' 'trunc_ln64_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_16 : Operation 163 [1/1] (1.55ns)   --->   "%icmp_ln64 = icmp_ne  i8 %tmp_1, i8" [lenet_proj/lenet_support.cpp:64]   --->   Operation 163 'icmp' 'icmp_ln64' <Predicate = (!icmp_ln55)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 164 [1/1] (2.44ns)   --->   "%icmp_ln64_1 = icmp_eq  i23 %trunc_ln64, i23" [lenet_proj/lenet_support.cpp:64]   --->   Operation 164 'icmp' 'icmp_ln64_1' <Predicate = (!icmp_ln55)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 9.19>
ST_17 : Operation 165 [1/1] (0.00ns)   --->   "%v0 = bitcast i32 %gmem_addr_read" [lenet_proj/lenet_support.cpp:59]   --->   Operation 165 'bitcast' 'v0' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_17 : Operation 166 [1/1] (0.00ns)   --->   "%v1 = bitcast i32 %gmem_addr_1_read" [lenet_proj/lenet_support.cpp:60]   --->   Operation 166 'bitcast' 'v1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_17 : Operation 167 [1/1] (9.19ns)   --->   "%gmem_addr_2_read = read i32 @_ssdm_op_Read.m_axi.i32P, i32 %gmem_addr_2, i1 %gmem_load_2_req, i32 %gmem_addr_1_read" [lenet_proj/lenet_support.cpp:61]   --->   Operation 167 'read' 'gmem_addr_2_read' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 168 [1/7] (9.19ns)   --->   "%gmem_load_3_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_3, i32, i1 %gmem_load_2_req" [lenet_proj/lenet_support.cpp:62]   --->   Operation 168 'readreq' 'gmem_load_3_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 169 [1/1] (1.55ns)   --->   "%icmp_ln64_2 = icmp_ne  i8 %tmp_2, i8" [lenet_proj/lenet_support.cpp:64]   --->   Operation 169 'icmp' 'icmp_ln64_2' <Predicate = (!icmp_ln55)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 170 [1/1] (2.44ns)   --->   "%icmp_ln64_3 = icmp_eq  i23 %trunc_ln64_1, i23" [lenet_proj/lenet_support.cpp:64]   --->   Operation 170 'icmp' 'icmp_ln64_3' <Predicate = (!icmp_ln55)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 171 [2/2] (5.43ns)   --->   "%tmp_3 = fcmp_ogt  i32 %v0, i32 %v1" [lenet_proj/lenet_support.cpp:64]   --->   Operation 171 'fcmp' 'tmp_3' <Predicate = (!icmp_ln55)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %gmem_addr_2_read, i32, i32" [lenet_proj/lenet_support.cpp:65]   --->   Operation 172 'partselect' 'tmp_4' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_17 : Operation 173 [1/1] (0.00ns)   --->   "%trunc_ln65 = trunc i32 %gmem_addr_2_read" [lenet_proj/lenet_support.cpp:65]   --->   Operation 173 'trunc' 'trunc_ln65' <Predicate = (!icmp_ln55)> <Delay = 0.00>

State 18 <SV = 17> <Delay = 9.19>
ST_18 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln59_1 = zext i4 %tmp" [lenet_proj/lenet_support.cpp:59]   --->   Operation 174 'zext' 'zext_ln59_1' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 0.00>
ST_18 : Operation 175 [1/1] (4.52ns)   --->   "%mul_ln68 = mul i13 %zext_ln59_1, i13" [lenet_proj/lenet_support.cpp:68]   --->   Operation 175 'mul' 'mul_ln68' <Predicate = (!icmp_ln56 & or_ln55)> <Delay = 4.52> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.52> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 176 [1/1] (9.19ns)   --->   "%gmem_addr_3_read = read i32 @_ssdm_op_Read.m_axi.i32P, i32 %gmem_addr_3, i1 %gmem_load_3_req, i32 %gmem_addr_2_read" [lenet_proj/lenet_support.cpp:62]   --->   Operation 176 'read' 'gmem_addr_3_read' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node and_ln64_1)   --->   "%or_ln64 = or i1 %icmp_ln64_1, i1 %icmp_ln64" [lenet_proj/lenet_support.cpp:64]   --->   Operation 177 'or' 'or_ln64' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node and_ln64_1)   --->   "%or_ln64_1 = or i1 %icmp_ln64_3, i1 %icmp_ln64_2" [lenet_proj/lenet_support.cpp:64]   --->   Operation 178 'or' 'or_ln64_1' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node and_ln64_1)   --->   "%and_ln64 = and i1 %or_ln64, i1 %or_ln64_1" [lenet_proj/lenet_support.cpp:64]   --->   Operation 179 'and' 'and_ln64' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 180 [1/2] (5.43ns)   --->   "%tmp_3 = fcmp_ogt  i32 %v0, i32 %v1" [lenet_proj/lenet_support.cpp:64]   --->   Operation 180 'fcmp' 'tmp_3' <Predicate = (!icmp_ln55)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 181 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln64_1 = and i1 %and_ln64, i1 %tmp_3" [lenet_proj/lenet_support.cpp:64]   --->   Operation 181 'and' 'and_ln64_1' <Predicate = (!icmp_ln55)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 182 [1/1] (0.69ns) (out node of the LUT)   --->   "%max1 = select i1 %and_ln64_1, i32 %v0, i32 %v1" [lenet_proj/lenet_support.cpp:64]   --->   Operation 182 'select' 'max1' <Predicate = (!icmp_ln55)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 183 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %gmem_addr_3_read, i32, i32" [lenet_proj/lenet_support.cpp:65]   --->   Operation 183 'partselect' 'tmp_5' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_18 : Operation 184 [1/1] (0.00ns)   --->   "%trunc_ln65_1 = trunc i32 %gmem_addr_3_read" [lenet_proj/lenet_support.cpp:65]   --->   Operation 184 'trunc' 'trunc_ln65_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_18 : Operation 185 [1/1] (1.55ns)   --->   "%icmp_ln65 = icmp_ne  i8 %tmp_4, i8" [lenet_proj/lenet_support.cpp:65]   --->   Operation 185 'icmp' 'icmp_ln65' <Predicate = (!icmp_ln55)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 186 [1/1] (2.44ns)   --->   "%icmp_ln65_1 = icmp_eq  i23 %trunc_ln65, i23" [lenet_proj/lenet_support.cpp:65]   --->   Operation 186 'icmp' 'icmp_ln65_1' <Predicate = (!icmp_ln55)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.19>
ST_19 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node add_ln68)   --->   "%select_ln55_6 = select i1 %icmp_ln56, i13, i13 %mul_ln68" [lenet_proj/lenet_support.cpp:55]   --->   Operation 187 'select' 'select_ln55_6' <Predicate = (!icmp_ln55 & or_ln55)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln59_6 = zext i4 %p_mid" [lenet_proj/lenet_support.cpp:59]   --->   Operation 188 'zext' 'zext_ln59_6' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 0.00>
ST_19 : Operation 189 [1/1] (4.52ns)   --->   "%mul_ln68_1 = mul i13, i13 %zext_ln59_6" [lenet_proj/lenet_support.cpp:68]   --->   Operation 189 'mul' 'mul_ln68_1' <Predicate = (!icmp_ln55 & !or_ln55)> <Delay = 4.52> <CoreInst = "Multiplier">   --->   Core 4 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.52> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node add_ln68)   --->   "%select_ln56_3 = select i1 %or_ln55, i13 %select_ln55_6, i13 %mul_ln68_1" [lenet_proj/lenet_support.cpp:56]   --->   Operation 190 'select' 'select_ln56_3' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node add_ln68)   --->   "%zext_ln56_2 = zext i13 %select_ln56_3" [lenet_proj/lenet_support.cpp:56]   --->   Operation 191 'zext' 'zext_ln56_2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 192 [1/1] (0.00ns)   --->   "%v2 = bitcast i32 %gmem_addr_2_read" [lenet_proj/lenet_support.cpp:61]   --->   Operation 192 'bitcast' 'v2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 193 [1/1] (0.00ns)   --->   "%v3 = bitcast i32 %gmem_addr_3_read" [lenet_proj/lenet_support.cpp:62]   --->   Operation 193 'bitcast' 'v3' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 194 [1/1] (1.55ns)   --->   "%icmp_ln65_2 = icmp_ne  i8 %tmp_5, i8" [lenet_proj/lenet_support.cpp:65]   --->   Operation 194 'icmp' 'icmp_ln65_2' <Predicate = (!icmp_ln55)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 195 [1/1] (2.44ns)   --->   "%icmp_ln65_3 = icmp_eq  i23 %trunc_ln65_1, i23" [lenet_proj/lenet_support.cpp:65]   --->   Operation 195 'icmp' 'icmp_ln65_3' <Predicate = (!icmp_ln55)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 196 [2/2] (5.43ns)   --->   "%tmp_6 = fcmp_ogt  i32 %v2, i32 %v3" [lenet_proj/lenet_support.cpp:65]   --->   Operation 196 'fcmp' 'tmp_6' <Predicate = (!icmp_ln55)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 197 [1/1] (0.00ns)   --->   "%shl_ln2 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i5.i4, i5 %select_ln56, i4" [lenet_proj/lenet_support.cpp:68]   --->   Operation 197 'bitconcatenate' 'shl_ln2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i9 %shl_ln2" [lenet_proj/lenet_support.cpp:68]   --->   Operation 198 'zext' 'zext_ln68' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 199 [1/1] (0.00ns)   --->   "%shl_ln68_1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i5.i2, i5 %select_ln56, i2" [lenet_proj/lenet_support.cpp:68]   --->   Operation 199 'bitconcatenate' 'shl_ln68_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 200 [1/1] (0.00ns)   --->   "%zext_ln68_1 = zext i7 %shl_ln68_1" [lenet_proj/lenet_support.cpp:68]   --->   Operation 200 'zext' 'zext_ln68_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 201 [1/1] (1.82ns)   --->   "%sub_ln68 = sub i10 %zext_ln68, i10 %zext_ln68_1" [lenet_proj/lenet_support.cpp:68]   --->   Operation 201 'sub' 'sub_ln68' <Predicate = (!icmp_ln55)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node add_ln68)   --->   "%sext_ln68_1 = sext i10 %sub_ln68" [lenet_proj/lenet_support.cpp:68]   --->   Operation 202 'sext' 'sext_ln68_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_19 : Operation 203 [1/1] (1.67ns) (out node of the LUT)   --->   "%add_ln68 = add i14 %zext_ln56_2, i14 %sext_ln68_1" [lenet_proj/lenet_support.cpp:68]   --->   Operation 203 'add' 'add_ln68' <Predicate = (!icmp_ln55)> <Delay = 1.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.10>
ST_20 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_1)   --->   "%or_ln65 = or i1 %icmp_ln65_1, i1 %icmp_ln65" [lenet_proj/lenet_support.cpp:65]   --->   Operation 204 'or' 'or_ln65' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_1)   --->   "%or_ln65_1 = or i1 %icmp_ln65_3, i1 %icmp_ln65_2" [lenet_proj/lenet_support.cpp:65]   --->   Operation 205 'or' 'or_ln65_1' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_1)   --->   "%and_ln65 = and i1 %or_ln65, i1 %or_ln65_1" [lenet_proj/lenet_support.cpp:65]   --->   Operation 206 'and' 'and_ln65' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 207 [1/2] (5.43ns)   --->   "%tmp_6 = fcmp_ogt  i32 %v2, i32 %v3" [lenet_proj/lenet_support.cpp:65]   --->   Operation 207 'fcmp' 'tmp_6' <Predicate = (!icmp_ln55)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 208 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln65_1 = and i1 %and_ln65, i1 %tmp_6" [lenet_proj/lenet_support.cpp:65]   --->   Operation 208 'and' 'and_ln65_1' <Predicate = (!icmp_ln55)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 209 [1/1] (0.69ns) (out node of the LUT)   --->   "%max2 = select i1 %and_ln65_1, i32 %v2, i32 %v3" [lenet_proj/lenet_support.cpp:65]   --->   Operation 209 'select' 'max2' <Predicate = (!icmp_ln55)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 21 <SV = 20> <Delay = 0.00>

State 22 <SV = 21> <Delay = 5.43>
ST_22 : Operation 210 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i5 %select_ln55_3" [lenet_proj/lenet_support.cpp:55]   --->   Operation 210 'zext' 'zext_ln55' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_22 : Operation 211 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln55_1 = add i64 %output_read, i64 %zext_ln55" [lenet_proj/lenet_support.cpp:55]   --->   Operation 211 'add' 'add_ln55_1' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 212 [2/2] (5.43ns)   --->   "%tmp_9 = fcmp_ogt  i32 %max1, i32 %max2" [lenet_proj/lenet_support.cpp:66]   --->   Operation 212 'fcmp' 'tmp_9' <Predicate = (!icmp_ln55)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 213 [1/1] (0.00ns)   --->   "%sext_ln68_2 = sext i14 %add_ln68" [lenet_proj/lenet_support.cpp:68]   --->   Operation 213 'sext' 'sext_ln68_2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_22 : Operation 214 [1/1] (5.30ns) (root node of TernaryAdder)   --->   "%add_ln68_1 = add i64 %sext_ln68_2, i64 %add_ln55_1" [lenet_proj/lenet_support.cpp:68]   --->   Operation 214 'add' 'add_ln68_1' <Predicate = (!icmp_ln55)> <Delay = 5.30> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 215 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln68_1, i32, i32" [lenet_proj/lenet_support.cpp:68]   --->   Operation 215 'partselect' 'trunc_ln7' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_22 : Operation 216 [1/1] (0.00ns)   --->   "%sext_ln68 = sext i62 %trunc_ln7" [lenet_proj/lenet_support.cpp:68]   --->   Operation 216 'sext' 'sext_ln68' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_22 : Operation 217 [1/1] (0.00ns)   --->   "%gmem_addr_4 = getelementptr i32 %gmem, i64 %sext_ln68" [lenet_proj/lenet_support.cpp:68]   --->   Operation 217 'getelementptr' 'gmem_addr_4' <Predicate = (!icmp_ln55)> <Delay = 0.00>

State 23 <SV = 22> <Delay = 9.19>
ST_23 : Operation 218 [1/1] (0.00ns)   --->   "%bitcast_ln66 = bitcast i32 %max1" [lenet_proj/lenet_support.cpp:66]   --->   Operation 218 'bitcast' 'bitcast_ln66' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_23 : Operation 219 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln66, i32, i32" [lenet_proj/lenet_support.cpp:66]   --->   Operation 219 'partselect' 'tmp_7' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_23 : Operation 220 [1/1] (0.00ns)   --->   "%trunc_ln66 = trunc i32 %bitcast_ln66" [lenet_proj/lenet_support.cpp:66]   --->   Operation 220 'trunc' 'trunc_ln66' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_23 : Operation 221 [1/1] (0.00ns)   --->   "%bitcast_ln66_1 = bitcast i32 %max2" [lenet_proj/lenet_support.cpp:66]   --->   Operation 221 'bitcast' 'bitcast_ln66_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_23 : Operation 222 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln66_1, i32, i32" [lenet_proj/lenet_support.cpp:66]   --->   Operation 222 'partselect' 'tmp_8' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_23 : Operation 223 [1/1] (0.00ns)   --->   "%trunc_ln66_1 = trunc i32 %bitcast_ln66_1" [lenet_proj/lenet_support.cpp:66]   --->   Operation 223 'trunc' 'trunc_ln66_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_23 : Operation 224 [1/1] (1.55ns)   --->   "%icmp_ln66 = icmp_ne  i8 %tmp_7, i8" [lenet_proj/lenet_support.cpp:66]   --->   Operation 224 'icmp' 'icmp_ln66' <Predicate = (!icmp_ln55)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 225 [1/1] (2.44ns)   --->   "%icmp_ln66_1 = icmp_eq  i23 %trunc_ln66, i23" [lenet_proj/lenet_support.cpp:66]   --->   Operation 225 'icmp' 'icmp_ln66_1' <Predicate = (!icmp_ln55)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_1)   --->   "%or_ln66 = or i1 %icmp_ln66_1, i1 %icmp_ln66" [lenet_proj/lenet_support.cpp:66]   --->   Operation 226 'or' 'or_ln66' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 227 [1/1] (1.55ns)   --->   "%icmp_ln66_2 = icmp_ne  i8 %tmp_8, i8" [lenet_proj/lenet_support.cpp:66]   --->   Operation 227 'icmp' 'icmp_ln66_2' <Predicate = (!icmp_ln55)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 228 [1/1] (2.44ns)   --->   "%icmp_ln66_3 = icmp_eq  i23 %trunc_ln66_1, i23" [lenet_proj/lenet_support.cpp:66]   --->   Operation 228 'icmp' 'icmp_ln66_3' <Predicate = (!icmp_ln55)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_1)   --->   "%or_ln66_1 = or i1 %icmp_ln66_3, i1 %icmp_ln66_2" [lenet_proj/lenet_support.cpp:66]   --->   Operation 229 'or' 'or_ln66_1' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 230 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_1)   --->   "%and_ln66 = and i1 %or_ln66, i1 %or_ln66_1" [lenet_proj/lenet_support.cpp:66]   --->   Operation 230 'and' 'and_ln66' <Predicate = (!icmp_ln55)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 231 [1/2] (5.43ns)   --->   "%tmp_9 = fcmp_ogt  i32 %max1, i32 %max2" [lenet_proj/lenet_support.cpp:66]   --->   Operation 231 'fcmp' 'tmp_9' <Predicate = (!icmp_ln55)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 232 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln66_1 = and i1 %and_ln66, i1 %tmp_9" [lenet_proj/lenet_support.cpp:66]   --->   Operation 232 'and' 'and_ln66_1' <Predicate = (!icmp_ln55)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 233 [1/1] (0.69ns) (out node of the LUT)   --->   "%max_final = select i1 %and_ln66_1, i32 %max1, i32 %max2" [lenet_proj/lenet_support.cpp:66]   --->   Operation 233 'select' 'max_final' <Predicate = (!icmp_ln55)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 234 [1/1] (9.19ns)   --->   "%gmem_addr_4_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P, i32 %gmem_addr_4, i32" [lenet_proj/lenet_support.cpp:68]   --->   Operation 234 'writereq' 'gmem_addr_4_req' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 9.19>
ST_24 : Operation 235 [1/1] (0.00ns)   --->   "%bitcast_ln68 = bitcast i32 %max_final" [lenet_proj/lenet_support.cpp:68]   --->   Operation 235 'bitcast' 'bitcast_ln68' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_24 : Operation 236 [1/1] (9.19ns)   --->   "%write_ln68 = write void @_ssdm_op_Write.m_axi.i32P, i32 %gmem_addr_4, i32 %bitcast_ln68, i4, i1 %gmem_addr_4_req, i1 %gmem_load_3_req, i1 %gmem_load_2_req, i1 %gmem_load_1_req, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:68]   --->   Operation 236 'write' 'write_ln68' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 9.19>
ST_25 : Operation 237 [5/5] (9.19ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_4, void %write_ln68" [lenet_proj/lenet_support.cpp:68]   --->   Operation 237 'writeresp' 'gmem_addr_4_resp' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 9.19>
ST_26 : Operation 238 [4/5] (9.19ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_4, void %write_ln68" [lenet_proj/lenet_support.cpp:68]   --->   Operation 238 'writeresp' 'gmem_addr_4_resp' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 9.19>
ST_27 : Operation 239 [3/5] (9.19ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_4, void %write_ln68" [lenet_proj/lenet_support.cpp:68]   --->   Operation 239 'writeresp' 'gmem_addr_4_resp' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 9.19>
ST_28 : Operation 240 [2/5] (9.19ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_4, void %write_ln68" [lenet_proj/lenet_support.cpp:68]   --->   Operation 240 'writeresp' 'gmem_addr_4_resp' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 9.19>
ST_29 : Operation 241 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_55_1_VITIS_LOOP_56_2_VITIS_LOOP_57_3_str"   --->   Operation 241 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_29 : Operation 242 [1/1] (0.00ns)   --->   "%empty_41 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64, i64, i64"   --->   Operation 242 'speclooptripcount' 'empty_41' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_29 : Operation 243 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_56_2_VITIS_LOOP_57_3_str"   --->   Operation 243 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_29 : Operation 244 [1/1] (0.00ns)   --->   "%specpipeline_ln57 = specpipeline void @_ssdm_op_SpecPipeline, i32, i32, i32, i32, void @empty_24" [lenet_proj/lenet_support.cpp:57]   --->   Operation 244 'specpipeline' 'specpipeline_ln57' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_29 : Operation 245 [1/1] (0.00ns)   --->   "%specloopname_ln57 = specloopname void @_ssdm_op_SpecLoopName, void @empty_20" [lenet_proj/lenet_support.cpp:57]   --->   Operation 245 'specloopname' 'specloopname_ln57' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_29 : Operation 246 [1/5] (9.19ns)   --->   "%gmem_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_4, void %write_ln68" [lenet_proj/lenet_support.cpp:68]   --->   Operation 246 'writeresp' 'gmem_addr_4_resp' <Predicate = (!icmp_ln55)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 247 [1/1] (0.00ns)   --->   "%br_ln0 = br void %bb"   --->   Operation 247 'br' 'br_ln0' <Predicate = (!icmp_ln55)> <Delay = 0.00>

State 30 <SV = 18> <Delay = 0.00>
ST_30 : Operation 248 [1/1] (0.00ns)   --->   "%ret_ln72 = ret" [lenet_proj/lenet_support.cpp:72]   --->   Operation 248 'ret' 'ret_ln72' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 12.6ns, clock uncertainty: 3.4ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten44', lenet_proj/lenet_support.cpp:55) with incoming values : ('add_ln55_2', lenet_proj/lenet_support.cpp:55) [9]  (1.77 ns)

 <State 2>: 3.74ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', lenet_proj/lenet_support.cpp:56) with incoming values : ('select_ln56_5', lenet_proj/lenet_support.cpp:56) [11]  (0 ns)
	'icmp' operation ('icmp_ln56', lenet_proj/lenet_support.cpp:56) [36]  (1.55 ns)
	'or' operation ('or_ln55', lenet_proj/lenet_support.cpp:55) [51]  (0.978 ns)
	'select' operation ('select_ln56', lenet_proj/lenet_support.cpp:56) [55]  (1.22 ns)

 <State 3>: 5.14ns
The critical path consists of the following:
	'select' operation ('select_ln55', lenet_proj/lenet_support.cpp:55) [37]  (1.22 ns)
	'add' operation ('add_ln56', lenet_proj/lenet_support.cpp:56) [53]  (1.78 ns)
	'mul' operation of DSP[61] ('mul_ln59_1', lenet_proj/lenet_support.cpp:59) [61]  (2.15 ns)

 <State 4>: 2.15ns
The critical path consists of the following:
	'mul' operation of DSP[22] ('mul_ln59', lenet_proj/lenet_support.cpp:59) [22]  (2.15 ns)

 <State 5>: 2.15ns
The critical path consists of the following:
	'mul' operation of DSP[25] ('mul_ln61', lenet_proj/lenet_support.cpp:61) [25]  (2.15 ns)

 <State 6>: 6.65ns
The critical path consists of the following:
	'phi' operation ('c', lenet_proj/lenet_support.cpp:55) with incoming values : ('select_ln55_7', lenet_proj/lenet_support.cpp:55) [10]  (0 ns)
	'add' operation ('add_ln55', lenet_proj/lenet_support.cpp:55) [33]  (1.65 ns)
	'add' operation ('add_ln59_3', lenet_proj/lenet_support.cpp:59) [41]  (3.52 ns)
	'select' operation ('select_ln55_2', lenet_proj/lenet_support.cpp:55) [42]  (1.48 ns)

 <State 7>: 8.52ns
The critical path consists of the following:
	'add' operation ('add_ln59_1', lenet_proj/lenet_support.cpp:59) [24]  (3.52 ns)
	'select' operation ('select_ln55_4', lenet_proj/lenet_support.cpp:55) [46]  (0 ns)
	'select' operation ('select_ln56_1', lenet_proj/lenet_support.cpp:56) [64]  (1.48 ns)
	'add' operation ('add_ln59_2', lenet_proj/lenet_support.cpp:59) [81]  (3.52 ns)

 <State 8>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:59) [85]  (9.2 ns)

 <State 9>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:59) [85]  (9.2 ns)

 <State 10>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:59) [85]  (9.2 ns)

 <State 11>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:59) [85]  (9.2 ns)

 <State 12>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:59) [85]  (9.2 ns)

 <State 13>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:59) [85]  (9.2 ns)

 <State 14>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:59) [85]  (9.2 ns)

 <State 15>: 9.2ns
The critical path consists of the following:
	bus read on port 'gmem' (lenet_proj/lenet_support.cpp:59) [86]  (9.2 ns)

 <State 16>: 9.2ns
The critical path consists of the following:
	bus read on port 'gmem' (lenet_proj/lenet_support.cpp:60) [100]  (9.2 ns)

 <State 17>: 9.2ns
The critical path consists of the following:
	bus read on port 'gmem' (lenet_proj/lenet_support.cpp:61) [107]  (9.2 ns)

 <State 18>: 9.2ns
The critical path consists of the following:
	bus read on port 'gmem' (lenet_proj/lenet_support.cpp:62) [114]  (9.2 ns)

 <State 19>: 6.2ns
The critical path consists of the following:
	'mul' operation ('mul_ln68_1', lenet_proj/lenet_support.cpp:68) [69]  (4.52 ns)
	'select' operation ('select_ln56_3', lenet_proj/lenet_support.cpp:56) [70]  (0 ns)
	'add' operation ('add_ln68', lenet_proj/lenet_support.cpp:68) [166]  (1.68 ns)

 <State 20>: 7.11ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', lenet_proj/lenet_support.cpp:65) [141]  (5.43 ns)
	'and' operation ('and_ln65_1', lenet_proj/lenet_support.cpp:65) [142]  (0.978 ns)
	'select' operation ('max2', lenet_proj/lenet_support.cpp:65) [143]  (0.698 ns)

 <State 21>: 0ns
The critical path consists of the following:

 <State 22>: 5.43ns
The critical path consists of the following:
	'fcmp' operation ('tmp_9', lenet_proj/lenet_support.cpp:66) [157]  (5.43 ns)

 <State 23>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:68) [173]  (9.2 ns)

 <State 24>: 9.2ns
The critical path consists of the following:
	bus write on port 'gmem' (lenet_proj/lenet_support.cpp:68) [174]  (9.2 ns)

 <State 25>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:68) [175]  (9.2 ns)

 <State 26>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:68) [175]  (9.2 ns)

 <State 27>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:68) [175]  (9.2 ns)

 <State 28>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:68) [175]  (9.2 ns)

 <State 29>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:68) [175]  (9.2 ns)

 <State 30>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
