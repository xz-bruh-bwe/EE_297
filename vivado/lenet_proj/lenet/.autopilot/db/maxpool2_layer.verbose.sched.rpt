

================================================================
== Vitis HLS Report for 'maxpool2_layer'
================================================================
* Date:           Mon Apr  7 00:42:51 2025

* Version:        2020.1 (Build 2902540 on Wed May 27 20:16:15 MDT 2020)
* Project:        lenet_proj
* Solution:       lenet (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 12.60 ns | 9.198 ns |   3.40 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1622|     1622| 20.437 us | 20.437 us |  1622|  1622|   none  |
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                      |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                       Loop Name                      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_112_1_VITIS_LOOP_113_2_VITIS_LOOP_114_3  |     1620|     1620|        25|          4|          1|   400|    yes   |
        +------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 25


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 27
* Pipeline : 1
  Pipeline-0 : II = 4, D = 25, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 27 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 2 
27 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32, i32, void @empty_21, i32, i32, void @empty_21, void @empty_21, void @empty_21, i32, i32, i32, i32, void @empty_21, void @empty_21"   --->   Operation 28 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%output_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %output_r" [lenet_proj/lenet_support.cpp:107]   --->   Operation 29 'read' 'output_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%input_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %input_r" [lenet_proj/lenet_support.cpp:107]   --->   Operation 30 'read' 'input_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.76ns)   --->   "%br_ln112 = br void %bb" [lenet_proj/lenet_support.cpp:112]   --->   Operation 31 'br' 'br_ln112' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.30>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%indvar_flatten59 = phi i9, void, i9 %add_ln112_1, void %.split3" [lenet_proj/lenet_support.cpp:112]   --->   Operation 32 'phi' 'indvar_flatten59' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%c = phi i5, void, i5 %select_ln112_7, void %.split3" [lenet_proj/lenet_support.cpp:112]   --->   Operation 33 'phi' 'c' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i6, void, i6 %select_ln113_5, void %.split3" [lenet_proj/lenet_support.cpp:113]   --->   Operation 34 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%i = phi i4, void, i4 %select_ln113_4, void %.split3" [lenet_proj/lenet_support.cpp:113]   --->   Operation 35 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln116 = trunc i5 %c" [lenet_proj/lenet_support.cpp:116]   --->   Operation 36 'trunc' 'trunc_ln116' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i2, i4 %trunc_ln116, i2" [lenet_proj/lenet_support.cpp:116]   --->   Operation 37 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln116 = zext i6 %shl_ln" [lenet_proj/lenet_support.cpp:116]   --->   Operation 38 'zext' 'zext_ln116' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (3.52ns)   --->   "%add_ln116 = add i64 %input_read, i64 %zext_ln116" [lenet_proj/lenet_support.cpp:116]   --->   Operation 39 'add' 'add_ln116' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.66ns)   --->   "%icmp_ln112 = icmp_eq  i9 %indvar_flatten59, i9" [lenet_proj/lenet_support.cpp:112]   --->   Operation 40 'icmp' 'icmp_ln112' <Predicate = true> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln112 = br i1 %icmp_ln112, void %.split3, void" [lenet_proj/lenet_support.cpp:112]   --->   Operation 41 'br' 'br_ln112' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.78ns)   --->   "%add_ln112 = add i5, i5 %c" [lenet_proj/lenet_support.cpp:112]   --->   Operation 42 'add' 'add_ln112' <Predicate = (!icmp_ln112)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.42ns)   --->   "%icmp_ln113 = icmp_eq  i6 %indvar_flatten, i6" [lenet_proj/lenet_support.cpp:113]   --->   Operation 43 'icmp' 'icmp_ln113' <Predicate = (!icmp_ln112)> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (1.02ns)   --->   "%select_ln112 = select i1 %icmp_ln113, i4, i4 %i" [lenet_proj/lenet_support.cpp:112]   --->   Operation 44 'select' 'select_ln112' <Predicate = (!icmp_ln112)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln116_1 = trunc i5 %add_ln112" [lenet_proj/lenet_support.cpp:116]   --->   Operation 45 'trunc' 'trunc_ln116_1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%shl_ln116_mid1 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i2, i4 %trunc_ln116_1, i2" [lenet_proj/lenet_support.cpp:116]   --->   Operation 46 'bitconcatenate' 'shl_ln116_mid1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (1.18ns)   --->   "%select_ln112_2 = select i1 %icmp_ln113, i6 %shl_ln116_mid1, i6 %shl_ln" [lenet_proj/lenet_support.cpp:112]   --->   Operation 47 'select' 'select_ln112_2' <Predicate = (!icmp_ln112)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln116_3 = zext i6 %shl_ln116_mid1" [lenet_proj/lenet_support.cpp:116]   --->   Operation 48 'zext' 'zext_ln116_3' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (3.52ns)   --->   "%add_ln116_4 = add i64 %input_read, i64 %zext_ln116_3" [lenet_proj/lenet_support.cpp:116]   --->   Operation 49 'add' 'add_ln116_4' <Predicate = (!icmp_ln112)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (1.21ns)   --->   "%select_ln112_7 = select i1 %icmp_ln113, i5 %add_ln112, i5 %c" [lenet_proj/lenet_support.cpp:112]   --->   Operation 50 'select' 'select_ln112_7' <Predicate = (!icmp_ln112)> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.82ns)   --->   "%add_ln113_1 = add i6, i6 %indvar_flatten" [lenet_proj/lenet_support.cpp:113]   --->   Operation 51 'add' 'add_ln113_1' <Predicate = (!icmp_ln112)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.52>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%j = phi i4, void, i4 %add_ln114, void %.split3" [lenet_proj/lenet_support.cpp:114]   --->   Operation 52 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%empty = or i4 %i, i4" [lenet_proj/lenet_support.cpp:113]   --->   Operation 53 'or' 'empty' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%shl_ln116_2 = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i4.i9, i4 %i, i9" [lenet_proj/lenet_support.cpp:116]   --->   Operation 54 'bitconcatenate' 'shl_ln116_2' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln116_1 = zext i13 %shl_ln116_2" [lenet_proj/lenet_support.cpp:116]   --->   Operation 55 'zext' 'zext_ln116_1' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%shl_ln116_3 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i4.i7, i4 %i, i7" [lenet_proj/lenet_support.cpp:116]   --->   Operation 56 'bitconcatenate' 'shl_ln116_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln116_2 = zext i11 %shl_ln116_3" [lenet_proj/lenet_support.cpp:116]   --->   Operation 57 'zext' 'zext_ln116_2' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln116_3 = add i64 %zext_ln116_2, i64 %add_ln116" [lenet_proj/lenet_support.cpp:116]   --->   Operation 58 'add' 'add_ln116_3' <Predicate = (!icmp_ln113)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 59 [1/1] (5.30ns) (root node of TernaryAdder)   --->   "%add_ln116_1 = add i64 %add_ln116_3, i64 %zext_ln116_1" [lenet_proj/lenet_support.cpp:116]   --->   Operation 59 'add' 'add_ln116_1' <Predicate = (!icmp_ln113)> <Delay = 5.30> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%shl_ln3 = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i4.i9, i4 %empty, i9" [lenet_proj/lenet_support.cpp:118]   --->   Operation 60 'bitconcatenate' 'shl_ln3' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln118 = zext i13 %shl_ln3" [lenet_proj/lenet_support.cpp:118]   --->   Operation 61 'zext' 'zext_ln118' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%shl_ln118_1 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i4.i7, i4 %empty, i7" [lenet_proj/lenet_support.cpp:118]   --->   Operation 62 'bitconcatenate' 'shl_ln118_1' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln118_1 = zext i11 %shl_ln118_1" [lenet_proj/lenet_support.cpp:118]   --->   Operation 63 'zext' 'zext_ln118_1' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118 = add i64 %zext_ln118_1, i64 %add_ln116" [lenet_proj/lenet_support.cpp:118]   --->   Operation 64 'add' 'add_ln118' <Predicate = (!icmp_ln113)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 65 [1/1] (5.30ns) (root node of TernaryAdder)   --->   "%add_ln118_1 = add i64 %add_ln118, i64 %zext_ln118" [lenet_proj/lenet_support.cpp:118]   --->   Operation 65 'add' 'add_ln118_1' <Predicate = (!icmp_ln113)> <Delay = 5.30> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%shl_ln4 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i4.i5, i4 %i, i5" [lenet_proj/lenet_support.cpp:125]   --->   Operation 66 'bitconcatenate' 'shl_ln4' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln114 = zext i9 %shl_ln4" [lenet_proj/lenet_support.cpp:114]   --->   Operation 67 'zext' 'zext_ln114' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (1.63ns)   --->   "%add_ln125 = add i11 %zext_ln114, i11 %shl_ln116_3" [lenet_proj/lenet_support.cpp:125]   --->   Operation 68 'add' 'add_ln125' <Predicate = (!icmp_ln113)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (1.82ns)   --->   "%add_ln112_1 = add i9, i9 %indvar_flatten59" [lenet_proj/lenet_support.cpp:112]   --->   Operation 69 'add' 'add_ln112_1' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln113)   --->   "%select_ln112_1 = select i1 %icmp_ln113, i4, i4 %j" [lenet_proj/lenet_support.cpp:112]   --->   Operation 70 'select' 'select_ln112_1' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (1.48ns)   --->   "%select_ln112_3 = select i1 %icmp_ln113, i64 %add_ln116_4, i64 %add_ln116" [lenet_proj/lenet_support.cpp:112]   --->   Operation 71 'select' 'select_ln112_3' <Predicate = (!icmp_ln112)> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln113_1)   --->   "%select_ln112_4 = select i1 %icmp_ln113, i64 %add_ln116_4, i64 %add_ln116_1" [lenet_proj/lenet_support.cpp:112]   --->   Operation 72 'select' 'select_ln112_4' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (3.52ns)   --->   "%add_ln118_3 = add i64, i64 %add_ln116_4" [lenet_proj/lenet_support.cpp:118]   --->   Operation 73 'add' 'add_ln118_3' <Predicate = (!icmp_ln112 & icmp_ln113)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node select_ln113_2)   --->   "%select_ln112_5 = select i1 %icmp_ln113, i64 %add_ln118_3, i64 %add_ln118_1" [lenet_proj/lenet_support.cpp:112]   --->   Operation 74 'select' 'select_ln112_5' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node select_ln113_3)   --->   "%select_ln112_6 = select i1 %icmp_ln113, i11, i11 %add_ln125" [lenet_proj/lenet_support.cpp:112]   --->   Operation 75 'select' 'select_ln112_6' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (1.30ns)   --->   "%icmp_ln114 = icmp_ult  i4 %j, i4" [lenet_proj/lenet_support.cpp:114]   --->   Operation 76 'icmp' 'icmp_ln114' <Predicate = (!icmp_ln112)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.97ns)   --->   "%or_ln112 = or i1 %icmp_ln113, i1 %icmp_ln114" [lenet_proj/lenet_support.cpp:112]   --->   Operation 77 'or' 'or_ln112' <Predicate = (!icmp_ln112)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (1.73ns)   --->   "%add_ln113 = add i4, i4 %select_ln112" [lenet_proj/lenet_support.cpp:113]   --->   Operation 78 'add' 'add_ln113' <Predicate = (!icmp_ln112)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln113 = select i1 %or_ln112, i4 %select_ln112_1, i4" [lenet_proj/lenet_support.cpp:113]   --->   Operation 79 'select' 'select_ln113' <Predicate = (!icmp_ln112)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%p_mid1 = or i4 %add_ln113, i4" [lenet_proj/lenet_support.cpp:113]   --->   Operation 80 'or' 'p_mid1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%shl_ln116_2_mid1 = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i4.i9, i4 %add_ln113, i9" [lenet_proj/lenet_support.cpp:116]   --->   Operation 81 'bitconcatenate' 'shl_ln116_2_mid1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln116_4 = zext i13 %shl_ln116_2_mid1" [lenet_proj/lenet_support.cpp:116]   --->   Operation 82 'zext' 'zext_ln116_4' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%shl_ln116_3_mid1 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i4.i7, i4 %add_ln113, i7" [lenet_proj/lenet_support.cpp:116]   --->   Operation 83 'bitconcatenate' 'shl_ln116_3_mid1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln116_6 = zext i11 %shl_ln116_3_mid1" [lenet_proj/lenet_support.cpp:116]   --->   Operation 84 'zext' 'zext_ln116_6' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln116_5 = add i64 %zext_ln116_6, i64 %select_ln112_3" [lenet_proj/lenet_support.cpp:116]   --->   Operation 85 'add' 'add_ln116_5' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 86 [1/1] (5.30ns) (root node of TernaryAdder)   --->   "%add_ln116_6 = add i64 %add_ln116_5, i64 %zext_ln116_4" [lenet_proj/lenet_support.cpp:116]   --->   Operation 86 'add' 'add_ln116_6' <Predicate = (!icmp_ln112)> <Delay = 5.30> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 87 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln113_1 = select i1 %or_ln112, i64 %select_ln112_4, i64 %add_ln116_6" [lenet_proj/lenet_support.cpp:113]   --->   Operation 87 'select' 'select_ln113_1' <Predicate = (!icmp_ln112)> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%shl_ln118_mid1 = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i4.i9, i4 %p_mid1, i9" [lenet_proj/lenet_support.cpp:118]   --->   Operation 88 'bitconcatenate' 'shl_ln118_mid1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln118_2 = zext i13 %shl_ln118_mid1" [lenet_proj/lenet_support.cpp:118]   --->   Operation 89 'zext' 'zext_ln118_2' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%shl_ln118_1_mid1 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i4.i7, i4 %p_mid1, i7" [lenet_proj/lenet_support.cpp:118]   --->   Operation 90 'bitconcatenate' 'shl_ln118_1_mid1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln118_3 = zext i11 %shl_ln118_1_mid1" [lenet_proj/lenet_support.cpp:118]   --->   Operation 91 'zext' 'zext_ln118_3' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln118_4 = add i64 %zext_ln118_3, i64 %select_ln112_3" [lenet_proj/lenet_support.cpp:118]   --->   Operation 92 'add' 'add_ln118_4' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 93 [1/1] (5.30ns) (root node of TernaryAdder)   --->   "%add_ln118_5 = add i64 %add_ln118_4, i64 %zext_ln118_2" [lenet_proj/lenet_support.cpp:118]   --->   Operation 93 'add' 'add_ln118_5' <Predicate = (!icmp_ln112)> <Delay = 5.30> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_3 : Operation 94 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln113_2 = select i1 %or_ln112, i64 %select_ln112_5, i64 %add_ln118_5" [lenet_proj/lenet_support.cpp:113]   --->   Operation 94 'select' 'select_ln113_2' <Predicate = (!icmp_ln112)> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%shl_ln125_mid1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i4.i5, i4 %add_ln113, i5" [lenet_proj/lenet_support.cpp:125]   --->   Operation 95 'bitconcatenate' 'shl_ln125_mid1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln114_1 = zext i9 %shl_ln125_mid1" [lenet_proj/lenet_support.cpp:114]   --->   Operation 96 'zext' 'zext_ln114_1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (1.63ns)   --->   "%add_ln125_3 = add i11 %zext_ln114_1, i11 %shl_ln116_3_mid1" [lenet_proj/lenet_support.cpp:125]   --->   Operation 97 'add' 'add_ln125_3' <Predicate = (!icmp_ln112)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln113_3 = select i1 %or_ln112, i11 %select_ln112_6, i11 %add_ln125_3" [lenet_proj/lenet_support.cpp:113]   --->   Operation 98 'select' 'select_ln113_3' <Predicate = (!icmp_ln112)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (1.02ns)   --->   "%select_ln113_4 = select i1 %or_ln112, i4 %select_ln112, i4 %add_ln113" [lenet_proj/lenet_support.cpp:113]   --->   Operation 99 'select' 'select_ln113_4' <Predicate = (!icmp_ln112)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %select_ln113, i32, i32" [lenet_proj/lenet_support.cpp:125]   --->   Operation 100 'partselect' 'tmp_1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (1.18ns)   --->   "%select_ln113_5 = select i1 %icmp_ln113, i6, i6 %add_ln113_1" [lenet_proj/lenet_support.cpp:113]   --->   Operation 101 'select' 'select_ln113_5' <Predicate = (!icmp_ln112)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.52>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%shl_ln116_1 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i4.i6, i4 %select_ln113, i6" [lenet_proj/lenet_support.cpp:116]   --->   Operation 102 'bitconcatenate' 'shl_ln116_1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln116_5 = zext i10 %shl_ln116_1" [lenet_proj/lenet_support.cpp:116]   --->   Operation 103 'zext' 'zext_ln116_5' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (3.52ns)   --->   "%add_ln116_2 = add i64 %zext_ln116_5, i64 %select_ln113_1" [lenet_proj/lenet_support.cpp:116]   --->   Operation 104 'add' 'add_ln116_2' <Predicate = (!icmp_ln112)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln116_2, i32, i32" [lenet_proj/lenet_support.cpp:116]   --->   Operation 105 'partselect' 'trunc_ln' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%sext_ln116 = sext i62 %trunc_ln" [lenet_proj/lenet_support.cpp:116]   --->   Operation 106 'sext' 'sext_ln116' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln116" [lenet_proj/lenet_support.cpp:116]   --->   Operation 107 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%or_ln117 = or i10 %shl_ln116_1, i10" [lenet_proj/lenet_support.cpp:117]   --->   Operation 108 'or' 'or_ln117' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln117 = zext i10 %or_ln117" [lenet_proj/lenet_support.cpp:117]   --->   Operation 109 'zext' 'zext_ln117' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (3.52ns)   --->   "%add_ln117 = add i64 %zext_ln117, i64 %select_ln113_1" [lenet_proj/lenet_support.cpp:117]   --->   Operation 110 'add' 'add_ln117' <Predicate = (!icmp_ln112)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%trunc_ln8 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln117, i32, i32" [lenet_proj/lenet_support.cpp:117]   --->   Operation 111 'partselect' 'trunc_ln8' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%sext_ln117 = sext i62 %trunc_ln8" [lenet_proj/lenet_support.cpp:117]   --->   Operation 112 'sext' 'sext_ln117' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%gmem_addr_5 = getelementptr i32 %gmem, i64 %sext_ln117" [lenet_proj/lenet_support.cpp:117]   --->   Operation 113 'getelementptr' 'gmem_addr_5' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (3.52ns)   --->   "%add_ln118_2 = add i64 %zext_ln116_5, i64 %select_ln113_2" [lenet_proj/lenet_support.cpp:118]   --->   Operation 114 'add' 'add_ln118_2' <Predicate = (!icmp_ln112)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%trunc_ln9 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln118_2, i32, i32" [lenet_proj/lenet_support.cpp:118]   --->   Operation 115 'partselect' 'trunc_ln9' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%sext_ln118 = sext i62 %trunc_ln9" [lenet_proj/lenet_support.cpp:118]   --->   Operation 116 'sext' 'sext_ln118' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%gmem_addr_6 = getelementptr i32 %gmem, i64 %sext_ln118" [lenet_proj/lenet_support.cpp:118]   --->   Operation 117 'getelementptr' 'gmem_addr_6' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (3.52ns)   --->   "%add_ln119 = add i64 %zext_ln117, i64 %select_ln113_2" [lenet_proj/lenet_support.cpp:119]   --->   Operation 118 'add' 'add_ln119' <Predicate = (!icmp_ln112)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln119, i32, i32" [lenet_proj/lenet_support.cpp:119]   --->   Operation 119 'partselect' 'trunc_ln1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%sext_ln119 = sext i62 %trunc_ln1" [lenet_proj/lenet_support.cpp:119]   --->   Operation 120 'sext' 'sext_ln119' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "%gmem_addr_7 = getelementptr i32 %gmem, i64 %sext_ln119" [lenet_proj/lenet_support.cpp:119]   --->   Operation 121 'getelementptr' 'gmem_addr_7' <Predicate = (!icmp_ln112)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 9.19>
ST_5 : Operation 122 [7/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:116]   --->   Operation 122 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 9.19>
ST_6 : Operation 123 [6/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:116]   --->   Operation 123 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 124 [7/7] (9.19ns)   --->   "%gmem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_5, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:117]   --->   Operation 124 'readreq' 'gmem_load_4_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 125 [1/1] (1.73ns)   --->   "%add_ln114 = add i4, i4 %select_ln113" [lenet_proj/lenet_support.cpp:114]   --->   Operation 125 'add' 'add_ln114' <Predicate = (!icmp_ln112)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 9.19>
ST_7 : Operation 126 [5/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:116]   --->   Operation 126 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 127 [6/7] (9.19ns)   --->   "%gmem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_5, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:117]   --->   Operation 127 'readreq' 'gmem_load_4_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 128 [7/7] (9.19ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_6, i32, i1 %gmem_load_4_req" [lenet_proj/lenet_support.cpp:118]   --->   Operation 128 'readreq' 'gmem_load_5_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 9.19>
ST_8 : Operation 129 [4/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:116]   --->   Operation 129 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 130 [5/7] (9.19ns)   --->   "%gmem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_5, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:117]   --->   Operation 130 'readreq' 'gmem_load_4_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 131 [6/7] (9.19ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_6, i32, i1 %gmem_load_4_req" [lenet_proj/lenet_support.cpp:118]   --->   Operation 131 'readreq' 'gmem_load_5_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 132 [7/7] (9.19ns)   --->   "%gmem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_7, i32, i1 %gmem_load_5_req" [lenet_proj/lenet_support.cpp:119]   --->   Operation 132 'readreq' 'gmem_load_6_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 9.19>
ST_9 : Operation 133 [3/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:116]   --->   Operation 133 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 134 [4/7] (9.19ns)   --->   "%gmem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_5, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:117]   --->   Operation 134 'readreq' 'gmem_load_4_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 135 [5/7] (9.19ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_6, i32, i1 %gmem_load_4_req" [lenet_proj/lenet_support.cpp:118]   --->   Operation 135 'readreq' 'gmem_load_5_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 136 [6/7] (9.19ns)   --->   "%gmem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_7, i32, i1 %gmem_load_5_req" [lenet_proj/lenet_support.cpp:119]   --->   Operation 136 'readreq' 'gmem_load_6_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 9.19>
ST_10 : Operation 137 [2/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:116]   --->   Operation 137 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 138 [3/7] (9.19ns)   --->   "%gmem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_5, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:117]   --->   Operation 138 'readreq' 'gmem_load_4_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 139 [4/7] (9.19ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_6, i32, i1 %gmem_load_4_req" [lenet_proj/lenet_support.cpp:118]   --->   Operation 139 'readreq' 'gmem_load_5_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 140 [5/7] (9.19ns)   --->   "%gmem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_7, i32, i1 %gmem_load_5_req" [lenet_proj/lenet_support.cpp:119]   --->   Operation 140 'readreq' 'gmem_load_6_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 9.19>
ST_11 : Operation 141 [1/7] (9.19ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr, i32" [lenet_proj/lenet_support.cpp:116]   --->   Operation 141 'readreq' 'gmem_load_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 142 [2/7] (9.19ns)   --->   "%gmem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_5, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:117]   --->   Operation 142 'readreq' 'gmem_load_4_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 143 [3/7] (9.19ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_6, i32, i1 %gmem_load_4_req" [lenet_proj/lenet_support.cpp:118]   --->   Operation 143 'readreq' 'gmem_load_5_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 144 [4/7] (9.19ns)   --->   "%gmem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_7, i32, i1 %gmem_load_5_req" [lenet_proj/lenet_support.cpp:119]   --->   Operation 144 'readreq' 'gmem_load_6_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 9.19>
ST_12 : Operation 145 [1/1] (9.19ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P, i32 %gmem_addr, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:116]   --->   Operation 145 'read' 'gmem_addr_read' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 146 [1/7] (9.19ns)   --->   "%gmem_load_4_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_5, i32, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:117]   --->   Operation 146 'readreq' 'gmem_load_4_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 147 [2/7] (9.19ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_6, i32, i1 %gmem_load_4_req" [lenet_proj/lenet_support.cpp:118]   --->   Operation 147 'readreq' 'gmem_load_5_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 148 [3/7] (9.19ns)   --->   "%gmem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_7, i32, i1 %gmem_load_5_req" [lenet_proj/lenet_support.cpp:119]   --->   Operation 148 'readreq' 'gmem_load_6_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 149 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %gmem_addr_read, i32, i32" [lenet_proj/lenet_support.cpp:121]   --->   Operation 149 'partselect' 'tmp' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_12 : Operation 150 [1/1] (0.00ns)   --->   "%trunc_ln121 = trunc i32 %gmem_addr_read" [lenet_proj/lenet_support.cpp:121]   --->   Operation 150 'trunc' 'trunc_ln121' <Predicate = (!icmp_ln112)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 9.19>
ST_13 : Operation 151 [1/1] (9.19ns)   --->   "%gmem_addr_5_read = read i32 @_ssdm_op_Read.m_axi.i32P, i32 %gmem_addr_5, i1 %gmem_load_4_req, i32 %gmem_addr_read" [lenet_proj/lenet_support.cpp:117]   --->   Operation 151 'read' 'gmem_addr_5_read' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 152 [1/1] (0.00ns)   --->   "%v1 = bitcast i32 %gmem_addr_5_read" [lenet_proj/lenet_support.cpp:117]   --->   Operation 152 'bitcast' 'v1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_13 : Operation 153 [1/7] (9.19ns)   --->   "%gmem_load_5_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_6, i32, i1 %gmem_load_4_req" [lenet_proj/lenet_support.cpp:118]   --->   Operation 153 'readreq' 'gmem_load_5_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 154 [2/7] (9.19ns)   --->   "%gmem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_7, i32, i1 %gmem_load_5_req" [lenet_proj/lenet_support.cpp:119]   --->   Operation 154 'readreq' 'gmem_load_6_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 155 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %gmem_addr_5_read, i32, i32" [lenet_proj/lenet_support.cpp:121]   --->   Operation 155 'partselect' 'tmp_s' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_13 : Operation 156 [1/1] (0.00ns)   --->   "%trunc_ln121_1 = trunc i32 %gmem_addr_5_read" [lenet_proj/lenet_support.cpp:121]   --->   Operation 156 'trunc' 'trunc_ln121_1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_13 : Operation 157 [1/1] (1.55ns)   --->   "%icmp_ln121 = icmp_ne  i8 %tmp, i8" [lenet_proj/lenet_support.cpp:121]   --->   Operation 157 'icmp' 'icmp_ln121' <Predicate = (!icmp_ln112)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 158 [1/1] (2.44ns)   --->   "%icmp_ln121_1 = icmp_eq  i23 %trunc_ln121, i23" [lenet_proj/lenet_support.cpp:121]   --->   Operation 158 'icmp' 'icmp_ln121_1' <Predicate = (!icmp_ln112)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 9.19>
ST_14 : Operation 159 [1/1] (0.00ns)   --->   "%v0 = bitcast i32 %gmem_addr_read" [lenet_proj/lenet_support.cpp:116]   --->   Operation 159 'bitcast' 'v0' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_14 : Operation 160 [1/1] (9.19ns)   --->   "%gmem_addr_6_read = read i32 @_ssdm_op_Read.m_axi.i32P, i32 %gmem_addr_6, i1 %gmem_load_5_req, i32 %gmem_addr_5_read" [lenet_proj/lenet_support.cpp:118]   --->   Operation 160 'read' 'gmem_addr_6_read' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 161 [1/7] (9.19ns)   --->   "%gmem_load_6_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_7, i32, i1 %gmem_load_5_req" [lenet_proj/lenet_support.cpp:119]   --->   Operation 161 'readreq' 'gmem_load_6_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 162 [1/1] (1.55ns)   --->   "%icmp_ln121_2 = icmp_ne  i8 %tmp_s, i8" [lenet_proj/lenet_support.cpp:121]   --->   Operation 162 'icmp' 'icmp_ln121_2' <Predicate = (!icmp_ln112)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 163 [1/1] (2.44ns)   --->   "%icmp_ln121_3 = icmp_eq  i23 %trunc_ln121_1, i23" [lenet_proj/lenet_support.cpp:121]   --->   Operation 163 'icmp' 'icmp_ln121_3' <Predicate = (!icmp_ln112)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 164 [2/2] (5.43ns)   --->   "%tmp_3 = fcmp_ogt  i32 %v0, i32 %v1" [lenet_proj/lenet_support.cpp:121]   --->   Operation 164 'fcmp' 'tmp_3' <Predicate = (!icmp_ln112)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %gmem_addr_6_read, i32, i32" [lenet_proj/lenet_support.cpp:122]   --->   Operation 165 'partselect' 'tmp_4' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_14 : Operation 166 [1/1] (0.00ns)   --->   "%trunc_ln122 = trunc i32 %gmem_addr_6_read" [lenet_proj/lenet_support.cpp:122]   --->   Operation 166 'trunc' 'trunc_ln122' <Predicate = (!icmp_ln112)> <Delay = 0.00>

State 15 <SV = 14> <Delay = 9.19>
ST_15 : Operation 167 [1/1] (9.19ns)   --->   "%gmem_addr_7_read = read i32 @_ssdm_op_Read.m_axi.i32P, i32 %gmem_addr_7, i1 %gmem_load_6_req, i32 %gmem_addr_6_read" [lenet_proj/lenet_support.cpp:119]   --->   Operation 167 'read' 'gmem_addr_7_read' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 168 [1/1] (0.00ns)   --->   "%v3 = bitcast i32 %gmem_addr_7_read" [lenet_proj/lenet_support.cpp:119]   --->   Operation 168 'bitcast' 'v3' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_15 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node and_ln121_1)   --->   "%or_ln121 = or i1 %icmp_ln121_1, i1 %icmp_ln121" [lenet_proj/lenet_support.cpp:121]   --->   Operation 169 'or' 'or_ln121' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node and_ln121_1)   --->   "%or_ln121_1 = or i1 %icmp_ln121_3, i1 %icmp_ln121_2" [lenet_proj/lenet_support.cpp:121]   --->   Operation 170 'or' 'or_ln121_1' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node and_ln121_1)   --->   "%and_ln121 = and i1 %or_ln121, i1 %or_ln121_1" [lenet_proj/lenet_support.cpp:121]   --->   Operation 171 'and' 'and_ln121' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 172 [1/2] (5.43ns)   --->   "%tmp_3 = fcmp_ogt  i32 %v0, i32 %v1" [lenet_proj/lenet_support.cpp:121]   --->   Operation 172 'fcmp' 'tmp_3' <Predicate = (!icmp_ln112)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 173 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln121_1 = and i1 %and_ln121, i1 %tmp_3" [lenet_proj/lenet_support.cpp:121]   --->   Operation 173 'and' 'and_ln121_1' <Predicate = (!icmp_ln112)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 174 [1/1] (0.69ns) (out node of the LUT)   --->   "%max1 = select i1 %and_ln121_1, i32 %v0, i32 %v1" [lenet_proj/lenet_support.cpp:121]   --->   Operation 174 'select' 'max1' <Predicate = (!icmp_ln112)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 175 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %gmem_addr_7_read, i32, i32" [lenet_proj/lenet_support.cpp:122]   --->   Operation 175 'partselect' 'tmp_5' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_15 : Operation 176 [1/1] (0.00ns)   --->   "%trunc_ln122_1 = trunc i32 %gmem_addr_7_read" [lenet_proj/lenet_support.cpp:122]   --->   Operation 176 'trunc' 'trunc_ln122_1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_15 : Operation 177 [1/1] (1.55ns)   --->   "%icmp_ln122 = icmp_ne  i8 %tmp_4, i8" [lenet_proj/lenet_support.cpp:122]   --->   Operation 177 'icmp' 'icmp_ln122' <Predicate = (!icmp_ln112)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 178 [1/1] (2.44ns)   --->   "%icmp_ln122_1 = icmp_eq  i23 %trunc_ln122, i23" [lenet_proj/lenet_support.cpp:122]   --->   Operation 178 'icmp' 'icmp_ln122_1' <Predicate = (!icmp_ln112)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 5.43>
ST_16 : Operation 179 [1/1] (0.00ns)   --->   "%v2 = bitcast i32 %gmem_addr_6_read" [lenet_proj/lenet_support.cpp:118]   --->   Operation 179 'bitcast' 'v2' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_16 : Operation 180 [1/1] (1.55ns)   --->   "%icmp_ln122_2 = icmp_ne  i8 %tmp_5, i8" [lenet_proj/lenet_support.cpp:122]   --->   Operation 180 'icmp' 'icmp_ln122_2' <Predicate = (!icmp_ln112)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 181 [1/1] (2.44ns)   --->   "%icmp_ln122_3 = icmp_eq  i23 %trunc_ln122_1, i23" [lenet_proj/lenet_support.cpp:122]   --->   Operation 181 'icmp' 'icmp_ln122_3' <Predicate = (!icmp_ln112)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 182 [2/2] (5.43ns)   --->   "%tmp_6 = fcmp_ogt  i32 %v2, i32 %v3" [lenet_proj/lenet_support.cpp:122]   --->   Operation 182 'fcmp' 'tmp_6' <Predicate = (!icmp_ln112)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.10>
ST_17 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node and_ln122_1)   --->   "%or_ln122 = or i1 %icmp_ln122_1, i1 %icmp_ln122" [lenet_proj/lenet_support.cpp:122]   --->   Operation 183 'or' 'or_ln122' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node and_ln122_1)   --->   "%or_ln122_1 = or i1 %icmp_ln122_3, i1 %icmp_ln122_2" [lenet_proj/lenet_support.cpp:122]   --->   Operation 184 'or' 'or_ln122_1' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node and_ln122_1)   --->   "%and_ln122 = and i1 %or_ln122, i1 %or_ln122_1" [lenet_proj/lenet_support.cpp:122]   --->   Operation 185 'and' 'and_ln122' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 186 [1/2] (5.43ns)   --->   "%tmp_6 = fcmp_ogt  i32 %v2, i32 %v3" [lenet_proj/lenet_support.cpp:122]   --->   Operation 186 'fcmp' 'tmp_6' <Predicate = (!icmp_ln112)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 187 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln122_1 = and i1 %and_ln122, i1 %tmp_6" [lenet_proj/lenet_support.cpp:122]   --->   Operation 187 'and' 'and_ln122_1' <Predicate = (!icmp_ln112)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 188 [1/1] (0.69ns) (out node of the LUT)   --->   "%max2 = select i1 %and_ln122_1, i32 %v2, i32 %v3" [lenet_proj/lenet_support.cpp:122]   --->   Operation 188 'select' 'max2' <Predicate = (!icmp_ln112)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 18 <SV = 17> <Delay = 0.00>

State 19 <SV = 18> <Delay = 5.43>
ST_19 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln113 = zext i11 %select_ln113_3" [lenet_proj/lenet_support.cpp:113]   --->   Operation 189 'zext' 'zext_ln113' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_19 : Operation 190 [2/2] (5.43ns)   --->   "%tmp_9 = fcmp_ogt  i32 %max1, i32 %max2" [lenet_proj/lenet_support.cpp:123]   --->   Operation 190 'fcmp' 'tmp_9' <Predicate = (!icmp_ln112)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 191 [1/1] (0.00ns)   --->   "%tmp4 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i3.i6, i3 %tmp_1, i6 %select_ln112_2" [lenet_proj/lenet_support.cpp:125]   --->   Operation 191 'bitconcatenate' 'tmp4' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_19 : Operation 192 [1/1] (0.00ns)   --->   "%zext_ln125 = zext i9 %tmp4" [lenet_proj/lenet_support.cpp:125]   --->   Operation 192 'zext' 'zext_ln125' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_19 : Operation 193 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln125_1 = add i64 %output_read, i64 %zext_ln125" [lenet_proj/lenet_support.cpp:125]   --->   Operation 193 'add' 'add_ln125_1' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 194 [1/1] (5.30ns) (root node of TernaryAdder)   --->   "%add_ln125_2 = add i64 %zext_ln113, i64 %add_ln125_1" [lenet_proj/lenet_support.cpp:125]   --->   Operation 194 'add' 'add_ln125_2' <Predicate = (!icmp_ln112)> <Delay = 5.30> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 195 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln125_2, i32, i32" [lenet_proj/lenet_support.cpp:125]   --->   Operation 195 'partselect' 'trunc_ln2' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_19 : Operation 196 [1/1] (0.00ns)   --->   "%sext_ln125 = sext i62 %trunc_ln2" [lenet_proj/lenet_support.cpp:125]   --->   Operation 196 'sext' 'sext_ln125' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_19 : Operation 197 [1/1] (0.00ns)   --->   "%gmem_addr_8 = getelementptr i32 %gmem, i64 %sext_ln125" [lenet_proj/lenet_support.cpp:125]   --->   Operation 197 'getelementptr' 'gmem_addr_8' <Predicate = (!icmp_ln112)> <Delay = 0.00>

State 20 <SV = 19> <Delay = 9.19>
ST_20 : Operation 198 [1/1] (0.00ns)   --->   "%bitcast_ln123 = bitcast i32 %max1" [lenet_proj/lenet_support.cpp:123]   --->   Operation 198 'bitcast' 'bitcast_ln123' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_20 : Operation 199 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln123, i32, i32" [lenet_proj/lenet_support.cpp:123]   --->   Operation 199 'partselect' 'tmp_7' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_20 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln123 = trunc i32 %bitcast_ln123" [lenet_proj/lenet_support.cpp:123]   --->   Operation 200 'trunc' 'trunc_ln123' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_20 : Operation 201 [1/1] (0.00ns)   --->   "%bitcast_ln123_1 = bitcast i32 %max2" [lenet_proj/lenet_support.cpp:123]   --->   Operation 201 'bitcast' 'bitcast_ln123_1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_20 : Operation 202 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln123_1, i32, i32" [lenet_proj/lenet_support.cpp:123]   --->   Operation 202 'partselect' 'tmp_8' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_20 : Operation 203 [1/1] (0.00ns)   --->   "%trunc_ln123_1 = trunc i32 %bitcast_ln123_1" [lenet_proj/lenet_support.cpp:123]   --->   Operation 203 'trunc' 'trunc_ln123_1' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_20 : Operation 204 [1/1] (1.55ns)   --->   "%icmp_ln123 = icmp_ne  i8 %tmp_7, i8" [lenet_proj/lenet_support.cpp:123]   --->   Operation 204 'icmp' 'icmp_ln123' <Predicate = (!icmp_ln112)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 205 [1/1] (2.44ns)   --->   "%icmp_ln123_1 = icmp_eq  i23 %trunc_ln123, i23" [lenet_proj/lenet_support.cpp:123]   --->   Operation 205 'icmp' 'icmp_ln123_1' <Predicate = (!icmp_ln112)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node and_ln123_1)   --->   "%or_ln123 = or i1 %icmp_ln123_1, i1 %icmp_ln123" [lenet_proj/lenet_support.cpp:123]   --->   Operation 206 'or' 'or_ln123' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 207 [1/1] (1.55ns)   --->   "%icmp_ln123_2 = icmp_ne  i8 %tmp_8, i8" [lenet_proj/lenet_support.cpp:123]   --->   Operation 207 'icmp' 'icmp_ln123_2' <Predicate = (!icmp_ln112)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 208 [1/1] (2.44ns)   --->   "%icmp_ln123_3 = icmp_eq  i23 %trunc_ln123_1, i23" [lenet_proj/lenet_support.cpp:123]   --->   Operation 208 'icmp' 'icmp_ln123_3' <Predicate = (!icmp_ln112)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node and_ln123_1)   --->   "%or_ln123_1 = or i1 %icmp_ln123_3, i1 %icmp_ln123_2" [lenet_proj/lenet_support.cpp:123]   --->   Operation 209 'or' 'or_ln123_1' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node and_ln123_1)   --->   "%and_ln123 = and i1 %or_ln123, i1 %or_ln123_1" [lenet_proj/lenet_support.cpp:123]   --->   Operation 210 'and' 'and_ln123' <Predicate = (!icmp_ln112)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 211 [1/2] (5.43ns)   --->   "%tmp_9 = fcmp_ogt  i32 %max1, i32 %max2" [lenet_proj/lenet_support.cpp:123]   --->   Operation 211 'fcmp' 'tmp_9' <Predicate = (!icmp_ln112)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 75 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 212 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln123_1 = and i1 %and_ln123, i1 %tmp_9" [lenet_proj/lenet_support.cpp:123]   --->   Operation 212 'and' 'and_ln123_1' <Predicate = (!icmp_ln112)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 213 [1/1] (0.69ns) (out node of the LUT)   --->   "%max_final = select i1 %and_ln123_1, i32 %max1, i32 %max2" [lenet_proj/lenet_support.cpp:123]   --->   Operation 213 'select' 'max_final' <Predicate = (!icmp_ln112)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 214 [1/1] (9.19ns)   --->   "%gmem_addr_8_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P, i32 %gmem_addr_8, i32" [lenet_proj/lenet_support.cpp:125]   --->   Operation 214 'writereq' 'gmem_addr_8_req' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 9.19>
ST_21 : Operation 215 [1/1] (0.00ns)   --->   "%bitcast_ln125 = bitcast i32 %max_final" [lenet_proj/lenet_support.cpp:125]   --->   Operation 215 'bitcast' 'bitcast_ln125' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_21 : Operation 216 [1/1] (9.19ns)   --->   "%write_ln125 = write void @_ssdm_op_Write.m_axi.i32P, i32 %gmem_addr_8, i32 %bitcast_ln125, i4, i1 %gmem_addr_8_req, i1 %gmem_load_6_req, i1 %gmem_load_5_req, i1 %gmem_load_4_req, i1 %gmem_load_req" [lenet_proj/lenet_support.cpp:125]   --->   Operation 216 'write' 'write_ln125' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 9.19>
ST_22 : Operation 217 [5/5] (9.19ns)   --->   "%gmem_addr_8_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_8, void %write_ln125" [lenet_proj/lenet_support.cpp:125]   --->   Operation 217 'writeresp' 'gmem_addr_8_resp' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 9.19>
ST_23 : Operation 218 [4/5] (9.19ns)   --->   "%gmem_addr_8_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_8, void %write_ln125" [lenet_proj/lenet_support.cpp:125]   --->   Operation 218 'writeresp' 'gmem_addr_8_resp' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 9.19>
ST_24 : Operation 219 [3/5] (9.19ns)   --->   "%gmem_addr_8_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_8, void %write_ln125" [lenet_proj/lenet_support.cpp:125]   --->   Operation 219 'writeresp' 'gmem_addr_8_resp' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 9.19>
ST_25 : Operation 220 [2/5] (9.19ns)   --->   "%gmem_addr_8_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_8, void %write_ln125" [lenet_proj/lenet_support.cpp:125]   --->   Operation 220 'writeresp' 'gmem_addr_8_resp' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 9.19>
ST_26 : Operation 221 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_112_1_VITIS_LOOP_113_2_VITIS_LOOP_114_3_str"   --->   Operation 221 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_26 : Operation 222 [1/1] (0.00ns)   --->   "%empty_36 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64, i64, i64"   --->   Operation 222 'speclooptripcount' 'empty_36' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_26 : Operation 223 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_113_2_VITIS_LOOP_114_3_str"   --->   Operation 223 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_26 : Operation 224 [1/1] (0.00ns)   --->   "%specpipeline_ln114 = specpipeline void @_ssdm_op_SpecPipeline, i32, i32, i32, i32, void @empty_21" [lenet_proj/lenet_support.cpp:114]   --->   Operation 224 'specpipeline' 'specpipeline_ln114' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_26 : Operation 225 [1/1] (0.00ns)   --->   "%specloopname_ln114 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [lenet_proj/lenet_support.cpp:114]   --->   Operation 225 'specloopname' 'specloopname_ln114' <Predicate = (!icmp_ln112)> <Delay = 0.00>
ST_26 : Operation 226 [1/5] (9.19ns)   --->   "%gmem_addr_8_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr_8, void %write_ln125" [lenet_proj/lenet_support.cpp:125]   --->   Operation 226 'writeresp' 'gmem_addr_8_resp' <Predicate = (!icmp_ln112)> <Delay = 9.19> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 227 [1/1] (0.00ns)   --->   "%br_ln0 = br void %bb"   --->   Operation 227 'br' 'br_ln0' <Predicate = (!icmp_ln112)> <Delay = 0.00>

State 27 <SV = 3> <Delay = 0.00>
ST_27 : Operation 228 [1/1] (0.00ns)   --->   "%ret_ln129 = ret" [lenet_proj/lenet_support.cpp:129]   --->   Operation 228 'ret' 'ret_ln129' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 12.6ns, clock uncertainty: 3.4ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten59', lenet_proj/lenet_support.cpp:112) with incoming values : ('add_ln112_1', lenet_proj/lenet_support.cpp:112) [9]  (1.77 ns)

 <State 2>: 5.3ns
The critical path consists of the following:
	'phi' operation ('c', lenet_proj/lenet_support.cpp:112) with incoming values : ('select_ln112_7', lenet_proj/lenet_support.cpp:112) [10]  (0 ns)
	'add' operation ('add_ln112', lenet_proj/lenet_support.cpp:112) [38]  (1.78 ns)
	'add' operation ('add_ln116_4', lenet_proj/lenet_support.cpp:116) [48]  (3.52 ns)

 <State 3>: 8.52ns
The critical path consists of the following:
	'add' operation ('add_ln113', lenet_proj/lenet_support.cpp:113) [57]  (1.74 ns)
	'add' operation ('add_ln116_6', lenet_proj/lenet_support.cpp:116) [66]  (5.31 ns)
	'select' operation ('select_ln113_1', lenet_proj/lenet_support.cpp:113) [67]  (1.48 ns)

 <State 4>: 3.52ns
The critical path consists of the following:
	'add' operation ('add_ln116_2', lenet_proj/lenet_support.cpp:116) [85]  (3.52 ns)

 <State 5>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:116) [89]  (9.2 ns)

 <State 6>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:116) [89]  (9.2 ns)

 <State 7>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:116) [89]  (9.2 ns)

 <State 8>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:116) [89]  (9.2 ns)

 <State 9>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:116) [89]  (9.2 ns)

 <State 10>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:116) [89]  (9.2 ns)

 <State 11>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:116) [89]  (9.2 ns)

 <State 12>: 9.2ns
The critical path consists of the following:
	bus read on port 'gmem' (lenet_proj/lenet_support.cpp:116) [90]  (9.2 ns)

 <State 13>: 9.2ns
The critical path consists of the following:
	bus read on port 'gmem' (lenet_proj/lenet_support.cpp:117) [99]  (9.2 ns)

 <State 14>: 9.2ns
The critical path consists of the following:
	bus read on port 'gmem' (lenet_proj/lenet_support.cpp:118) [106]  (9.2 ns)

 <State 15>: 9.2ns
The critical path consists of the following:
	bus read on port 'gmem' (lenet_proj/lenet_support.cpp:119) [113]  (9.2 ns)

 <State 16>: 5.43ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', lenet_proj/lenet_support.cpp:122) [140]  (5.43 ns)

 <State 17>: 7.11ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', lenet_proj/lenet_support.cpp:122) [140]  (5.43 ns)
	'and' operation ('and_ln122_1', lenet_proj/lenet_support.cpp:122) [141]  (0.978 ns)
	'select' operation ('max2', lenet_proj/lenet_support.cpp:122) [142]  (0.698 ns)

 <State 18>: 0ns
The critical path consists of the following:

 <State 19>: 5.43ns
The critical path consists of the following:
	'fcmp' operation ('tmp_9', lenet_proj/lenet_support.cpp:123) [156]  (5.43 ns)

 <State 20>: 9.2ns
The critical path consists of the following:
	bus request on port 'gmem' (lenet_proj/lenet_support.cpp:125) [168]  (9.2 ns)

 <State 21>: 9.2ns
The critical path consists of the following:
	bus write on port 'gmem' (lenet_proj/lenet_support.cpp:125) [169]  (9.2 ns)

 <State 22>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:125) [170]  (9.2 ns)

 <State 23>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:125) [170]  (9.2 ns)

 <State 24>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:125) [170]  (9.2 ns)

 <State 25>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:125) [170]  (9.2 ns)

 <State 26>: 9.2ns
The critical path consists of the following:
	bus access on port 'gmem' (lenet_proj/lenet_support.cpp:125) [170]  (9.2 ns)

 <State 27>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
