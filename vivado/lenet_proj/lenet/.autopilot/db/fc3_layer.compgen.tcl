# This script segment is generated automatically by AutoPilot

# Memory (RAM/ROM)  definition:
set ID 116
set hasByteEnable 0
set MemName lenet_top_fc3_layer_fc3_biases
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 10
set AddrWd 4
set impl_style auto
set TrueReset 0
set IsROM 1
set ROMData { "10111101000001111001011011010011" "00111101000111101100001101010010" "10111100001000111001000011011111" "10111011100100110101110010101001" "10111100111001010010111110111010" "00111100000000000110001000011011" "10111100111000111101011000000011" "10111100110001000001001101010000" "00111100110101110111110110110000" "00111100101011100111001001101001" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.322
set ClkPeriod 12.6
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 117
set hasByteEnable 0
set MemName lenet_top_fc3_layer_fc3_weights_0
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 252
set AddrWd 8
set impl_style auto
set TrueReset 0
set IsROM 1
set ROMData { "10111110100111001100000001100011" "10111101100001011110011110000111" "10111101111010011111101110110110" "00111101101000100010001110001100" "10111110100010100001010011000000" "10111101111101010000000000000111" "10111100011001010101110010111100" "00111101101000011111010011110100" "00111110100000101010110111111110" "10111110000111111101100110111110" "10111110100000001101011101000101" "10111110010100100001111111011011" "10111110010010110110111010010001" "10111110100101001010100101000100" "00111110000100101111010010001100" "10111110010101111111001000001101" "00111110001100000101011010101000" "10111110011000100000101001011100" "10111101000000110111001101101101" "10111110011000110111100110000100" "00111101101001000000111011001011" "00111110100010010111110011010011" "10111110110101110000011001110011" "10111110000101110100101111010101" "00111110001011110010101110110010" "00111110100101100110110010001010" "00111110100110100001100111100010" "00111101111010101010000110100100" "00111110000001100000011111010100" "10111101000010111111000011111111" "00111101110100010010000110000111" "10111110011101100011100101011001" "00111110011000111010000010000000" "10111110010001010101101000001010" "00111110100000000110011010101010" "10111110100011001011001000011110" "00111110100010000010100010000001" "00111110001100110101001011110011" "00111101101100001010011000101010" "10111101111101000101100110001010" "10111101010100011110010111111100" "10111100001100111101110101101000" "10111101101111010000001111111011" "10111101100000001001010011111111" "00111100111100111010111011001001" "10111101000100011000000000100101" "00111101011100100000000001100011" "00111101110101101001010001010001" "10111110010010011111000101011000" "00111101101011011110111000111010" "00111101100001011011100010010011" "10111101111010100000000010101010" "00111101110101111000011011101110" "10111110110001010100111000010010" "10111101010001010011100111011001" "10111110000101100001100111110000" "00111110010100111011011100010111" "10111110100110011010110001010110" "10111110100101110111000101110010" "10111110000000111011011000111011" "00111101000110100111110100010001" "00111110010010011001110110001110" "00111110111001010001100001011011" "10111110100001000101111100100010" "00111101101001001100100100111011" "00111100100011001010001001110101" "00111101001100011100110100101101" "10111101101111100111010011001000" "10111101100000010100010111110101" "10111110100110111110010000001000" "10111110010111001011100010111000" "00111101101000110100101111001011" "10111110100000111110110101010110" "00111110000111010111000000110011" "10111101100111110110101110000110" "00111101010111111001000101101101" "10111110000010011111101001011110" "00111110011111100111110111010000" "00111110000001101111010001010001" "10111101101101110000011110000100" "10111110010011100010110001110111" "10111110010000000011000111110011" "00111110111001000001011110000010" "10111011110011001110000011101111" "00111110011000111100000101111100" "00111101101001111001101000011101" "10111110100010100010011000101111" "00111100100000010101001111011101" "00111100010111101000111101101101" "00111110011010111110101101101001" "00111101111011011001001011101110" "10111110000011111011100101011110" "10111110000110101111010000110100" "10111110100110111010010001010010" "10111110101010000000010110110110" "00111110100100111110010111101110" "00111110100010100100111111010100" "10111110010101001110110011100011" "00111101100001000010110000101011" "00111110011000110011001100110101" "00111110010011111110101111001001" "00111101000110011101101101010011" "00111101000100010100000010110010" "00111101100101110110000000101010" "10111110100000001010000111000000" "10111101100000011001000010111111" "10111110101010100101100001100111" "10111101101100101000101000101101" "00111110010110110110000000100100" "00111100000111000100110000100110" "10111110000110010011011010111000" "10111101110010000111100010110100" "00111110110001100100101000001011" "10111101011100111011110001001101" "10111110000101111111100010000001" "10111101100101000000000110010001" "00111110100011110100101010000010" "00111110010011010110110001011010" "00111101101011101100101000100100" "00111011000111110110100010111100" "00111101110001111010100001100000" "10111110000001111101110001010101" "00111101101110110011011101001010" "00111110100001100110001110001111" "10111110101100010101001101011011" "10111101110110110011000111110001" "10111101110011110011011111011101" "10111110100110011000111010111100" "00111100010100010011100000101100" "10111110001000001011010100011010" "00111101111110111101101101100010" "00111110011000000101001000101110" "10111010100110010001100110010111" "10111101111100110000101110100111" "00111110000000101111110000111100" "00111011110010010111010010101001" "10111110000110010001100010101001" "00111100100010100110101100110011" "10111101111101111001110110101011" "00111101101010101101111000010100" "10111101101001001011010110100100" "10111110100101110111000001010000" "10111100101110011011101000110001" "10111110010001001111000111111011" "00111101101001010101110000011000" "10111110100011010101011111010110" "00111110000110000101111110001111" "10111110101000111010110001000101" "10111110010001011100110010101011" "00111101111010101011001111100110" "10111100010100000110111111011010" "10111110101000000101111011101111" "10111110011001011111001110101100" "00111110000110111000110100100100" "10111101111111010111010010101011" "10111101101110000000010110001101" "10111110101001011111101100011010" "00111101100000010001110111001011" "00111110101100010000010100110010" "10111110011010011000111111010011" "00111101110111000010110100111000" "10111110010000101110001110101110" "00111110000001101000110101110111" "10111110000101111100110100001100" "00111110100001100010011011001001" "00111110010111010001110111011001" "10111110100011110110000110001110" "10111100000110101101110010011010" "10111110000101000101011100000000" "00111110100110111110100010111110" "00111110001010110000001011011011" "00111110011101001100110100100110" "00111110100000100011100000110011" "10111101100000011111011110100011" "00111110011110101000110000101101" "10111101011001111100011011011001" "00111101101110101100010101100011" "00111110000011111000011111000100" "10111110010011110000011101100000" "00111110100100011010000100110110" "10111110101000110001000000000010" "10111110011101010001111011010111" "10111110000010001100000001010100" "10111101001000000101000010101011" "10111110010101010111010011101000" "00111101011000111010111010100110" "00111110010011010111000110110101" "00111110001101010010101100100011" "10111110010001100110000000111110" "10111101111011010010001101111011" "00111110100000110111001001111101" "00111100111100011100001101010001" "00111100100010001100111110011101" "10111100110000110100001011101011" "10111110001011001100001001110101" "10111110011010100001101010111100" "00111110010000101100111000000000" "00111110010100111011111010000001" "00111101110101100100101011001111" "00111101100000110001010010111110" "00111110010110011000010100110110" "10111110010001000111101011111011" "10111101011000110001111110110010" "00111100011001010010000001110110" "00111101111000010011101000111011" "00111101100101001001011100110110" "10111110100010110011000000011110" "00111101110111011111000010100110" "10111101101111010000111100000011" "00111101000011110100010110111000" "10111101101110110101101100010010" "10111110101001001001111111000110" "00111100111100010000011110000101" "10111101001001010001000011110001" "10111110100111000111100001100111" "10111100110111110000001011010000" "00111101111100010111001101110011" "00111110001000000111110001110111" "10111110100000010111001010010111" "00111110001010101011010011001101" "00111110100001000110100111010101" "00111101111110100100001111000101" "00111110000011111111001001110001" "10111110100101111101011100001010" "10111101011101111101011011100100" "10111110010000110111011111011100" "00111101000111010011011000111111" "00111101110101111101110000110100" "00111110001010110100110010110101" "00111110000011011101100000010111" "10111101011100010011011100001010" "10111101101010111010000111110011" "00111100001111111011000010110000" "10111110110000001000000000001011" "10111110100001111110111110000010" "00111110000001011101111110011011" "00111101100110101011001111110001" "10111110010010101011010110101001" "10111101011100100111110111001100" "00111101110100101010111000001000" "00111110011011111111100011011001" "10111101011000100110110111111111" "10111110011111110111111110100000" "00111101101101011101011110101110" "00111110010110101101101000100000" "10111101000111100110101010001100" "00111110000100010000011000111110" "00111101000001000101010001110000" "10111110100011000110100110111001" "10111011111010100011111001001101" "10111101100010100110111100000010" "00111110001101010000001000000110" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 12.6
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 118
set hasByteEnable 0
set MemName lenet_top_fc3_layer_fc3_weights_1
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 252
set AddrWd 8
set impl_style auto
set TrueReset 0
set IsROM 1
set ROMData { "00111110010010100100111111001110" "00111101110010010010100010111010" "10111110010101001100110100000011" "10111101101111001100111111010110" "00111101110100101000100010111110" "10111110000010101111001111011111" "10111110011101111110101101100000" "00111100111000101000101010001111" "10111110101001101111000001100001" "00111110000010101100010010110110" "10111110100000011110010100001011" "10111101111111110010100110110011" "10111110000011101110110001111001" "10111011101110011101000000000101" "10111110100100010000110010101111" "00111110011110110110111000111101" "10111011101100110000110000000110" "10111101101100000001011100100100" "00111101000011101011101110111101" "00111101101011010100111010111111" "10111110010011111010110010110100" "00111101010001010010111110010010" "00111101100100001001100111001010" "10111110011010001010010000100101" "10111101000010001111101001111000" "00111101111010100011111111001011" "10111110011110001101100011111001" "00111110000001001011110010010010" "10111110011110111010010111101010" "10111100110111110110101011100100" "10111101110110110110111110101011" "00111101111001101110000001101100" "10111101101000100000010001000000" "10111101110001000011011110100011" "10111100111110101111101111101111" "10111110010110100001010011100001" "00111110001001010101001011111100" "00111110001100110000011011111011" "10111110010001111111101010010111" "10111101110010111000110001011010" "00111110011101110110000110011100" "00111100101100111110101111100000" "00111101000000011001111111001000" "10111110110001111001100011010111" "10111101011011111111101100010000" "10111110001000010010010010000001" "10111101010110001111110100000111" "10111110101010001011000101010111" "10111110001000011110001011001110" "10111101110111101011101001011001" "00111110011100111111110000001101" "00111110001000000010000100110001" "10111110100011011011000100000111" "00111101100000000011100001000010" "00111101100111101001011010110000" "00111110100010101010001001100011" "00111101110110000111110010001010" "00111101011110110101100101011101" "00111110010101010110000100011011" "10111100000101011011001100110000" "10111101110000100000110001011101" "10111101010111100000101110110111" "00111100101101000110010011001100" "10111110011111010011000110000110" "00111101100101010001100101011111" "00111110001011001000110010111010" "10111110010110010110010011001111" "10111101101100100100101011110110" "00111110100111101011011101001110" "10111101101110010011010000110001" "00111110011000101101001011101110" "00111110100101110011110111111111" "00111110100111000001001000100010" "10111110011011101100111000011111" "10111110100100011101011000100001" "10111100001010101101011110101111" "10111101110101000010111010100111" "10111110001110011001001001011011" "10111110100110110111010000101110" "10111101101010100111001100000000" "00111101101101101001001000100011" "10111110000000000000101110000010" "00111110011101100110110110110101" "00111101100011010101101100010111" "10111101101001100100000101111111" "00111110010010111100010111101110" "10111101110110101010001011101111" "10111101111110000000101111111010" "10111101010010110100100010111110" "10111011001001010001111011011110" "00111101110000010011010101111011" "00111101000110100000011100111101" "00111101101100001110101100001000" "00111110011101010001001010100111" "00111110000111111111101000110011" "10111110001001001011001011111010" "00111101101100000011011001001100" "10111110100111010110000000001110" "00111110000000010101100000000001" "10111110101111010111100010100101" "00111101101101100111111000011110" "10111101111000110000011001010001" "10111110100000111001110000111010" "00111110100001110001010010101010" "10111011000000100111111101110111" "10111101110010111101100011010000" "00111110101010101100011101010100" "10111110000101010001110111101101" "10111101111101010000011110000100" "10111110000010000111010001001000" "10111101110011111010101100011001" "10111110100101001101000000111000" "00111110011101110011000110100110" "00111110000111010011001011001100" "00111110011001010101011001010110" "00111011001100000110101101101101" "10111110011001001111000100011001" "00111110011000111001011010011010" "10111110100001001110111011010100" "00111110100110111101101110000001" "10111101110100111101011010001100" "10111110100111011100000110111001" "00111110000000001101110001010101" "10111110110110001111011010011000" "10111110001101001100100100101101" "00111100101001000001010110011001" "00111110000011011101011001011011" "10111110010010010010100010100111" "00111101100011110101000100111011" "10111101010110001011100111101011" "00111100000010100001010100100010" "00111101100101111111111001111011" "10111110000111000111001000001001" "00111110010000001011011100101111" "10111110011000010111101111010110" "00111110000111001000101110100011" "00111100001001110001110010001111" "10111110100100011001111110100000" "10111011011001111111100110100100" "10111110000011100001001101111110" "10111110011100010011100110001010" "00111110100110001101001101101100" "00111100001100011101101100101111" "00111101100010001110100010010100" "10111110001101000011011010011001" "10111110101001110011100001001110" "10111111000110101101001010000001" "10111101000000110111111101010110" "10111101011110110011011101100110" "10111110001001100100001101010101" "10111101001100111001011101100111" "00111110100010010011011000111001" "00111110011100001000011110110000" "10111101110001100101000101110000" "10111101001111101100111101001110" "10111101100011111000110001111010" "10111101011011101010111111000001" "10111100010000011001010110010111" "00111110100001001011100101010010" "00111110000111011110100011101100" "00111101101000111110001011100001" "10111101100101010001000011010110" "10111110001100010101001011011000" "10111110101101011110110110101010" "10111101100110101111011010111111" "00111101110010110111110100011101" "10111110010010110001110000100011" "00111110010101001010010110010011" "10111110101000101100011101000000" "10111011111010100100010100101110" "10111101101111111110001001000000" "10111101011010000110000100010101" "10111110100011111111000101111001" "10111101101001111010000010110001" "00111110011000000001101100110110" "00111101100101011111001011111101" "10111110000101010011111000001110" "00111110100011010101001011111001" "00111110001011010010101100111010" "00111110010000111111100111110010" "10111110011100100010101001110100" "10111010111010110001001010001000" "10111101000000000011111101100011" "00111100100011001111100011001100" "00111110010101001001111110100010" "10111110001100111001111111010011" "00111101100111001101110010101000" "10111101010010110101001011111101" "10111101100101110111100010110000" "00111110100001001010010101101011" "00111101111111010000101001111010" "00111110100000110001001001110000" "10111101110110011110011110010010" "00111110111010111101000011010111" "00111110001000111111001010000110" "10111110100000000111001110111000" "00111110011101001011010111000101" "00111101110111000110100010010001" "10111101111000001110010110000000" "10111110000110010001101100101000" "00111110010010111010011110101110" "10111110000100100010001011111010" "00111101011000101110101100010100" "10111101100011011101000101000001" "00111101011110011011101011100111" "00111100101001111011011110111010" "10111101100111111000100010010100" "10111101111100111010000010011010" "10111110100011000111101010010000" "00111101000100001101110101100101" "00111100010000101000010000110100" "00111110101001111111101011101001" "10111110001101110110111010000010" "10111110001110110101111001110111" "10111101100000110101101001101011" "10111011110100011101111001101111" "10111101101101001100000011101001" "00111110000110110000000000001001" "00111110011101000001011001011000" "10111110100101110010111111011011" "10111110000010110100010111111110" "10111101101110001001111100011000" "10111101100111111001001111111000" "10111101011010010000110111111110" "10111110101001100000100100111110" "10111010110011010100100001001000" "10111110101110101101110001010011" "00111101010101000111010110001011" "00111110100010110100001100000001" "00111110100101100110101101111100" "10111110101100001000001101010111" "10111101111000010100110000101000" "10111110010110100101010000100011" "00111110011100100101100100000100" "10111110010001010100111110010111" "10111101110011011001010001101010" "10111110110000011010010111010000" "00111110010000111101001110000100" "00111101111011110000010010111101" "00111101000011111000111111111011" "10111101101001000011001101101010" "00111110100100100010100000001101" "00111110011110001010000000100100" "10111110010110011011110110011100" "00111101010000110001100010101001" "10111110001110110101000101010100" "00111110011011101100011010111110" "10111110001100011100111111010111" "10111101111000010101011011111111" "10111101011000110110001100000001" "10111110000110000100110010110101" "10111101000010100001111011101101" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 12.6
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 119
set hasByteEnable 0
set MemName lenet_top_fc3_layer_fc3_weights_2
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 252
set AddrWd 8
set impl_style auto
set TrueReset 0
set IsROM 1
set ROMData { "10111110100110100001000010001110" "00111110100001010111010010011000" "00111101100111100100000111101100" "10111101011001111110000110111110" "00111110010001010110110010010101" "00111110010110001011111111100011" "10111110010110011100110000111001" "10111101111100011100110101011110" "00111101101101110111111011010001" "10111110100010011101000101001100" "10111101011010111011101001100001" "00111100100111010001000010000111" "10111101010101001000001010000110" "00111100110111001110000000100000" "00111110100000110111000010010010" "10111110110010101111101101100110" "10111110100111110100000110000000" "10111100101000111000011000101100" "00111110010011011011011100111110" "00111101000110010011111101001001" "00111110001001001000110011101111" "00111110100100011110110111111001" "10111110100100101011101101010111" "10111110100110101010011100101011" "00111101000111100010001001010101" "00111101111111011011001010100101" "00111110011000110101110001011010" "00111110000011111011010111110100" "00111010011100101110100100010110" "10111110100001001101011001100100" "10111100010111000000110011111100" "00111110001010010101010110001000" "00111110100100001011111100000000" "00111101000010101111001000100001" "10111100111000001101001101101010" "00111101001110100110010100001110" "00111110001010000100010111001000" "10111110001110111111000001100111" "10111110110011100001010001011001" "00111110001101000110010111111010" "10111110010010101010000100111110" "10111100010000011010100011000010" "10111100101011010101000010010000" "10111110011011110100001100101111" "00111110001111000011001111100111" "10111101101111011011011111000000" "10111110010000101110001011100000" "10111100001111000110101000011110" "00111101010111110011000011101000" "10111110100100010101101000111011" "10111110001011001100001000110111" "00111110010110000101000100111011" "00111100001010010111110111001000" "00111100101010000101111000011101" "10111101110000001010110011000011" "00111101010101001110011000101110" "00111101101111100101100011100101" "10111110001001010001011101101111" "00111101000110011110011110000101" "00111110011111001101010000110010" "00111101101001000010010000100100" "00111101011011110100011001101111" "10111110001011101010001001101100" "10111110000110000000110000011011" "00111110011110110010100101000000" "00111110010000011101110000100010" "00111110100110111110010110000100" "10111011001101001100011101110010" "00111101110011011011111101000011" "00111100111111010101101110101011" "10111110000000110000010111101001" "00111110001000001001001001010001" "10111110010010000000101001010000" "00111110100101100011001110000011" "10111101010001000110011111000110" "00111101110110111110010001111110" "00111110100100111011001111110001" "00111110000100001101111101101101" "00111110101000001011001010001000" "00111101010011010100001111011011" "00111101110100101000001110001010" "10111100101110111010111111001001" "10111110001110000101111101010101" "10111110100000010101010100110101" "00111100111111110100001011010001" "00111101111101011100100100001100" "00111110000011000010001010001111" "00111101111001001100000111010000" "10111110001110001110001100011101" "10111101100110111000001010100000" "10111011111111101110111000011101" "10111101100001111110100001100111" "10111110100001100010111011110110" "10111110001000000100100010010110" "00111110010011101100000011111010" "00111110010001000100010010011001" "10111101110011011101111110111011" "00111100100100011000011110010010" "10111100111100001000000011011100" "00111101110000101100011000000110" "00111110001001110010001111010100" "10111101101111101111110011010011" "10111101110101110101000001000101" "10111110110100000001100111100001" "10111110101000100111011011011011" "10111101110010111110110011011011" "10111100101100001000111111010000" "10111110000011100010111100111110" "10111101111101000001111110101011" "10111110001100111110011110100111" "10111110010111101011111111001101" "10111101111110100010101110010111" "00111110101011001000000111010110" "10111110111101000010100111101100" "00111110010100011100111010100000" "10111110001110100000111010101100" "10111110101001110000010111011000" "10111101000000100111111010110011" "00111110011111000010100000000001" "10111101000110100001100011001110" "00111110001011001100111101010011" "00111110001101010101101101110100" "10111100111111000000011111100011" "10111101110110011001101101011110" "00111110000011010001011101101101" "10111110101010111000110010000001" "10111110000110111001010010000010" "10111110100001100001100110000011" "00111100110110110101010001001010" "00111110011001111010101111110010" "10111110000101001001010000111011" "00111110010010011011101001001010" "00111110010101000101101101010110" "10111101100000110110111011110011" "10111110011101010000100011001101" "10111101101011101101000001001100" "10111110100100111100100110010011" "10111101101010110111000011011111" "00111110001111110011000100001100" "10111110111100111111010111100010" "10111101010111001011110010101111" "10111101100000101010000010001101" "10111110100101001000111110011110" "00111101100101100101011010101001" "10111110011111101110000011000000" "00111101100101001010001011111000" "10111101101010101111100010101000" "10111110011110100111111010011110" "10111110010000000100000110111110" "00111101111100110011001010011010" "10111110011100110010000010001101" "10111110001101010100110011101000" "10111101100111000001111000111000" "00111101011101110101111100100010" "10111110110011101011110010100100" "00111100110001001101011101100101" "10111101110111101111010000011011" "00111110010110110010111000101000" "00111011100101011010101000001011" "00111101011101010100001110101100" "10111101001000000100010000110110" "10111110000100100010010100100000" "00111110000010111100001001011101" "10111110101110101011100001101011" "00111110100110010110100101101001" "10111110000111110101001000010111" "00111110010010110101000011000111" "10111110100000011110111100111010" "00111110011011110010111100010111" "10111110010011101000010011110100" "10111101011011010110101100000101" "10111110100011010111111001001000" "00111110100100101010101101101100" "10111110000100000011000111101001" "00111110000011101100001110000011" "00111101000101111100011010101110" "10111110100100100111001011100101" "10111110011001001010011001111010" "00111101101100111000100010101101" "10111110011110110011010011011111" "10111110010111101111011011010100" "00111101110011100101010010001000" "10111110010000100000011101111111" "10111101110010010010111010100001" "10111110001111101100001001000011" "10111100000010100111001101001011" "10111110101110010011110010101101" "10111110100010011011111010001011" "10111110011010011011000100011110" "00111110000001111101000100000000" "00111100011000000110110010000111" "10111101101011111100001100010011" "00111110001101100110000000011111" "10111110110000101001101011100001" "10111101101100111010010110111100" "00111101100111110110110010010110" "00111110000010101101111101010010" "00111110000001101001001101101101" "00111101100110001000111000001100" "00111110001101001000000001100010" "00111101000011000000011101000000" "10111101100001110110111100101110" "00111110010001110111100011011000" "00111110101011010111001111010011" "10111110000010101011010110100010" "10111110001011001011010011011011" "10111110101000110101010111010110" "10111110100101001100111010001100" "10111110101011110011000101111111" "00111110101001010110011011000110" "00111110001010101111100010010010" "00111101011010111010101111111000" "10111110000010100101000010110001" "00111101110111100100011101000111" "10111100111111000110111011011100" "10111110011110101100001011011100" "00111110000001001101001111010011" "00111101001110101010110011100111" "00111110010011001000010000011111" "10111101011101110000101100100111" "10111110010100111111111000001101" "00111110011001101111101111010011" "10111100101100101111001110011000" "00111110000010010101011001010011" "10111110101011100100110001000011" "00111101110100110010100100010110" "00111101101110001101000001111110" "00111110100010011000110110101010" "00111110011011000111001010111000" "10111101101111111111100111001111" "00111101001101101001000101000111" "00111110000100110101000110000010" "10111101100001011001100101100101" "00111101111001110011001111010000" "00111110010111101011000011000001" "10111101101110111001100000111110" "10111110000110001001010011011100" "10111110110000111100010001001001" "00111110010011110010011001100101" "10111110101001100000100101111001" "00111110011000111000111100011010" "10111110010000111110010010110110" "00111101101010011010101101110000" "10111110100011110000101001111011" "00111110011011101110001110011100" "10111101110000010110100110000010" "10111110010011001100101001110010" "00111101010101000010000001100001" "10111100110101111001001111010000" "00111110011011011001100111101001" "10111110011101010101010010010010" "10111110010100001011010010100001" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 12.6
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 120
set hasByteEnable 0
set MemName lenet_top_fc3_layer_logits
set CoreName ap_simcore_mem
set PortList { 2 3 }
set DataWd 32
set AddrRange 10
set AddrWd 4
set impl_style auto
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.322
set ClkPeriod 12.6
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 121 \
    name gmem \
    type other \
    dir IO \
    reset_level 1 \
    sync_rst true \
    corename dc_gmem \
    op interface \
    ports { m_axi_gmem_AWVALID { O 1 bit } m_axi_gmem_AWREADY { I 1 bit } m_axi_gmem_AWADDR { O 64 vector } m_axi_gmem_AWID { O 1 vector } m_axi_gmem_AWLEN { O 32 vector } m_axi_gmem_AWSIZE { O 3 vector } m_axi_gmem_AWBURST { O 2 vector } m_axi_gmem_AWLOCK { O 2 vector } m_axi_gmem_AWCACHE { O 4 vector } m_axi_gmem_AWPROT { O 3 vector } m_axi_gmem_AWQOS { O 4 vector } m_axi_gmem_AWREGION { O 4 vector } m_axi_gmem_AWUSER { O 1 vector } m_axi_gmem_WVALID { O 1 bit } m_axi_gmem_WREADY { I 1 bit } m_axi_gmem_WDATA { O 32 vector } m_axi_gmem_WSTRB { O 4 vector } m_axi_gmem_WLAST { O 1 bit } m_axi_gmem_WID { O 1 vector } m_axi_gmem_WUSER { O 1 vector } m_axi_gmem_ARVALID { O 1 bit } m_axi_gmem_ARREADY { I 1 bit } m_axi_gmem_ARADDR { O 64 vector } m_axi_gmem_ARID { O 1 vector } m_axi_gmem_ARLEN { O 32 vector } m_axi_gmem_ARSIZE { O 3 vector } m_axi_gmem_ARBURST { O 2 vector } m_axi_gmem_ARLOCK { O 2 vector } m_axi_gmem_ARCACHE { O 4 vector } m_axi_gmem_ARPROT { O 3 vector } m_axi_gmem_ARQOS { O 4 vector } m_axi_gmem_ARREGION { O 4 vector } m_axi_gmem_ARUSER { O 1 vector } m_axi_gmem_RVALID { I 1 bit } m_axi_gmem_RREADY { O 1 bit } m_axi_gmem_RDATA { I 32 vector } m_axi_gmem_RLAST { I 1 bit } m_axi_gmem_RID { I 1 vector } m_axi_gmem_RUSER { I 1 vector } m_axi_gmem_RRESP { I 2 vector } m_axi_gmem_BVALID { I 1 bit } m_axi_gmem_BREADY { O 1 bit } m_axi_gmem_BRESP { I 2 vector } m_axi_gmem_BID { I 1 vector } m_axi_gmem_BUSER { I 1 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 122 \
    name fc3_input \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_fc3_input \
    op interface \
    ports { fc3_input { I 64 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 123 \
    name predicted_class \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_predicted_class \
    op interface \
    ports { predicted_class { I 64 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


